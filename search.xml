<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>吉林大学2022秋季超星学习通程序设计第五章到第九章</title>
      <link href="/2022/12/03/%E5%90%89%E6%9E%97%E5%A4%A7%E5%AD%A62022%E7%A7%8B%E5%AD%A3/%E8%B6%85%E6%98%9F%E5%AD%A6%E4%B9%A0%E9%80%9A/5-9/"/>
      <url>/2022/12/03/%E5%90%89%E6%9E%97%E5%A4%A7%E5%AD%A62022%E7%A7%8B%E5%AD%A3/%E8%B6%85%E6%98%9F%E5%AD%A6%E4%B9%A0%E9%80%9A/5-9/</url>
      
        <content type="html"><![CDATA[<h1>实验05 指针及其在程序设计中的应用（2022级）</h1><ol><li>(程序题)<br>题目编号：Exp05-Basic01，GJBook3-07-06</li></ol><p>题目名称：字符串长度</p><p>题目描述：编写程序实现：使用自编函数int strlen(char *str)，求字符串str长度；并在主程序中调用。</p><p>输入：从键盘随机输入长度不超过256的字符串，字符串内可能包含若干空白字符。</p><p>输出：字符串的长度。</p><p>样例1：</p><p>输入：123  456<br>输出：8<br>样例2：</p><p>输入：A<br>输出：1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">strlen</span><span class="params">(<span class="type">char</span>* str)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">257</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%[^\n]&quot;</span>, str);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">strlen</span>(str));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">strlen</span><span class="params">(<span class="type">char</span>* str)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; str[i] != <span class="string">&#x27;\0&#x27;</span>; i++);</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>(程序题)<br>题目编号：Exp05-Basic02，GJBook3-07-14</li></ol><p>题目名称：分类统计字符</p><p>题目描述：</p><p>编写程序实现：使用自定义函数void count(char * str, int * upper, int *lower, int *space, int <em>num, int</em>other)统计给定字符串str中的大写字母、小写字母、空格、数字字符、其它字符的数目，并以指针参数传回主程序中的调用点，并输出。</p><p>输入：从键盘随机输入一个长度不超过256的字符串，字符串内可能包含若干空白字符。</p><p>输出：大写字母字符个数、小写字母字符个数、空格字符个数、数字字符个数和其它字符个数，数字间以一个西文空格间隔，最后一个数后无多余字符。</p><p>样例：</p><p>输入：<br>123  abc   ABC<br>输出：<br>3 3 5 3 0</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">count</span><span class="params">(<span class="type">char</span>* str, <span class="type">int</span>* upper, <span class="type">int</span>* lower, <span class="type">int</span>* space, <span class="type">int</span>* num, <span class="type">int</span>* other)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">257</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> upper = <span class="number">0</span>, lower = <span class="number">0</span>, space = <span class="number">0</span>, num = <span class="number">0</span>, other = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%[^\n]&quot;</span>, str);</span><br><span class="line"><span class="built_in">count</span>(str, &amp;upper, &amp;lower, &amp;space, &amp;num, &amp;other);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d %d&quot;</span>, upper, lower, space, num, other);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">count</span><span class="params">(<span class="type">char</span>* str, <span class="type">int</span>* upper, <span class="type">int</span>* lower, <span class="type">int</span>* space, <span class="type">int</span>* num, <span class="type">int</span>* other)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; str[i] != <span class="number">0</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (str[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">(*upper)++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (str[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">(*lower)++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (str[i] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">(*space)++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (str[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">(*num)++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">(*other)++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>(程序题)<br>题目编号：Exp05-Basic03，GJBook3例-07-01</li></ol><p>题目名称：排序二维数组</p><p>题目描述：编写程序对输入的二维整型矩阵进行递增排序。</p><p>输入：第一行输入两个正整数n和m （n, m&lt;=50）分别对应矩阵的行数和列数。随后n行，每行输入m个整数，每个整数间以空格间隔。</p><p>输出：排序后的矩阵：共n行，每行m个整数，之间以一个西文空格间隔，每行最后一个数字后除必要的回车换行符无其它字符，最后一行末尾无任何多余字符。</p><p>样例：</p><p>输入：<br>2 3<br>9 6 5<br>1 2 3<br>输出：<br>1 2 3<br>5 6 9</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Sort</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> n)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> m, n, k;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">100</span>][<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> onearr[<span class="number">1000</span>] = &#123; <span class="number">0</span> &#125;; <span class="comment">//二维转为一维</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i][j]);</span><br><span class="line"></span><br><span class="line">k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++, k++)</span><br><span class="line">onearr[k] = arr[i][j];</span><br><span class="line"></span><br><span class="line"><span class="built_in">Sort</span>(onearr, n * m);</span><br><span class="line">k = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">k++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, onearr[k]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; m; j++) &#123;</span><br><span class="line">k++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, onearr[k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//一维数组选择排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Sort</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="type">int</span> k = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[k] &gt; arr[j])</span><br><span class="line">k = j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> swap = arr[i];</span><br><span class="line">arr[i] = arr[k];</span><br><span class="line">arr[k] = swap;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>(程序题)<br>题目编号 ：Exp05-Basic04，GJBook3-07-11</li></ol><p>题目名称：字符串部分删除</p><p>题目描述：</p><p>编写程序实现：使用自编函数char * str_delete(char *s, int v, int w)从字符串s的第v个字符开始删除w个字符，并将处理后的字符串首地址以函数返回值带回调用点。</p><p>输入：</p><p>第一行输入两个整数分别对应 v和w（0≤v, w&lt;MIN(256,strlen(s))）,测试数据已保证v和w符合要求；</p><p>第二行输入一个长度不超过256的字符串，字符串可能含有空格。</p><p>输出：</p><p>处理后的字符串。</p><p>样例：</p><p>输入：<br>2 6<br>ABCDEFGH 12345<br>输出：<br>AH 12345</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">char</span>* <span class="title">str_delete</span><span class="params">(<span class="type">char</span>* s, <span class="type">int</span> v, <span class="type">int</span> w)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> v, w;</span><br><span class="line"><span class="type">char</span> s[<span class="number">300</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;v, &amp;w);</span><br><span class="line"><span class="built_in">getchar</span>();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%[^\n]&quot;</span>, s);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, <span class="built_in">str_delete</span>(s, v, w));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">char</span>* <span class="title">str_delete</span><span class="params">(<span class="type">char</span>* s, <span class="type">int</span> v, <span class="type">int</span> w)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; w; i++, n--) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = v - <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">s[j] = s[j + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>(程序题)<br>题目编号：Exp05-Enhanc02，freshman-1031</li></ol><p>题目名称：合法标识符</p><p>题目描述：</p><p>已知C语言中合法标识的定义是，以_或字母开始，并由_、数字、字母构成的连续字符串。编写程序判断给定的字符串是否是合法C语言标识符。</p><p>输入：输入第一行给出正整数 N（≤10^2）是输入的字符串个数。随后 N 行，每行给出1个任意长度的字符串（可能含有空白字符，长度不超过256）。</p><p>输出：</p><p>输出第一行以Valid:X 格式给出合法标识符个数 X，第二行以Invalid:Y 格式给出非法标识符个数 Y，无多余字符，冒号为西文冒号。</p><p>样例：</p><p>输入：<br>2<br>1242345567788990<br>abcdedffesfsgfef<br>输出：<br>Valid:1<br>Invalid:1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Detect_Str</span><span class="params">(<span class="type">char</span>* s, <span class="type">int</span>* valid, <span class="type">int</span>* invalid)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, valid, invalid;</span><br><span class="line"><span class="type">char</span> str[<span class="number">300</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">valid = <span class="number">0</span>;</span><br><span class="line">invalid = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line"><span class="built_in">Detect_Str</span>(str, &amp;valid, &amp;invalid);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Valid:%d\nInvalid:%d&quot;</span>, valid, invalid);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//监测字符串是否合法</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Detect_Str</span><span class="params">(<span class="type">char</span>* str, <span class="type">int</span>* valid, <span class="type">int</span>* invalid)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (str[<span class="number">0</span>] != <span class="string">&#x27;_&#x27;</span> &amp;&amp; (str[<span class="number">0</span>] &lt; <span class="string">&#x27;a&#x27;</span> || str[<span class="number">0</span>]&gt;<span class="string">&#x27;z&#x27;</span>) &amp;&amp; (str[<span class="number">0</span>] &lt; <span class="string">&#x27;A&#x27;</span> || str[<span class="number">0</span>]&gt;<span class="string">&#x27;Z&#x27;</span>)) &#123;</span><br><span class="line">(*invalid)++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="built_in">strlen</span>(str); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (str[i] != <span class="string">&#x27;_&#x27;</span> &amp;&amp; (str[i] &lt; <span class="string">&#x27;a&#x27;</span> || str[i]&gt;<span class="string">&#x27;z&#x27;</span>) &amp;&amp; (str[i] &lt; <span class="string">&#x27;A&#x27;</span> || str[i]&gt;<span class="string">&#x27;Z&#x27;</span>) &amp;&amp; (str[i] &lt; <span class="string">&#x27;0&#x27;</span> || str[i]&gt;<span class="string">&#x27;9&#x27;</span>)) &#123;</span><br><span class="line">(*invalid)++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">(*valid)++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>实验06 结构体（2022级）</h1><ol><li>(程序题)<br>题目编号 ：Exp07-Basic01</li></ol><p>题目名称：复数运算</p><p>题目描述：复数可以写成A+Bi的常规形式，其中A是实部，B是虚部，i是虚数单位，满足i^2=-1。</p><p>编写程序，分别计算两个复数的和、差、积。</p><p>输入：在一行中依次给出两个复数的实部和虚部，数字间以一个西文空格分隔。</p><p>输出：一行中按照A+Bi的格式输出两虚数的和、差、积，实部和虚部均保留2位小数；</p><p>如果B是负数，则应该写成A-|B|i的形式；如果B是零则不输出虚部；结果间以4个西文空格间隔。</p><p>样例1：</p><p>输入： 2.3 3.5 5.2 0.4<br>输出： 7.50+3.90i    -2.90+3.10i    10.56+19.12i<br>样例2：</p><p>输入： 3.3 4.5 3.3 -4.5<br>输出： 6.60    0.00+9.00i    31.14</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">And</span><span class="params">(<span class="keyword">struct</span> complex* c1, <span class="keyword">struct</span> complex* c2)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Poor</span><span class="params">(<span class="keyword">struct</span> complex* c1, <span class="keyword">struct</span> complex* c2)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Product</span><span class="params">(<span class="keyword">struct</span> complex* c1, <span class="keyword">struct</span> complex* c2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">complex</span> &#123;</span><br><span class="line"><span class="type">float</span> R; <span class="comment">//real</span></span><br><span class="line"><span class="type">float</span> C; <span class="comment">//complex</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">complex</span> c1, c2;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f %f %f %f&quot;</span>, &amp;(c1.R), &amp;(c1.C), &amp;(c2.R), &amp;(c2.C));</span><br><span class="line"></span><br><span class="line"><span class="built_in">And</span>(&amp;c1, &amp;c2);</span><br><span class="line"><span class="built_in">Poor</span>(&amp;c1, &amp;c2);</span><br><span class="line"><span class="built_in">Product</span>(&amp;c1, &amp;c2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//和</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">And</span><span class="params">(<span class="keyword">struct</span> complex* c1, <span class="keyword">struct</span> complex* c2)</span> </span>&#123;</span><br><span class="line"><span class="type">float</span> Rnum = c1-&gt;R + c2-&gt;R;</span><br><span class="line"><span class="type">float</span> Cnum = c1-&gt;C + c2-&gt;C;</span><br><span class="line"><span class="keyword">if</span> (Cnum != <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f%+.2fi    &quot;</span>, Rnum, Cnum);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f    &quot;</span>, Rnum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//差</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Poor</span><span class="params">(<span class="keyword">struct</span> complex* c1, <span class="keyword">struct</span> complex* c2)</span> </span>&#123;</span><br><span class="line"><span class="type">float</span> Rnum = c1-&gt;R - c2-&gt;R;</span><br><span class="line"><span class="type">float</span> Cnum = c1-&gt;C - c2-&gt;C;</span><br><span class="line"><span class="keyword">if</span> (Cnum != <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f%+.2fi    &quot;</span>, Rnum, Cnum);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f    &quot;</span>, Rnum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//积</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Product</span><span class="params">(<span class="keyword">struct</span> complex* c1, <span class="keyword">struct</span> complex* c2)</span> </span>&#123;</span><br><span class="line"><span class="type">float</span> Rnum = (c1-&gt;R * c2-&gt;R) - (c1-&gt;C * c2-&gt;C);</span><br><span class="line"><span class="type">float</span> Cnum = (c1-&gt;R * c2-&gt;C) + (c1-&gt;C * c2-&gt;R);</span><br><span class="line"><span class="keyword">if</span> (Cnum != <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f%+.2fi&quot;</span>, Rnum, Cnum);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, Rnum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>(程序题)<br>【计2016级期末试题】构造一个表示教师的结构体（包含3个字段：姓名、性别、年龄），编写函数，读入n个教师的信息，存入一个结构体数组中（如下图所示）。最后输出第n/2个教师的信息。</li></ol><p>例如：一个教师的信息为zhangsan、false、50，另一个教师的信息为lisi、false、37。</p><p>输入：依次输入一个正整数n及n个教师的姓名、性别、年龄。（说明：n不大于10；姓名长度不超过20个英文字符；性别输入0/1表示女/男）。</p><p>输出：数组下标为n/2的教师信息。（说明：n/2直接截取整数，不进行四舍五入；性别输出Female/Male表示女/男；每个数据后均有1个空格）。</p><p>样例1：</p><p>输入：1 zhangsan 0 50</p><p>输出：zhangsan Female 50</p><p>样例2：</p><p>输入：4 zhangsan 0 50 lisi 1 28 wangwu 0 30 zhaoliu 1 34</p><p>输出：wangwu Female 30</p><p>样例3：</p><p>输入：5 zhangsan 0 50 lisi 1 28 wumei 0 30 zhaoliu 1 34 wangermazi 1 18</p><p>输出：wumei Female 30</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">person</span> &#123;</span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> gender;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">&#125;arr[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s %d %d&quot;</span>, arr[i].name, &amp;(arr[i].gender), &amp;(arr[i].age));</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> x = n / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (arr[x].gender == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s Female %d&quot;</span>, arr[x].name, arr[x].age);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s Male %d&quot;</span>, arr[x].name, arr[x].age);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>实验07 递归程序设计（2022级）</h1><ol><li>(程序题)<br>题目编号：Exp06-Basic01，GJBook3-10-02</li></ol><p>题目名称：排列组合</p><p>问题描述：编写程序求函数C(m,n)的值。</p><p>输入：从键盘随机输入一个自然数和一个非负整数，分别作为m和n的值（m≥n）。</p><p>输出：函数C(m,n)的值。</p><p>样例1：</p><p>输入：</p><p>4  1</p><p>输出：</p><p>4</p><p>样例2：</p><p>输入：<br>6 2<br>输出：<br>15</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//C(3, 2)</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Range</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n &lt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">0</span> || m == n)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Range</span>(m - <span class="number">1</span>, n - <span class="number">1</span>) + <span class="built_in">Range</span>(m - <span class="number">1</span>, n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> m, n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">Range</span>(m, n));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>(程序题)<br>题目编号：Exp06-Basic02，GJBook3-10-03</li></ol><p>题目名称：Hermite多项式</p><p>题目描述：编写程序，用递归方法求解Hermite 多项式值。Hermite 多项式定义如下。</p><p>GJBook3-10-03.jpg</p><p>输入：从键盘随机输入一个非负整数和一个实数，作为n和x的值。</p><p>输出：H~n~(x)的值，精确到小数点后2位。</p><p>样例1：</p><p>输入：<br>0  1.5<br>输出：<br>1.00<br>样例2：</p><p>输入:<br>2  2.4<br>输出：<br>21.04</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">Hermite</span><span class="params">(<span class="type">int</span> n, <span class="type">float</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1.0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span> * x;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span> * x * <span class="built_in">Hermite</span>(n - <span class="number">1</span>, x) - <span class="number">2</span> * (n - <span class="number">1</span>) * <span class="built_in">Hermite</span>(n - <span class="number">2</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">float</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %f&quot;</span>, &amp;n, &amp;x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, <span class="built_in">Hermite</span>(n, x));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>(程序题)<br>题目编号：Exp06-Basic03，GJBook3-10-04</li></ol><p>题目名称：Ackerman函数</p><p>问题描述：编写程序，计算 Ackerman 函数值。Ackerman 函数定义如下</p><p>输入：从键盘随机输入两个非负整数，分别作为m和n的值。</p><p>输出：Ack(m, n)的值。</p><p>样例1：输入 2 3  输出 9</p><p>样例2：输入 3 2  输出 29</p><p>样例3：输入 0 3  输出 4</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Ackerman</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (m == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Ackerman</span>(m - <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Ackerman</span>(m - <span class="number">1</span>, <span class="built_in">Ackerman</span>(m, n - <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> m, n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">Ackerman</span>(m, n));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>(程序题)<br>题目编号 ：Exp06-Basic04</li></ol><p>题目名称：最大公因数</p><p>题目描述：编写程序，用递归方法求解m、n最大公约数。对正整数u和v 可以采用欧几里德辗转相除算法求它们的最大公因数，具体过程如下：</p><p>u% v → r~1~</p><p>v % r~1~ → r~2~</p><p>r~1~% r~2~ → r~3~</p><p>r~2~ % r~3~ → r~4~</p><p>… …</p><p>r~n-1~% r~n~ → r~n+1~=0</p><p>当余数r~n+1~=0时，计算过程结束，r~n~ 为正整数u 、v的最大公因数。</p><p>输入：从键盘随机输入两个正整数m和n。输出：最大公因数。</p><p>样例1：</p><p>输入：<br>12 15<br>输出：<br>3<br>样例2：</p><p>输入：<br>28 49<br>输出：<br>7</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//求最大公约数（递归）</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> u ,<span class="type">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (v == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">gcd</span>(v, u % v);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> u, v;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;u, &amp;v);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">gcd</span>(u, v));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>(程序题)<br>题目编号：Exp06-Basic05，GJBook3-10-06</li></ol><p>题目名称：顺序检索</p><p>题目描述：编写程序，用递归方法在整数组中进行顺序检索。</p><p>输入：</p><p>第一行输入一个正整数n（0&lt;n≤100），表示数组的元素个数；</p><p>第二行依次输入n个整数，作为数组的元素；</p><p>第三行输入待检索的关键字。</p><p>输出：</p><p>如果数组中含有关键字，则输出其首次出现的位置（下标值较小的位置）否则输出NULL。</p><p>样例1：</p><p>输入：<br>8<br>0 2 3 4 5 9 10 8<br>3<br>输出：<br>2<br>样例2：</p><p>输入：<br>8<br>0 2 3 4 5 9 10 8<br>6<br>输出：<br>NULL</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//顺序检索（递归）</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Detect</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> head, <span class="type">int</span> tail, <span class="type">int</span> key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (head &gt; tail) &#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NULL&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (arr[head] == key)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Detect</span>(arr, head + <span class="number">1</span>, tail, key);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, key, k;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;key);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">k = <span class="built_in">Detect</span>(a, <span class="number">0</span>, n, key);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (k &gt;= <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, k);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>(程序题)<br>题目编号：Exp06-Enhance01，GJBook3-10-05</li></ol><p>题目名称：最大元素</p><p>题目描述：编写程序，用递归方法求解长度为n的整型数组中最大元素值。</p><p>输入：第一行输入一个正整数n（0&lt;n≤100），表示数组的元素个数；第二行依次输入n个整数，作为数组的元素。</p><p>输出：最大元素的值。</p><p>样例1：</p><p>输入：<br>10<br>9 8 7 6 5 4 3 2 1 0<br>输出：<br>9<br>样例2：</p><p>输入：<br>10<br>0 1 2 3 4 5 6 7 8 9<br>输出：<br>9</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//求一维数组最大元素（递归）</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Max</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="type">int</span> num = <span class="built_in">Max</span>(arr, n - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> arr[n] &gt; num ? arr[n] : num;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">Max</span>(a, n - <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>(程序题)<br>题目编号：Exp06-Enhance02</li></ol><p>题目名称：数组反序</p><p>题目描述：编写程序，用递归方法反序数组。</p><p>输入：第一行输入一个正整数n（0&lt;n≤100），表示数组的元素个数；第二行依次输入n个整数，作为数组的元素。</p><p>输出：顺次输出逆序后数组中元素，元素间以一个西文空格间隔，最后一个元素后无字符。</p><p>样例1：</p><p>输入：<br>8<br>0 2 3 4 5 9 10 8<br>输出：<br>8 10 9 5 4 3 2 0<br>样例2：</p><p>输入：<br>5<br>0 2 3 3 5<br>输出：<br>5 3 3 2 0</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">reverse</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> head, <span class="type">int</span> tail)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (head == tail - <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> arr[head];</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, <span class="built_in">reverse</span>(arr, head + <span class="number">1</span>, tail));</span><br><span class="line"><span class="keyword">return</span> arr[head];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">reverse</span>(a, <span class="number">0</span>, n));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li>(程序题)<br>题目编号 ：Exp06-Enhance03</li></ol><p>题目名称：截木条</p><p>题目描述：</p><p>给定一个长度为n的木条，将其在大致2/5的位置截断，得到2个长度仍为整数的木条；如果新得到的木条的长度仍旧超过规定长度k，将继续按照上述方法处理得到的木条，直到所有木条的长度都不大于k。</p><p>编写程序，用递归方法计算一个长度为n的木条，当规定长度为k时，其经过上述截断过程会得到多少根木条。其中：n、k均为正整数，且假设木条截断所得短木条长度四舍五入为正整数，长木条长度为总长减去短木条长度。</p><p>输入：顺次从键盘输入两个正整数n和k。</p><p>输出：木条根数。</p><p>样例1：</p><p>输入： 20  4<br>输出： 7<br>样例2：</p><p>输入： 3 20<br>输出： 1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//截木条（递归）</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">CutTree</span><span class="params">(<span class="type">float</span> n, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n - <span class="built_in">int</span>(n) &gt;= <span class="number">0.5</span>)</span><br><span class="line">n = <span class="built_in">int</span>(n) + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">n = <span class="built_in">int</span>(n);</span><br><span class="line"><span class="keyword">if</span> (n &lt;= k)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">CutTree</span>(n * <span class="number">2.0</span> / <span class="number">5.0</span>, k) + <span class="built_in">CutTree</span>(n - n * <span class="number">2.0</span> / <span class="number">5.0</span>, k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">float</span> n;</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f %d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">CutTree</span>(n, k));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="9"><li>(程序题)<br>题目编号 ：Exp06-Enhance05，freshman-1022</li></ol><p>题目名称：十进制转换任意进制</p><p>题目描述：编写程序，用递归方法将十进制的非负整数 N 转换为 b 进制数（2≤b≤36），其中字符、ASCII码值和数值之间的对应关系如下：</p><p>Exp06-Enhance05.jpg</p><p>输入：一行输入两个非负整数，分别是十进制的 N 和 b  ，其中 0 &lt;=N &lt;=2^31 ，2 &lt;=b &lt;= 36 。</p><p>输出：N 的 b 进制数。</p><p>样例1：</p><p>输入：<br>579 8<br>输出：<br>1103<br>样例2：</p><p>输入：<br>579 20<br>输出：<br>18J</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//十进制转化任意进制（递归）</span></span><br><span class="line"><span class="function"><span class="type">char</span> <span class="title">Trans</span><span class="params">(<span class="type">long</span> <span class="type">long</span> n, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n &lt; b)</span><br><span class="line"><span class="keyword">return</span> n % b &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + n % b : <span class="string">&#x27;A&#x27;</span> + n % b - <span class="number">10</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="built_in">Trans</span>(n / b, b));</span><br><span class="line"><span class="keyword">return</span> n % b &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + n % b : <span class="string">&#x27;A&#x27;</span> + n % b - <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> n;</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld %d&quot;</span>, &amp;n, &amp;b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="built_in">Trans</span>(n, b));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>实验08 结构化程序设计（2022级）</h1><ol><li>(程序题, 40分)<br>题目编号：Exp08-Basic01，GJBook3-12-05</li></ol><p>题目名称：正整数分解</p><p>题目描述：正整数n，按第一项递减的顺序依次输出其和等于n的所有不增的正整数和式。</p><p>输入：一个正整数n（0&lt;n≤15）。</p><p>输出：每行输出如样例所示，和等于n的不增正整数和式，数字和运算符间无符号，最后一行结尾有一个回车换行符。</p><p>样例：</p><p>输入：<br>4<br>输出：<br>4=3+1<br>4=2+2<br>4=2+1+1<br>4=1+1+1+1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">17</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//深度优先搜索</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> sum)</span> </span>&#123;</span><br><span class="line"><span class="comment">//递归出口</span></span><br><span class="line"><span class="keyword">if</span> (sum == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d=%d&quot;</span>, a[<span class="number">0</span>], a[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; x; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;+%d&quot;</span>, a[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">a[x] = i;</span><br><span class="line">x++;</span><br><span class="line"><span class="keyword">if</span> (sum - i &gt;= <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">dfs</span>(i + <span class="number">1</span>, sum - i);</span><br><span class="line">&#125;</span><br><span class="line">x--;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">a[<span class="number">0</span>] = n;</span><br><span class="line"><span class="built_in">dfs</span>(n, n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>(程序题, 40分)<br>题目编号：Exp08-Basic02，GJBook3例-12-02</li></ol><p>题目名称：N皇后问题</p><p>题目描述：</p><p>八皇后问题由高斯(C. F. Gauss)最早在1850年提出并研究，但并未完全解决。N皇后问题指在一个N×N的棋盘上放置N个皇后，使任意两个皇后都不能互相攻击。按国际象棋规则，两个皇后，若在同一行上，或在同一列上, 或在同一条斜线上, 则她们可以互相攻击。下图即满足八皇后条件的一种棋局。</p><p>编写程序给出满足条件的棋局数目。</p><p>Exp08-Basic02.jpg</p><p>输入：一个正整数N（0&lt;N≤13）输出：棋局数目<br>样例1：</p><p>输入：<br>2<br>输出：<br>0<br>样例2：</p><p>输入：<br>8<br>输出:<br>92</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> N;</span><br><span class="line"><span class="type">int</span> queen[<span class="number">15</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> tot = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检查x行以下的皇后位置是否合法</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; x; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (y == queen[i])<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x + y == i + queen[i])<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x - y == i - queen[i])<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//深搜，初始从n=1开始往下搜索</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="comment">//递归出口</span></span><br><span class="line"><span class="keyword">if</span> (n == N + <span class="number">1</span>) &#123;</span><br><span class="line">tot++;</span><br><span class="line"><span class="comment">////DEBUG</span></span><br><span class="line"><span class="comment">//printf(&quot;\n&quot;);</span></span><br><span class="line"><span class="comment">//for (int i = 1; i &lt;= 4; i++)</span></span><br><span class="line"><span class="comment">//printf(&quot;%d %d\n&quot;, i, queen[i]);</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">queen[n] = i;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(n, queen[n])) &#123;</span><br><span class="line"><span class="built_in">dfs</span>(n + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">queen[n] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, tot);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>(程序题, 20分)<br>题目编号：Exp08-Basic03</li></ol><p>题目名称：八皇后本质不同的解</p><p>题目描述：</p><p>如上题所述，当N=8时，一共有92种可能。如果去除其中上下对称、左右对称棋局、主副对角线对称棋局和旋转后重复棋局，则有12种完全不同的棋局。编写程序，输出这12种棋局。</p><p>输入：</p><p>无</p><p>输出：</p><p>共12行，每行输出1种棋局，</p><p>例如，第一行输出 No1:1 5 8 6 3 7 2 4（冒号为西文冒号且前后无多余字符，冒号后的每个数字后均有一个西文空格），</p><p>其中No1 表示这是第1种棋局；后续数字序列表示八皇后所在位置，数值本身表示某个皇后在棋盘上的行坐标，该数值所在位置表示该皇后的列坐标（&gt;0)，例如，数字5位于序列的第2位，表示棋盘上第5行第2列有一个皇后；数字4位于序列的第8位，表示棋盘上第4行第8列有一个皇后，由此，这8个数字描述了一种棋局。12种棋局的输出顺序：字典序（参考样例)。</p><p>样例：</p><p>输入:（无）<br>输出：<br>No1:1 5 8 6 3 7 2 4<br>No2:1 6 8 3 7 4 2 5<br>……（此处省略10行，分别表示No3至No12棋局）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h1>实验09 动态数据组织（2022级）</h1><ol><li>(程序题)<br>题目编号：Exp09-Basic01</li></ol><p>题目名称：创建单链表</p><p>题目描述：请填写缺失代码完成程序，实现如下功能：</p><p>根据从键盘随机输入以0结束的若干非零整数，建立一个单链表；之后将此链表中保存的数字顺次输出，相邻数字间以一个西文空格间隔，最后一个数字后无任何字符；若是空链表，则输出NULL。</p><p>例如，</p><p>输入:5 4 2 1 3 0</p><p>输出:5 4 2 1 3</p><p>输入:0 5 4 2 1 3 0</p><p>输出:NULL</p><p><em><strong>注意</strong></em>：</p><p>提交答案时，需粘贴完整的源代码，仅粘贴填空处的代码将被判错。</p><p>#include &lt;stdio.h&gt;<br>#include &lt;malloc.h&gt;<br>struct cell { //单链表结点结构体定义<br>int x;<br>struct cell* next;<br>};<br>struct cell* build(void) { //新建单链表，并将建好的单链表首结点地址返回<br>struct cell* head,*tmp,*p;<br>head = tmp = p = NULL;<br>int n;<br>/*请在以下位置补充完整，实现函数build的功能<br>…<br>…<br>…<br><em>/<br>return head;//返回单链表头<br>}<br>void print(struct cell</em> head) {//打印整个单链表,head是指向单链表首结点的指针<br>/*请在以下位置补充完整，实现函数print的功能<br>…<br>…<br>…<br><em>/<br>}<br>void release(struct cell</em> head) {//释放单链表空间,head是指向单链表首结点的指针<br>/*请在以下位置补充完整，实现函数release的功能<br>…<br>…<br>…<br><em>/<br>}<br>int main(void) {<br>struct cell</em> head;<br>head = build();<br>if(head!=NULL)<br>print(head);<br>else<br>printf(“NULL”);<br>release(head);<br>}</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span> &#123; <span class="comment">//单链表结点结构体定义</span></span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">build</span>(<span class="type">void</span>) &#123; <span class="comment">//新建单链表，并将建好的单链表首结点地址返回</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* head, * tmp, * p;</span><br><span class="line">    head = tmp = p = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数build的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    head = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));   <span class="comment">//为链表开拓空间</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;head-&gt;x);</span><br><span class="line">    tmp = head;</span><br><span class="line">    tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (head-&gt;x == <span class="number">0</span>)    head = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            p = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p-&gt;x);</span><br><span class="line">            tmp-&gt;next = p;</span><br><span class="line">            tmp = p;</span><br><span class="line">            tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span> (p-&gt;x != <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> head;<span class="comment">//返回单链表头</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;<span class="comment">//打印整个单链表,head是指向单链表首结点的指针</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数print的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, head-&gt;x);</span><br><span class="line">    head = head-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (head-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, head-&gt;x);</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">release</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;<span class="comment">//释放单链表空间,head是指向单链表首结点的指针</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数release的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* tmp;</span><br><span class="line">    <span class="comment">//记得释放干净</span></span><br><span class="line">    <span class="keyword">while</span> (head != <span class="literal">NULL</span>) &#123; </span><br><span class="line">        tmp = head-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(head);</span><br><span class="line">        head = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* head;</span><br><span class="line">    head = <span class="built_in">build</span>();</span><br><span class="line">    <span class="keyword">if</span> (head != <span class="literal">NULL</span>)</span><br><span class="line">        <span class="built_in">print</span>(head);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">    <span class="built_in">release</span>(head);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>(程序题)<br>题目编号：Exp09-Basic02，GJBook3-13-06</li></ol><p>题目名称：删除单链表重复结点</p><p>题目描述：请填写缺失代码完成程序，实现如下功能：</p><p>首先根据键盘随机输入，以0结束的若干非零整数建立单链表；然后删除此链表中值重复的结点仅保留一个，且不改变原有结点顺序；最后将删除后链表中各结点值输出，相邻数字间以一个西文空格间隔，最后一个数字后无任何字符；若是空链表，则输出NULL。</p><p>例如，</p><p>输入:5 4 2 1 3 0 输出：5 4 2 1 3</p><p>输入: 4 2 1 3 3 2 0 输出：4 2 1 3</p><p>输入: 0 4 2 3 2 0 输出：NULL</p><p><em><strong>注意</strong></em>：</p><p>提交答案时，需粘贴完整的源代码，仅粘贴填空处的代码将被判错。</p><p>#include &lt;stdio.h&gt;<br>#include &lt;malloc.h&gt;<br>struct cell {//单链表结点结构体定义<br>int x;<br>struct cell* next;<br>};<br>struct cell* build(void) {//新建单链表，并将建好的单链表首结点地址返回<br>struct cell* head, * tmp, * p;<br>head = tmp = p = NULL;<br>int n;<br>/<em>请在以下位置补充完整，实现函数build的功能<br>…<br>…<br>…<br><em>/<br>return head;//返回单链表头<br>}<br>struct cell</em> del2one(struct cell</em> head) {//删除重复结点只保留一个，head是单链表首结点指针<br>/*请在以下位置补充完整，实现函数del2one的功能<br>…<br>…<br>…<br><em>/<br>return head;//返回删除重复结点的单链表头<br>}<br>void print(struct cell</em> head) {//打印整个单链表,head是单链表首结点指针<br>/*请在以下位置补充完整，实现函数print的功能<br>…<br>…<br>…<br><em>/<br>}<br>void release(struct cell</em> head) {//释放单链表空间,head是单链表首结点指针<br>/*请在以下位置补充完整，实现函数release的功能<br>…<br>…<br>…<br><em>/<br>}<br>int main(void) {<br>struct cell</em> head;<br>head = build();<br>head=del2one(head);<br>if(head!=NULL)<br>print(head);<br>else<br>printf(“NULL”);<br>release(head);<br>}</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span> &#123;<span class="comment">//单链表结点结构体定义</span></span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">build</span>(<span class="type">void</span>) &#123;<span class="comment">//新建单链表，并将建好的单链表首结点地址返回</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* head, * tmp, * p;</span><br><span class="line">    head = tmp = p = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数build的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    head = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;head-&gt;x);</span><br><span class="line">    head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    tmp = head;</span><br><span class="line">    <span class="keyword">if</span> (head-&gt;x == <span class="number">0</span>) head = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            p = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p-&gt;x);</span><br><span class="line">            tmp-&gt;next = p;</span><br><span class="line">            tmp = p;</span><br><span class="line">            tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span> (p-&gt;x != <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> head;<span class="comment">//返回单链表头</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">del2one</span>(<span class="keyword">struct</span> cell* head) &#123;<span class="comment">//删除重复结点只保留一个，head是单链表首结点指针</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数del2one的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="keyword">if</span> (head == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* tmp, * p, * r;</span><br><span class="line">    tmp = head;</span><br><span class="line">    <span class="keyword">while</span> (tmp-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        p = tmp-&gt;next;</span><br><span class="line">        r = tmp;</span><br><span class="line">        <span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (tmp-&gt;x == p-&gt;x) &#123;</span><br><span class="line">                r-&gt;next = p-&gt;next;</span><br><span class="line">                <span class="built_in">free</span>(p);</span><br><span class="line">                p = r-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                r = p;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        tmp = tmp-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> head;<span class="comment">//返回删除重复结点的单链表头</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;<span class="comment">//打印整个单链表,head是单链表首结点指针</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数print的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, head-&gt;x);</span><br><span class="line">    head = head-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (head-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, head-&gt;x);</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">release</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;<span class="comment">//释放单链表空间,head是单链表首结点指针</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数release的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* p;</span><br><span class="line">    p = head;</span><br><span class="line">    <span class="keyword">while</span> (head != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        head = p-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(p);</span><br><span class="line">        p = head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* head;</span><br><span class="line">    head = <span class="built_in">build</span>();</span><br><span class="line">    head = <span class="built_in">del2one</span>(head);</span><br><span class="line">    <span class="keyword">if</span> (head != <span class="literal">NULL</span>)</span><br><span class="line">        <span class="built_in">print</span>(head);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">    <span class="built_in">release</span>(head);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>(程序题)<br>题目编号 ：Exp09-Basic03</li></ol><p>题目名称：求单链表中间结点</p><p>题目描述：请填写缺失代码完成程序，实现如下功能：</p><p>首先根据键盘随机输入，以0结束的若干非零整数建立单链表；</p><p>然后寻找处于链表中间位置的结点，若中间结点有两个，则设定前一个为中间位置结点；</p><p>最后将从中间结点开始到链表尾各结点值输出，相邻数字间以一个西文空格间隔，最后一个数字后无任何字符。</p><p>若是空链表，则输出NULL。</p><p>例如，</p><p>输入:5 4 2 1 3 0</p><p>输出：2 1 3</p><p>输入: 4 2 1 3 3 2 0</p><p>输出：1 3 3 2</p><p><em><strong>注意</strong></em>：</p><p>提交答案时，需粘贴完整的源代码，仅粘贴填空处的代码将被判错。</p><p>#include &lt;stdio.h&gt;</p><p>#include &lt;malloc.h&gt;<br>struct cell {//单链表结点结构体定义<br>int x;<br>struct cell* next;<br>};<br>struct cell* build(void) {//新建单链表，并将建好的单链表首结点地址返回<br>struct cell* head, * tmp, * p;<br>head = tmp = p = NULL;<br>int n;<br>/<em>请在以下位置补充完整，实现函数build的功能<br>…<br>…<br>…<br><em>/<br>return head;//返回单链表头<br>}<br>struct cell</em> mid(struct cell</em> head) {//寻找链表中间位置结点地址并返回，head是单链表首结点指针<br>/*请在以下位置补充完整，实现函数mid的功能<br>…<br>…<br>…<br><em>/<br>}<br>void print(struct cell</em> head) {//打印整个单链表,head是单链表首结点指针<br>/*请在以下位置补充完整，实现函数print的功能<br>…<br>…<br>…<br><em>/<br>}<br>void release(struct cell</em> head) {//释放单链表空间,head是单链表首结点指针<br>/*请在以下位置补充完整，实现函数release的功能<br>…<br>…<br>…<br><em>/<br>}<br>int main(void) {<br>struct cell</em> head,*half;<br>head = build();<br>half = mid(head);<br>if(half!=NULL)<br>print(half);<br>else<br>printf(“NULL”);<br>release(head);<br>}</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span> &#123;<span class="comment">//单链表结点结构体定义</span></span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">build</span>(<span class="type">void</span>) &#123;<span class="comment">//新建单链表，并将建好的单链表首结点地址返回</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* head, * tmp, * p;</span><br><span class="line">    head = tmp = p = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数build的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    head = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;head-&gt;x);</span><br><span class="line">    head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    tmp = head;</span><br><span class="line">    <span class="keyword">if</span> (head-&gt;x == <span class="number">0</span>) head = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            p = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p-&gt;x);</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;x == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">free</span>(p);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;   <span class="comment">//较前两题优化了下，将链表尾部不指向0</span></span><br><span class="line">            tmp-&gt;next = p;</span><br><span class="line">            tmp = p;</span><br><span class="line">            tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> head;<span class="comment">//返回单链表头</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">mid</span>(<span class="keyword">struct</span> cell* head) &#123;<span class="comment">//寻找链表中间位置结点地址并返回，head是单链表首结点指针</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数mid的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;  <span class="comment">//纪录链表长度</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* p;</span><br><span class="line">    p = head;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">    p = head;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; (n - <span class="number">1</span>) / <span class="number">2</span>; i++)</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;<span class="comment">//打印整个单链表,head是单链表首结点指针</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数print的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, head-&gt;x);</span><br><span class="line">    head = head-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (head != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, head-&gt;x);</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">release</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;<span class="comment">//释放单链表空间,head是单链表首结点指针</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数release的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* tmp;</span><br><span class="line">    <span class="keyword">while</span> (head != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        tmp = head-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(head);</span><br><span class="line">        head = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* head, * half;</span><br><span class="line">    head = <span class="built_in">build</span>();</span><br><span class="line">    half = <span class="built_in">mid</span>(head);</span><br><span class="line">    <span class="keyword">if</span> (half != <span class="literal">NULL</span>)</span><br><span class="line">        <span class="built_in">print</span>(half);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">    <span class="built_in">release</span>(head);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>(程序题)<br>题目编号：Exp09-Basic04</li></ol><p>题目名称：单链表交换两结点</p><p>题目描述：请填写缺失代码完成程序，实现如下功能：</p><p>首先根据键盘随机输入，以0结束的若干非零整数建立单链表；</p><p>然后根据输入的两个索引位置交换链表上的两个结点（链表首元素索引为1,且要交换的两个索引位置不相邻）；</p><p>最后链表各结点值输出，相邻数字间以一个西文空格间隔，最后一个数字后无任何字符。</p><p>若是空链表，则输出NULL。</p><p>例如，</p><p>输入:1 2 3 4 5 6 0 1 5</p><p>输出：5 2 3 4 1 6</p><p>输入:0 1 2 3 4 5 6 0 1 5</p><p>输出：NULL</p><p><em><strong>注意</strong></em>：</p><p>提交答案时，需粘贴完整的源代码，仅粘贴填空处的代码将被判错。</p><p>#include &lt;stdio.h&gt;<br>#include &lt;malloc.h&gt;<br>struct cell {//单链表结点结构体定义<br>int x;<br>struct cell* next;<br>};<br>struct cell* build(void) {//新建单链表，并将建好的单链表首结点地址返回<br>struct cell* head, * tmp, * p;<br>head = tmp = p = NULL;<br>int n;<br>/<em>请在以下位置补充完整，实现函数build的功能<br>…<br>…<br>…<br><em>/<br>return head;//返回单链表头<br>}<br>struct cell</em> swap(struct cell</em> head,int m,int n) {//交换索引为m和n的两个结点，head是单链表首结点指针<br>if(head==NULL) return NULL;<br>struct cell* pm=head, * pn=head;<br>struct cell* pm0 = NULL, * pn0 = NULL;<br>struct cell* tmp;<br>int i;<br>for (i = 1;i &lt; m &amp;&amp; pm != NULL;i++) {<br>pm0 = pm;<br>pm = pm-&gt;next;<br>}<br>for (i = 1;i &lt; n &amp;&amp; pn != NULL;i++) {<br>pn0 = pn;<br>pn = pn-&gt;next;<br>}<br>if (pm != NULL &amp;&amp; pn != NULL &amp;&amp; m != n) {//索引为m,n的结点位于链表中间<br>/*请在以下位置补充完整，实现函数swap的功能<br>…<br>…<br>…<br>*/<br>if (pm0 != NULL &amp;&amp; pn0 != NULL) {<br>/*请在以下位置补充完整，实现函数swap的功能<br>…<br>…<br>…<br>*/<br>}<br>if (pm0 == NULL &amp;&amp; pn0 != NULL) {<br>/*请在以下位置补充完整，实现函数swap的功能<br>…<br>…<br>…<br>*/<br>}<br>if (pm0 != NULL &amp;&amp; pn0 == NULL) {<br>/*请在以下位置补充完整，实现函数swap的功能<br>…<br>…<br>…<br><em>/<br>}<br>}<br>return head;<br>}<br>void print(struct cell</em> head) {//打印整个单链表,head是单链表首结点指针<br>/*请在以下位置补充完整，实现函数print的功能<br>…<br>…<br>…<br><em>/<br>}<br>void release(struct cell</em> head) {//释放单链表空间,head是单链表首结点指针<br>/*请在以下位置补充完整，实现函数release的功能<br>…<br>…<br>…<br><em>/<br>}<br>int main(void) {<br>struct cell</em> head;<br>int m, n;<br>head = build();<br>scanf(“%d%d”, &amp;m, &amp;n);<br>head = swap(head,m,n);<br>if(head!=NULL)<br>print(head);<br>else<br>printf(“NULL”);<br>release(head);<br>}</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span> &#123;<span class="comment">//单链表结点结构体定义</span></span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">build</span>(<span class="type">void</span>) &#123;<span class="comment">//新建单链表，并将建好的单链表首结点地址返回</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* head, * tmp, * p;</span><br><span class="line">    head = tmp = p = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数build的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    head = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;head-&gt;x);</span><br><span class="line">    tmp = head;</span><br><span class="line">    tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (head-&gt;x == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;   <span class="comment">//优化前三题代码，空链表直接返回NULL</span></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        p = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p-&gt;x);</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;x == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">free</span>(p);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        tmp-&gt;next = p;</span><br><span class="line">        tmp = p;</span><br><span class="line">        tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> head;<span class="comment">//返回单链表头</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">swap</span>(<span class="keyword">struct</span> cell* head, <span class="type">int</span> m, <span class="type">int</span> n) &#123;<span class="comment">//交换索引为m和n的两个结点，head是单链表首结点指针</span></span><br><span class="line">    <span class="keyword">if</span> (head == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* pm = head, * pn = head;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* pm0 = <span class="literal">NULL</span>, * pn0 = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* tmp;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; m &amp;&amp; pm != <span class="literal">NULL</span>; i++) &#123;</span><br><span class="line">        pm0 = pm;</span><br><span class="line">        pm = pm-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n &amp;&amp; pn != <span class="literal">NULL</span>; i++) &#123;</span><br><span class="line">        pn0 = pn;</span><br><span class="line">        pn = pn-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (pm != <span class="literal">NULL</span> &amp;&amp; pn != <span class="literal">NULL</span> &amp;&amp; m != n) &#123;<span class="comment">//索引为m,n的结点位于链表中间</span></span><br><span class="line">        <span class="comment">/*请在以下位置补充完整，实现函数swap的功能</span></span><br><span class="line"><span class="comment">       ......</span></span><br><span class="line"><span class="comment">       ......</span></span><br><span class="line"><span class="comment">       ......</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">        <span class="keyword">if</span> (pm0 != <span class="literal">NULL</span> &amp;&amp; pn0 != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="comment">/*请在以下位置补充完整，实现函数swap的功能</span></span><br><span class="line"><span class="comment">                ......</span></span><br><span class="line"><span class="comment">                ......</span></span><br><span class="line"><span class="comment">                ......</span></span><br><span class="line"><span class="comment">              */</span></span><br><span class="line">            tmp = pn-&gt;next;</span><br><span class="line">            pm0-&gt;next = pn;</span><br><span class="line">            pn-&gt;next = pm-&gt;next;</span><br><span class="line">            pn0-&gt;next = pm;</span><br><span class="line">            pm-&gt;next = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (pm0 == <span class="literal">NULL</span> &amp;&amp; pn0 != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="comment">/*请在以下位置补充完整，实现函数swap的功能</span></span><br><span class="line"><span class="comment">                ......</span></span><br><span class="line"><span class="comment">                ......</span></span><br><span class="line"><span class="comment">                ......</span></span><br><span class="line"><span class="comment">              */</span></span><br><span class="line">            tmp = pn-&gt;next;</span><br><span class="line">            pn-&gt;next = pm-&gt;next;</span><br><span class="line">            pn0-&gt;next = pm;</span><br><span class="line">            pm-&gt;next = tmp;</span><br><span class="line">            head = pn;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (pm0 != <span class="literal">NULL</span> &amp;&amp; pn0 == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="comment">/*请在以下位置补充完整，实现函数swap的功能</span></span><br><span class="line"><span class="comment">                ......</span></span><br><span class="line"><span class="comment">                ......</span></span><br><span class="line"><span class="comment">                ......</span></span><br><span class="line"><span class="comment">              */</span></span><br><span class="line">            tmp = pm-&gt;next;</span><br><span class="line">            pm-&gt;next = pn-&gt;next;</span><br><span class="line">            pm0-&gt;next = pn;</span><br><span class="line">            pn-&gt;next = tmp;</span><br><span class="line">            head = pm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;<span class="comment">//打印整个单链表,head是单链表首结点指针</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数print的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, head-&gt;x);</span><br><span class="line">    <span class="keyword">while</span> (head-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, head-&gt;x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">release</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;<span class="comment">//释放单链表空间,head是单链表首结点指针</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数release的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* p;</span><br><span class="line">    <span class="keyword">while</span> (head != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        p = head-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(head);</span><br><span class="line">        head = p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* head;</span><br><span class="line">    <span class="type">int</span> m, n;</span><br><span class="line">    head = <span class="built_in">build</span>();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">    head = <span class="built_in">swap</span>(head, m, n);</span><br><span class="line">    <span class="keyword">if</span> (head != <span class="literal">NULL</span>)</span><br><span class="line">        <span class="built_in">print</span>(head);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">    <span class="built_in">release</span>(head);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>(程序题)<br>题目编号 ：Exp09-Basic05，GJBook3例-13-04</li></ol><p>题目名称：单链表存储法雷序列</p><p>题目描述：请填写缺失代码完成程序，实现如下功能：</p><p>给定一个正整数n，用单链表递增存储n阶法雷序列各项值。n阶法雷序列是把所有不可约分的分数j/i(0&lt;i≤n; 0≤j≤i)递增排序的序列。</p><p>输入一个正整数n；输出n阶法雷序列各项分数形式，分数的分子和分母间以/连接，各个分数间以一个西文空格间隔，最后一个数字后无任何字符。若是空链表或n不符合要求，则输出NULL。</p><p>例如，</p><p>输入:3</p><p>输出：0/1 1/3 1/2 2/3 1/1</p><p><em><strong>注意</strong></em>：</p><p>提交答案时，需粘贴完整的源代码，仅粘贴填空处的代码将被判错。</p><p>#include &lt;stdio.h&gt;<br>#include &lt;malloc.h&gt;<br>struct  farlei_item {<br>int   numerator, denominator;   // 分子、分母<br>struct  farlei_item* next;   // 连接部分<br>};<br>typedef  struct  farlei_item* farleipointer;<br>int  gcd(int x, int y) {    /*  求最大公约数 */<br>/*请在以下位置补充完整，实现函数gcd的功能<br>…<br>…<br>…<br>*/<br>}<br>/<em>构造法雷序列,并返回序列头指针</em>/<br>farleipointer farlei(int n) {<br>int i, j;<br>farleipointer fn, r, r0, p;<br>fn = r = r0 = p = NULL;<br>if (n &lt; 1)return NULL; //如果n&lt;=0,则没有法雷序列<br>fn = (farleipointer)malloc(sizeof(struct farlei_item));  //构造0/1<br>fn-&gt;numerator = 0;<br>fn-&gt;denominator = 1;<br>p = (farleipointer)malloc(sizeof(struct farlei_item));   //构造1/1<br>p-&gt;numerator = 1;<br>p-&gt;denominator = 1;<br>fn-&gt;next = p;<br>p-&gt;next = NULL;<br>/*请在以下位置补充完整，实现函数farlei的功能<br>…<br>…<br>…<br>*/<br>return fn;<br>}<br>void print(farleipointer fn) {//输出fn引导的法雷序列<br>/*请在以下位置补充完整，实现函数print的功能<br>…<br>…<br>…<br>*/<br>}<br>void release(farleipointer head) {//释放单链表空间,head是单链表首结点指针<br>/*请在以下位置补充完整，实现函数release的功能<br>…<br>…<br>…<br>*/<br>}<br>int main(void) {<br>int n;<br>farleipointer fn;<br>scanf(“%d”, &amp;n);<br>fn = farlei(n); //生成n级法雷序列<br>if(fn!=NULL)<br>print(fn);<br>else<br>printf(“NULL”);<br>release(fn);<br>return 0;<br>}</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="keyword">struct</span>  <span class="title class_">farlei_item</span> &#123;</span><br><span class="line">    <span class="type">int</span>   numerator, denominator;   <span class="comment">// 分子、分母</span></span><br><span class="line">    <span class="keyword">struct</span>  <span class="title class_">farlei_item</span>* next;   <span class="comment">// 连接部分</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span>  <span class="keyword">struct</span>  <span class="title class_">farlei_item</span>* farleipointer;</span><br><span class="line"><span class="function"><span class="type">int</span>  <span class="title">gcd</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;    <span class="comment">/*  求最大公约数 */</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数gcd的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="keyword">if</span> (x &gt; y) &#123;</span><br><span class="line">        <span class="type">int</span> swap = x;</span><br><span class="line">        x = y;</span><br><span class="line">        y = swap;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = x; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x % i == <span class="number">0</span> &amp;&amp; y % i == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*构造法雷序列,并返回序列头指针*/</span></span><br><span class="line"><span class="function">farleipointer <span class="title">farlei</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    farleipointer fn, r, r0, p;</span><br><span class="line">    fn = r = r0 = p = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">1</span>)<span class="keyword">return</span> <span class="literal">NULL</span>; <span class="comment">//如果n&lt;=0,则没有法雷序列</span></span><br><span class="line">    fn = (farleipointer)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> farlei_item));  <span class="comment">//构造0/1</span></span><br><span class="line">    fn-&gt;numerator = <span class="number">0</span>;</span><br><span class="line">    fn-&gt;denominator = <span class="number">1</span>;</span><br><span class="line">    p = (farleipointer)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> farlei_item));   <span class="comment">//构造1/1</span></span><br><span class="line">    p-&gt;numerator = <span class="number">1</span>;</span><br><span class="line">    p-&gt;denominator = <span class="number">1</span>;</span><br><span class="line">    fn-&gt;next = p;</span><br><span class="line">    p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数farlei的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="comment">//fn为头节点，p为尾节点</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">gcd</span>(j, i) != <span class="number">1</span>)  <span class="keyword">continue</span>;  <span class="comment">//若有公约数则结束当前循环</span></span><br><span class="line">            r = (farleipointer)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> farlei_item));</span><br><span class="line">            r-&gt;denominator = i;</span><br><span class="line">            r-&gt;numerator = j;</span><br><span class="line">            r0 = fn;</span><br><span class="line">            <span class="keyword">while</span> (r0-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> ((<span class="type">float</span>)r0-&gt;next-&gt;numerator / r0-&gt;next-&gt;denominator &gt; (<span class="type">float</span>)r-&gt;numerator / r-&gt;denominator) &#123;</span><br><span class="line">                    r-&gt;next = r0-&gt;next;</span><br><span class="line">                    r0-&gt;next = r;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                r0 = r0-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(farleipointer fn)</span> </span>&#123;<span class="comment">//输出fn引导的法雷序列</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数print的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d/%d&quot;</span>, fn-&gt;numerator, fn-&gt;denominator);</span><br><span class="line">    fn = fn-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (fn != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d/%d&quot;</span>, fn-&gt;numerator, fn-&gt;denominator);</span><br><span class="line">        fn = fn-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">release</span><span class="params">(farleipointer head)</span> </span>&#123;<span class="comment">//释放单链表空间,head是单链表首结点指针</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数release的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    farleipointer p;</span><br><span class="line">    <span class="keyword">while</span> (head != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        p = head-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(head);</span><br><span class="line">        head = p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    farleipointer fn;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    fn = <span class="built_in">farlei</span>(n); <span class="comment">//生成n级法雷序列</span></span><br><span class="line">    <span class="keyword">if</span> (fn != <span class="literal">NULL</span>)</span><br><span class="line">        <span class="built_in">print</span>(fn);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">    <span class="built_in">release</span>(fn);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>(程序题)<br>题目编号：Exp09-Enhance03</li></ol><p>题目名称：合并单链表</p><p>题目描述：请填写缺失代码完成程序，实现如下功能：</p><pre><code>首先从键盘输入一行以0结束的若干非零整数，建立一个单链表，输入的整数顺序为数字非递减顺序；然后以同样的方式，仍在第一行继续输入并建立第二个单链表；之后将两个链表合并形成一个新链表，使得新链表依然保持数字非递减顺序；最后验证输出新链表所有值，相邻数字间以一个西文空格间隔，最后一个数字后无任何字符。若是空链表，则输出NULL。</code></pre><p>例如，</p><pre><code>输入：2 3 4 4 5 6 0 1 3 4 6 7 0输出：1 2 3 3 4 4 4 5 6 6 7输入：0 0输出：NULL</code></pre><p><em><strong>注意</strong></em>：</p><pre><code>提交答案时，需粘贴完整的源代码，仅粘贴填空处的代码将被判错。</code></pre><p>#include &lt;stdio.h&gt;</p><p>#include &lt;malloc.h&gt;<br>struct cell {//单链表结点结构体定义<br>int x;<br>struct cell* next;<br>};<br>struct cell* build(void) {//新建单链表，并将建好的单链表首结点地址返回<br>struct cell* head, * tmp, * tail;<br>head = tmp = tail = NULL;<br>int n, i;<br>/<em>请在以下位置补充完整，实现函数build的功能<br>…<br>…<br>…<br><em>/<br>return head;//返回单链表头<br>}<br>struct cell</em> combine(struct cell</em> p, struct cell* q) {//合并两个链表p和q<br>struct cell* head= NULL,*p0=NULL,*q0=NULL,*r=NULL;<br>if (p == NULL &amp;&amp; q!= NULL) return q;<br>if (p != NULL &amp;&amp; q == NULL) return p;<br>if (p == NULL &amp;&amp; q == NULL) return NULL;<br>/*请在以下位置补充完整，实现函数combine的功能<br>…<br>…<br>…<br><em>/<br>}<br>void print(struct cell</em> head) {//打印整个单链表,head是单链表首结点指针<br>/*请在以下位置补充完整，实现函数print的功能<br>…<br>…<br>…<br><em>/<br>}<br>void release(struct cell</em> head) {//释放单链表空间,head是单链表首结点指针<br>/*请在以下位置补充完整，实现函数release的功能<br>…<br>…<br>…<br><em>/<br>}<br>int main(void) {<br>struct cell</em> head1,*head2, *result;<br>head1 = build();<br>head2 = build();<br>result = combine(head1,head2);<br>if (result != NULL)<br>print(result);<br>else<br>printf(“NULL”);<br>release(result);<br>return 0;<br>}</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span> &#123;<span class="comment">//单链表结点结构体定义</span></span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">build</span>(<span class="type">void</span>) &#123;<span class="comment">//新建单链表，并将建好的单链表首结点地址返回</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* head, * tmp, * tail;</span><br><span class="line">    head = tmp = tail = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> n, i;</span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数build的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    head = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;head-&gt;x);</span><br><span class="line">    <span class="keyword">if</span> (head-&gt;x == <span class="number">0</span>)    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    tmp = head;</span><br><span class="line">    tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        tail = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;tail-&gt;x);</span><br><span class="line">        <span class="keyword">if</span> (tail-&gt;x == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">free</span>(tail);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        tmp-&gt;next = tail;</span><br><span class="line">        tmp = tail;</span><br><span class="line">        tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> (tail-&gt;x != <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> head;<span class="comment">//返回单链表头</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">combine</span>(<span class="keyword">struct</span> cell* p, <span class="keyword">struct</span> cell* q) &#123;<span class="comment">//合并两个链表p和q</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* head = <span class="literal">NULL</span>, * p0 = <span class="literal">NULL</span>, * q0 = <span class="literal">NULL</span>, * r = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (p == <span class="literal">NULL</span> &amp;&amp; q != <span class="literal">NULL</span>) <span class="keyword">return</span> q;</span><br><span class="line">    <span class="keyword">if</span> (p != <span class="literal">NULL</span> &amp;&amp; q == <span class="literal">NULL</span>) <span class="keyword">return</span> p;</span><br><span class="line">    <span class="keyword">if</span> (p == <span class="literal">NULL</span> &amp;&amp; q == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数combine的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    head = p;</span><br><span class="line">    <span class="keyword">while</span> (q != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        p = head;</span><br><span class="line">        q0 = q-&gt;next;   <span class="comment">//q0为第二链表头</span></span><br><span class="line">        <span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            p0 = p-&gt;next;</span><br><span class="line">            <span class="comment">//当结果在链表尾部</span></span><br><span class="line">            <span class="keyword">if</span> (p0 == <span class="literal">NULL</span> &amp;&amp; (p-&gt;x &lt;= q-&gt;x)) &#123;     <span class="comment">//04嗨嗨嗨，大学生哪有不疯的，条件补加了，嗨嗨嗨！！！！！！这次必过，过不了就不写了，（植物）</span></span><br><span class="line">                p-&gt;next = q;</span><br><span class="line">                q-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">//03谢谢，忘记跳出循环了，我相信这是最后一个错了</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;x &gt; q-&gt;x) &#123;</span><br><span class="line">                <span class="comment">//当结果在链表头部</span></span><br><span class="line">                <span class="keyword">if</span> (p == head) &#123;</span><br><span class="line">                    q-&gt;next = p;</span><br><span class="line">                    head = q;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">//当结果在链表中间</span></span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    r-&gt;next = q;</span><br><span class="line">                    q-&gt;next = p;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            r = p;</span><br><span class="line">            p = p0;</span><br><span class="line">        &#125;</span><br><span class="line">        q = q0;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;    <span class="comment">//01谢谢你，写了半天，调试了半小时，发现没有返回值，谢谢你，佛说，谢谢你，谢谢你的佛  //02再注：很明显，这只是其中一个错，还有别的错，真的栓Q</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;<span class="comment">//打印整个单链表,head是单链表首结点指针</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数print的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, head-&gt;x);</span><br><span class="line">    <span class="keyword">while</span> (head-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, head-&gt;x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">release</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;<span class="comment">//释放单链表空间,head是单链表首结点指针</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数release的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* p;</span><br><span class="line">    <span class="keyword">while</span> (head != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        p = head-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(head);</span><br><span class="line">        head = p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* head1, * head2, * result;</span><br><span class="line">    head1 = <span class="built_in">build</span>();</span><br><span class="line">    head2 = <span class="built_in">build</span>();</span><br><span class="line">    result = <span class="built_in">combine</span>(head1, head2);</span><br><span class="line">    <span class="keyword">if</span> (result != <span class="literal">NULL</span>)</span><br><span class="line">        <span class="built_in">print</span>(result);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">    <span class="built_in">release</span>(result);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>(程序题)<br>题目编号：Exp09-Enhance04，GJBook3例-13-02</li></ol><p>题目名称：排序单链表</p><p>题目描述：请填写缺失代码完成程序，实现如下功能：</p><pre><code>首先根据键盘随机输入一行以0结束的若干非零整数建立单链表；然后递增排序链表；最后验证输出排序后链表中所有值，相邻数字间以一个西文空格间隔，最后一个数字后无任何字符。若是空链表，则输出NULL。</code></pre><p>例如，</p><pre><code>输入:2 3 6 4 5 0 输出：2 3 4 5 6输入:0 2 3 4 输出：NULL</code></pre><p><em><strong>注意</strong></em>：</p><pre><code>提交答案时，需粘贴完整的源代码，仅粘贴填空处的代码将被判错。</code></pre><p>#include &lt;stdio.h&gt;<br>#include &lt;malloc.h&gt;<br>struct cell {//单链表结点结构体定义<br>int x;<br>struct cell* next;<br>};<br>struct cell* build(void) {//新建单链表，并将建好的单链表首结点地址返回<br>struct cell* head, * tmp, * tail;<br>head = tmp = tail = NULL;<br>int n;<br>/<em>请在以下位置补充完整，实现函数build的功能<br>…<br>…<br>…<br><em>/<br>return head;//返回单链表头<br>}<br>struct cell * sort(struct cell</em> head) {//递增排序链表，head是单链表首结点指针<br>struct cell</em> p, * p0, * r, * r0, * q;<br>p = p0 = r = r0 = q = NULL;<br>p = head;<br>/*请在以下位置补充完整，实现函数sort的功能<br>…<br>…<br>…<br><em>/<br>return head;<br>}   /</em>  sort */</p><p>void print(struct cell* head) {//打印整个单链表,head是单链表首结点指针<br>/*请在以下位置补充完整，实现函数print的功能<br>…<br>…<br>…<br><em>/<br>}<br>void release(struct cell</em> head) {//释放单链表空间,head是单链表首结点指针<br>/*请在以下位置补充完整，实现函数release的功能<br>…<br>…<br>…<br><em>/<br>}<br>int main(void) {<br>struct cell</em> head;<br>head= build();<br>if (head != NULL) {<br>head = sort(head);<br>print(head);<br>}else<br>printf(“NULL”);<br>release(head);<br>return 0;<br>}</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span> &#123;<span class="comment">//单链表结点结构体定义</span></span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">build</span>(<span class="type">void</span>) &#123;<span class="comment">//新建单链表，并将建好的单链表首结点地址返回</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* head, * tmp, * tail;</span><br><span class="line">    head = tmp = tail = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数build的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    head = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;head-&gt;x);</span><br><span class="line">    <span class="keyword">if</span> (head-&gt;x == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(head);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    tmp = head;</span><br><span class="line">    tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        tail = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;tail-&gt;x);</span><br><span class="line">        <span class="keyword">if</span> (tail-&gt;x == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">free</span>(tail);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        tmp-&gt;next = tail;</span><br><span class="line">        tmp = tail;</span><br><span class="line">        tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> (tail != <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> head;<span class="comment">//返回单链表头</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">sort</span>(<span class="keyword">struct</span> cell* head) &#123;<span class="comment">//递增排序链表，head是单链表首结点指针</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* p, * p0, * r, * r0, * q;</span><br><span class="line">    p = p0 = r = r0 = q = <span class="literal">NULL</span>;</span><br><span class="line">    p = head;</span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数sort的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    p0 = p;</span><br><span class="line">    r0 = p;</span><br><span class="line">    r = r0-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (r != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (r-&gt;x &lt; p-&gt;x &amp;&amp; r != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            q = r-&gt;next;</span><br><span class="line">            <span class="comment">//当插入在链表头</span></span><br><span class="line">            <span class="keyword">if</span> (p == head) &#123;</span><br><span class="line">                r0-&gt;next = r-&gt;next;</span><br><span class="line">                r-&gt;next = p;</span><br><span class="line">                head = r;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//中间</span></span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                r0-&gt;next = r-&gt;next;</span><br><span class="line">                r-&gt;next = p;</span><br><span class="line">                p0-&gt;next = r;</span><br><span class="line">            &#125;</span><br><span class="line">            r = q;</span><br><span class="line">            p = head;</span><br><span class="line">            p0 = p;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//尾部</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (r == p-&gt;next) &#123;</span><br><span class="line">            p = head;</span><br><span class="line">            p0 = p;</span><br><span class="line">            r0 = r;</span><br><span class="line">            r = r0-&gt;next;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        p0 = p;</span><br><span class="line">        p = p0-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;   <span class="comment">/*  sort */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;<span class="comment">//打印整个单链表,head是单链表首结点指针</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数print的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, head-&gt;x);</span><br><span class="line">    <span class="keyword">while</span> (head-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, head-&gt;x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">release</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;<span class="comment">//释放单链表空间,head是单链表首结点指针</span></span><br><span class="line">    <span class="comment">/*请在以下位置补充完整，实现函数release的功能</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">          ......</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* p;</span><br><span class="line">    <span class="keyword">while</span> (head != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        p = head-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(head);</span><br><span class="line">        head = p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">cell</span>* head;</span><br><span class="line">    head = <span class="built_in">build</span>();</span><br><span class="line">    <span class="keyword">if</span> (head != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        head = <span class="built_in">sort</span>(head);</span><br><span class="line">        <span class="built_in">print</span>(head);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">    <span class="built_in">release</span>(head);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 吉林大学2022秋季超星学习通程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 吉林大学2022秋季超星学习通程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吉林大学2022秋季中国大学mooc程序设计第三讲到第六讲</title>
      <link href="/2022/12/03/%E5%90%89%E6%9E%97%E5%A4%A7%E5%AD%A62022%E7%A7%8B%E5%AD%A3/%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6mooc/3-12/"/>
      <url>/2022/12/03/%E5%90%89%E6%9E%97%E5%A4%A7%E5%AD%A62022%E7%A7%8B%E5%AD%A3/%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6mooc/3-12/</url>
      
        <content type="html"><![CDATA[<h1>第三讲</h1><p>题目内容：给出一个百分制成绩，要求输出成绩等级大写字符：‘A’、‘B’、‘C’、‘D’、‘E’。（90分以上为‘A’，80~89分为‘B’，70~79分为‘C’，60~69分为‘D’，60分以下为‘E’。）</p><p>输入: 一个整数</p><p>输出：对应等级</p><p>样例1：输入 100  输出 A</p><p>样例2：输入 89    输出 B</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line"><span class="keyword">if</span> (a &lt; <span class="number">60</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;E&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a &gt;= <span class="number">60</span> &amp;&amp; a &lt;= <span class="number">69</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;D&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a &gt;= <span class="number">70</span> &amp;&amp; a &lt;= <span class="number">79</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;C&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a &gt;= <span class="number">80</span> &amp;&amp; a &lt;= <span class="number">89</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;B&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a &gt;= <span class="number">90</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;A&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目内容：输入一个四位数，如果将这个数逆序后依然等于这个数本身，则输出OK，否则输出NO。</p><p>输入：一个整数</p><p>输出：OK或NO</p><p>样例1：输入 1234    输出 NO</p><p>样例2：输入 1221    输出 OK</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a, b, c, d, e, f;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">b = a / <span class="number">1000</span>;</span><br><span class="line">c = a / <span class="number">100</span> % <span class="number">10</span>;</span><br><span class="line">d = a / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">e = a % <span class="number">10</span>;</span><br><span class="line">f = e * <span class="number">1000</span> + d * <span class="number">100</span> + c * <span class="number">10</span> + b;</span><br><span class="line"><span class="keyword">if</span> (a == f)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目内容：输入时、分、秒，判断值是否合法，合法输出OK，否则输出NO</p><p>输入：三个整数 ；</p><p>输出： OK或NO</p><p>样例1：输入 12 54 21         输出 OK</p><p>样例2：输入 25 25 12      输出 NO</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a, b, c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line"><span class="keyword">if</span> (a &gt;= <span class="number">24</span> || a &lt; <span class="number">0</span> || b&gt;=<span class="number">60</span> || b &lt; <span class="number">0</span> || c&gt;=<span class="number">60</span> || c &lt; <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目内容：输入年、月，输出这个月一共有多少天</p><p>输入：两个整数</p><p>输出： 对应月份天数</p><p>样例1：输入 2018 2    输出 28</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//空间换时间</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="keyword">if</span> ((a % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; a % <span class="number">100</span> != <span class="number">0</span>) || a % <span class="number">400</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">switch</span> (b) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;31&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;29&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;31&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;30&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;31&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;30&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;31&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;31&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;30&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;31&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;30&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;31&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">switch</span> (b) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;31&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;28&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;31&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;30&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;31&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;30&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;31&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;31&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;30&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;31&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;30&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;31&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目内容：输入年、月、日三个正整数，判断日期是否合法</p><p>输入：三个正整数</p><p>输出： OK或NO</p><p>样例1：输入 1200 2 29       输出 OK</p><p>样例2：输入 2018 2 29        输出 NO</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a, b, c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line"><span class="keyword">if</span> (b &gt; <span class="number">12</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">switch</span> (b) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line"><span class="keyword">if</span> (c &lt;= <span class="number">31</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="keyword">if</span> ((a % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; a % <span class="number">100</span> != <span class="number">0</span>) || a % <span class="number">400</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (c &lt;= <span class="number">29</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> (c &lt;= <span class="number">28</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">if</span> (c &lt;= <span class="number">30</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>第四讲</h1><h2 id="基础">基础</h2><p>1问题描述：编一个程序，输入x、n，计算勒让德(Legendre)多项式的第 n 项。</p><p>输入：一个浮点数和一个整数分别对应x和n</p><p>输出：一个浮点数，即勒让德多项式第n项的值，注意小数点后保留到第2位。</p><p>提示：整数除以整数结果仍为整数，所以（n-1）/n的结果是0；为了能够正确计算需要进行强制类型转换(float)n。</p><p>样例1：输入 5.5  1  输出：5.50</p><p>样例2：输入 5.5  0  输出：1.00</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">double</span> x, n;</span><br><span class="line"><span class="type">double</span> y1, y2, y3;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>, &amp;x, &amp;n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1.00&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, x);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">y1 = <span class="number">1</span>;</span><br><span class="line">y2 = x;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">float</span> i = <span class="number">2.0</span>; i &lt;= n; i++) &#123;</span><br><span class="line">y3 = (<span class="number">2</span> * i - <span class="number">1</span>) / i * x * y2 - (i - <span class="number">1</span>) / i * y1;</span><br><span class="line">y1 = y2;</span><br><span class="line">y2 = y3;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, y3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2问题描述：请计算如下序列的前100项的和</p><p>输入：一个浮点数对应x值</p><p>输出：一个浮点数即ex的近似值，小数点后保留到第2位。</p><p>提示：注意使用项与项之间的递进关系；不要直接使用幂数和阶乘直接相除计算每一项值，很容易出现溢出错误。</p><p>样例：输入0  输出：1.00</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">double</span> x, e = <span class="number">1</span>;</span><br><span class="line"><span class="type">double</span> n = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">n = n * x / i;</span><br><span class="line">e = e + n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, e);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3判断给定自然数是否为降序数（10分）<br>题目内容：编写程序，判断给定自然数n是否为降序数。降序数是指对于n=d1d2d3…dk，有：di&gt;=di+1，i=1,2,…,k-1。例如：54321就是一个降序数。</p><p>输入：一个自然数n</p><p>输出：如果n是降序数，则输出YES，否则输出NO</p><p>样例1：输入：543    输出：YES</p><p>样例2：输入：78082  输出：NO</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span> (n&gt;=<span class="number">10</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (n % <span class="number">10</span> &gt; n % <span class="number">100</span> / <span class="number">10</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">n = n / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4计算n个正整数的最小公倍数（10分）<br>题目内容：编写程序，读入n个正整数，输出它们的最小公倍数。其中，lcm(x,y)=x*y/gcd(x,y)，其中gcd(x,y)为x和y的最大公约数。</p><p>输入：整数个数n，以及n个正整数</p><p>输出：最小公倍数m</p><p>样例输入：4   1  2 3  8</p><pre><code>  输出：24</code></pre><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, a, b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;b);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = a;; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (j % a == <span class="number">0</span> &amp;&amp; j % b == <span class="number">0</span>) &#123;</span><br><span class="line">a = j;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5爱因斯坦阶梯问题（10分）<br>有阶梯，不知其数，但知：每步跨2阶，最后剩1阶；每步跨3阶，最后剩2阶；每步跨5阶，最后剩4阶；每步跨7阶，正好到楼顶。编程序求最少共有多少阶。</p><p>输入：无</p><p>输出：台阶数目</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">1</span> &amp;&amp; i % <span class="number">3</span> == <span class="number">2</span> &amp;&amp; i % <span class="number">5</span> == <span class="number">4</span> &amp;&amp; i % <span class="number">7</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, i);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="进阶">进阶</h2><p>1连续数字序列（10分）<br>问题描述：输入一个正整数S ，打印出所有和为 S 的连续正整数序列（至少含有两个数）。例如对于15有3个连续序列分别为1 2 3 4 5；4 5 6和7 8。</p><p>输入：一个正整数S (0&lt; S &lt;=10000 )，即连续序列的和。</p><p>输出：第一行输出“ANSWER“；第二行以后按如下规则输出。如果有连续序列其和为 S，则逐行输出每个连续序列；其中每行给出一种连续序列，且递增排序序列中数字；当有多个序列时，则按序列第一个数字的递增排序每一行；每行每个数字后都有一个西文空格，每行最后含有一个换行符<code>\n</code>。如果没有连续序列其和为 S，则不输出任何字符。</p><p>样例1：</p><p>输入：</p><p>15</p><p>输出：</p><p>ANSWER</p><p>1 2 3 4 5<br>4 5 6<br>7 8</p><p>样例2：</p><p>输入：</p><p>4</p><p>输出：</p><p>ANSWER</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> s;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>][<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;s);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ANSWER&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= s / <span class="number">2</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt;= s / <span class="number">2</span> + <span class="number">1</span>; j++) &#123;</span><br><span class="line">num = num + j;</span><br><span class="line"><span class="keyword">if</span> (num == s) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n%d &quot;</span>, i);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = i + <span class="number">1</span>; k &lt;= j; k++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, k);</span><br><span class="line">&#125;<span class="comment">//循环前i已打印</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">num = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2求参加竞赛人数（10分）<br>题目内容：某中学举行数学竞赛。假设每个年级组人数不超过100人，一年级组中及格生是不及格生的3倍多1人；二年级组中及格生是不及格生的6倍；二年级组及格生比一年级组及格生多5人。编写程序，求一、二年级组共有多少学生参加竞赛。</p><p>输入：无</p><p>输出：参加竞赛人数（答案有多个，每个答案占一行,按从小到大排列）</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">100</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">2</span> * j - i == <span class="number">2</span> &amp;&amp; <span class="number">4</span> * i &lt;= <span class="number">99</span> &amp;&amp; <span class="number">7</span> * j &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">a[k] = <span class="number">4</span>*i+<span class="number">1</span>+<span class="number">7</span>*j;</span><br><span class="line">k++;</span><br><span class="line"><span class="comment">//printf(&quot;%d %d %d %d %d %d\n&quot;, i, j, 4 * i + 1, 7 * j, 3 * i + 1, 6 * j);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; k; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n%d&quot;</span>, a[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//容易遗漏第二组一个人都不去的情况</span></span><br></pre></td></tr></table></figure><h1>第五讲</h1><p>1组合问题（10分）</p><p>问题描述：编写程序，输入m，n的值，计算并输出函数f的值。</p><p>输入：一个整数m和一个整数n。</p><p>输出：函数f的值。</p><p>样例：输入 4  2   输出 6</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> m, n, a;</span><br><span class="line">a = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line"><span class="keyword">if</span> (n &gt; <span class="number">0</span> &amp;&amp; m &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (m &lt; n)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (m == n)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">a = a * i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">a = a / i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m - n; i++) &#123;</span><br><span class="line">a = a / i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2逆序数（10分）<br>问题描述：编写函数，求任意四位自然数的逆序数，例如5432就是2345的逆序数。</p><p>输入：任意一个整数</p><p>输出：如果输入的不是四位自然数，则输出0；否则输出对应的逆序数。</p><p>样例1：输入 12   输出 0</p><p>样例2：输入 6543  输出3456</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line"><span class="keyword">if</span> (a &gt;= <span class="number">1000</span> &amp;&amp; a &lt; <span class="number">10000</span>) &#123;</span><br><span class="line"><span class="type">int</span> b, c, d, e;</span><br><span class="line">b = a / <span class="number">1000</span>;</span><br><span class="line">c = a / <span class="number">100</span> % <span class="number">10</span>;</span><br><span class="line">d = a / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">e = a % <span class="number">10</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, e * <span class="number">1000</span> + d * <span class="number">100</span> + c * <span class="number">10</span> + b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3转移0元素（10分）<br>问题描述：编写程序，把给定长度为10的整数数组中所有0元素全部移到后面，且所有非0元素的顺序不变。</p><p>输入：从键盘随机输入十个整数，作为数组a的元素。</p><p>输出：已将所有0元素串到后面的整数数组a的所有元素，各元素间无间隔字符。</p><p>样例：输入 0 1 1 0 0 0 1 3 2 0  输出1113200000</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line"><span class="type">int</span> k = <span class="number">10</span> - i;</span><br><span class="line"><span class="keyword">while</span> (a[i] == <span class="number">0</span> &amp;&amp; k!=<span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; <span class="number">9</span>; j++) &#123;</span><br><span class="line"><span class="type">int</span> swap = a[j];</span><br><span class="line">a[j] = a[j + <span class="number">1</span>];</span><br><span class="line">a[j + <span class="number">1</span>] = swap;</span><br><span class="line">&#125;</span><br><span class="line">k--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4循环右移（10分）<br>问题描述：编写程序，把给定长度为10的整数数组中所有元素循环右移 j 位。</p><p>输入：从键盘随机输入十个整数，作为数组a的元素；输入一个正整数j作为移动位数。</p><p>输出：移动后的整数数组a中的所有元素，各元素间无间隔字符。</p><p>样例：输入 1 2 3 4 5 6 7 8 9 0</p><pre><code>              2输出 9012345678</code></pre><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> j;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;j);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; j; i++) &#123;</span><br><span class="line"><span class="type">int</span> b = a[<span class="number">9</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">9</span>; k &gt; <span class="number">0</span>; k--) &#123;</span><br><span class="line"><span class="type">int</span> swap = <span class="number">0</span>;</span><br><span class="line">a[k] = a[k - <span class="number">1</span>];</span><br><span class="line">a[k - <span class="number">1</span>] = swap;</span><br><span class="line">&#125;</span><br><span class="line">a[<span class="number">0</span>] = b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>第六讲</h1><h2 id="基础-2">基础</h2><p>1矩阵重复元素检测（10分）<br>问题描述：编写程序判断任意给定3*3的两维整型数组中是否有相同元素。</p><p>输入：从键盘随机输入九个整数，作为数组的元素。</p><p>输出：如果数组中有相同元素，则输出“yes”；否则，输出“no”。</p><p>提示：OJ所用编译器，不支持bool类型。</p><p>样例1  输入 0 1 2 3 4 5 6 7 8   输出 no</p><p>样例2 输入 0 0 2 3 4 5 6 7 8   输出 yes</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line"><span class="type">int</span> newarr[<span class="number">9</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i][j]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, k = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++, k++)</span><br><span class="line">newarr[k] = arr[i][j];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i+<span class="number">1</span>; j &lt; <span class="number">9</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (newarr[i] == newarr[j]) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2索引数组排序（10分）</p><p>问题描述：已知5个元素的整型数组 A 未排序，一个索引数组 B 保存 A 的下标。编写程序，在不改变数组A的情况下，只改变数组 B完成对A的排序，如下图所示。</p><p>输入：从键盘随机输入五个整数，作为数组A的元素。</p><p>输出：第一行输出排序后数组A的五个元素，各元素间无间隔字符；第二行输出数组B排序后的五个元素，各元素间无间隔字符。</p><p>样例   输入 10 7 5 8 4</p><p>输出 107584</p><p>42130</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">5</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> b[<span class="number">5</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">b[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line"><span class="type">int</span> k = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] &gt; a[j]) &#123;</span><br><span class="line">k = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> swap = a[i];</span><br><span class="line">a[i] = a[k];</span><br><span class="line">a[k] = swap;</span><br><span class="line">swap = b[i];</span><br><span class="line">b[i] = b[k];</span><br><span class="line">b[k] = swap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, b[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3统计学生成绩（10分）</p><p>题目内容：编写一个程序统计某班（人数不超过50人）3门课程的成绩，它们是语文、数学和英语。先输入学生人数， 然后按编号从小到大的顺序依次输入学生成绩， 最后统计每门课程全班的总成绩和平均成绩。</p><p>输入：学生人数及每个学生各科成绩（每个学生的成绩占1行）</p><p>输出：每门课程全班的总成绩和平均成绩（第1行为各科总成绩，相邻2个数据之间间隔1个空格；第2行为各科平均成绩，相邻2个数据之间间隔1个空格）。</p><p>样例:</p><p>输入：</p><p>3</p><p>65   76   70</p><p>82   79   85</p><p>92   82   95</p><p>输出：</p><p>239  237  250</p><p>79 79 83</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">50</span>][<span class="number">3</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>, y= <span class="number">0</span>, z= <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a[i][<span class="number">0</span>], &amp;a[i][<span class="number">1</span>], &amp;a[i][<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">x += a[i][<span class="number">0</span>];</span><br><span class="line">y += a[i][<span class="number">1</span>];</span><br><span class="line">z += a[i][<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n%d %d %d&quot;</span>, x, y, z, x / n, y / n, z / n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4回文数（10分）</p><p>题目内容：编写一个程序判定用户输入的一个小于的非负整数是否为“回文数”，所谓回文数是指正读反读都相同的数。</p><p>输入：一个非负整数</p><p>输出：YES或NO</p><p>样例1:  输入：125521       输出：YES</p><p>样例2:  输入：1                 输出：YES</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">char</span> a[<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> len;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, a);</span><br><span class="line"></span><br><span class="line">len = <span class="built_in">strlen</span>(a);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = len<span class="number">-1</span>; i &lt; len / <span class="number">2</span>; i++, j--) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] != a[j]) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5逆序存放（10分）<br>题目内容：将一个由10个元素构成的int数组中的元素按逆序重新存放。</p><p>输入：10个整数</p><p>输出：按逆序重新存放后的数组元素（相邻元素之间用一个空格隔开）</p><p>样例  输入：6 8 12 11 3 5 9 16 19 24            输出：24 19 16 9 5 3 11 12 8 6</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">9</span>; i &lt; <span class="number">5</span>; i++, j--) &#123;</span><br><span class="line"><span class="type">int</span> swap = a[i];</span><br><span class="line">a[i] = a[j];</span><br><span class="line">a[j] = swap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, a[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="进阶-2">进阶</h2><p>1十进制数转换成其他进制数（10分）<br>题目内容： 编写一个程序将用户输入的十进制整数转换成给定进制的数。假设所有进制数长度不超过20位，所要转换的进制从从二进制变到九进制。</p><p>输入：十进制整数及要转换成的进制</p><p>输出：转换后的其它进制数</p><p>样例:  输入：32767  2    输出：11111111111111</p><p>样例:  输入：32767  6    输出：411411</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a, b, k;</span><br><span class="line"><span class="type">int</span> c[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">k = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (a != <span class="number">0</span>) &#123;</span><br><span class="line">c[k] = a % b;</span><br><span class="line">a = a / b;</span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = k<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, c[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2猴子选大王（10分）<br>题目内容：n只猴子（n&lt;100）要选大王，选举方法如下：所有猴子按1,2,3,……, n编号围坐一圈，从第1号开始按照1,2,……, m报数，凡报到m号的退出圈外，如此循环报数，直到圈内剩下一只猴子时，这只猴子就是大王。编程一个程序实现上述过程，n和m由键盘输入。</p><p>输入：猴子的数量n及报数的最大数字</p><p>输出：退出圈外的猴子编号序列（每数字后紧跟1个空格）</p><p>样例 输入： 5 3</p><p>输出： 3 1 5 2 4</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, m, i, head;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">a[i] = i + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">head = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (n != <span class="number">1</span>) &#123;</span><br><span class="line">head = (head + m - <span class="number">1</span>) % n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[head]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = head; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">a[i] = a[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">n--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>第七讲</h1><p>1统计指定单词出现的次数（10分）<br>题目内容：输入6个单词，查找第6个单词在前5个单词中出现的次数。</p><p>输入：6个单词</p><p>输出：一个整数（第6个单词在前5个单词中出现的次数）</p><p>样例：输入：Mary Olivia Donald Olivia Linda Olivia        输出：2</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">char</span> a[<span class="number">6</span>][<span class="number">20</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(a[i], a[<span class="number">5</span>]) == <span class="number">0</span>)</span><br><span class="line">k++;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, k);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2求矩阵所有元素平均值（10分）<br>题目内容：编写程序，用指针形式访问整型数组元素，计算并输出该矩阵所有元素的算数平均值（计算结果保留2位小数）。</p><p>输入：输入矩阵的行数和列数（假定行数和列数均大于0，小于等于4），以及所有元素值。</p><p>输出：输出矩阵所有元素的算数平均值及矩阵所有元素（相邻2个数据之间空一个空格）。</p><p>样例：</p><p>输入：1 1 9(1,1为行数和列数，9为矩阵元素)</p><p>输出：9.00 9（平均值为9.00，9为矩阵元素）</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">5</span>][<span class="number">5</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> x, y;</span><br><span class="line"><span class="type">float</span> num = <span class="number">0</span>;</span><br><span class="line">num = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; x; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; y; j++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line">num += a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, num / x / y);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; x; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; y; j++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, a[i][j]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3统计一行文本的单词个数（10分）<br>题目内容：编写程序统计一行字符中单词的个数。所谓“单词”是指连续不含空格的字符串，各单词之间用空格分隔，空格数可以是多个。</p><p>输入：输入一行字符。（假定字符串长度最大不超过99）</p><p>输出：输出单词个数。</p><p>样例：输入：C Traps and Pitfalls              输出：4</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">char</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%[^\n]&quot;</span>, a);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; a[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] == <span class="string">&#x27; &#x27;</span> &amp;&amp; a[i<span class="number">-1</span>] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, num + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>第八讲</h1><h2 id="基础-3">基础</h2><p>1字符串长度（10分）<br>问题描述：编写程序求任意给定字符串长度。</p><p>输入：从键盘随机输入一个字符串。</p><p>输出：字符串的长度。</p><p>提示：stdio.h文件中的gets函数可以读入中间带有空格的字符串。</p><p>样例： 输入234  输出3</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">gets</span>(a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">strlen</span>(a));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2交换两个字符串值（10分）<br>问题描述：编写程序，利用指针传递参数，实现两个字符串值的交换。</p><p>输入：从键盘随机输入两个字符串值，第一行是第一个字符串值，第二行是第二个字符串值。</p><p>输出：交换后两个字符串的值。</p><p>样例：输入 1234567</p><pre><code>         abcdefghijk</code></pre><p>输出abcdefghijk</p><pre><code> 1234567</code></pre><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">char</span> a[<span class="number">100</span>], b[<span class="number">100</span>], c[<span class="number">100</span>];</span><br><span class="line"><span class="type">int</span> d = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>, a, b);</span><br><span class="line"></span><br><span class="line"><span class="type">char</span>* pa = a, * pb = b, * pc = c;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strlen</span>(a) == <span class="built_in">strlen</span>(b)) &#123;</span><br><span class="line"><span class="keyword">while</span> (*pa || *pb) &#123;</span><br><span class="line">*pc = *pa;</span><br><span class="line">*pa = *pb;</span><br><span class="line">*pb = *pc;</span><br><span class="line">pa++;</span><br><span class="line">pb++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strlen</span>(a) &gt; <span class="built_in">strlen</span>(b)) &#123;</span><br><span class="line"><span class="keyword">while</span> (*pa) &#123;</span><br><span class="line">*pc = *pa;</span><br><span class="line">*pa = *pb;</span><br><span class="line">*pb = *pc;</span><br><span class="line">pa++;</span><br><span class="line">pb++;</span><br><span class="line">&#125;</span><br><span class="line">*pb = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strlen</span>(a) &lt; <span class="built_in">strlen</span>(b)) &#123;</span><br><span class="line"><span class="keyword">while</span> (*pb) &#123;</span><br><span class="line">*pc = *pa;</span><br><span class="line">*pa = *pb;</span><br><span class="line">*pb = *pc;</span><br><span class="line">pa++;</span><br><span class="line">pb++;</span><br><span class="line">&#125;</span><br><span class="line">*pa = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n%s&quot;</span>, a, b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3找出最长的单词（10分）<br>题目内容：输入5个单词，输出最长单词及其长度。如果有多个单词都是最长单词，则输出第一个。</p><p>输入：5个单词</p><p>输出：最长单词的长度及该单词（中间用一个西文空格间隔）</p><p>样例：输入：This table belongs to Mary            输出：7 belongs</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">char</span> a[<span class="number">5</span>][<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span> ; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, a[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strlen</span>(a[num]) &lt; <span class="built_in">strlen</span>(a[i]))</span><br><span class="line">num = i;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %s&quot;</span>, <span class="built_in">strlen</span>(a[num]), a[num]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提交答案<br>4求不及格学生姓名及成绩（10分）<br>题目内容：定义一个学生结构体，包括学生的姓名和一门课程成绩。实现用户从键盘输入n名学生的所有信息(最多不超过200人)，输出所有不及格的学生姓名和成绩。</p><p>输入：依次输入n（正整数），姓名（不超过19个字符的字符串），成绩（正整数）。</p><p>输出：所有不及格的学生姓名和成绩（相邻数据用1个空格隔开,每个学生信息占用一行）。</p><p>样例1：</p><p>输入：</p><p>3</p><p>zhang 58</p><p>wang 72</p><p>zhao 34</p><p>输出：</p><p>zhang 58</p><p>zhao 34</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> mark;</span><br><span class="line">&#125;a[<span class="number">200</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s %d&quot;</span>, a[i].name, &amp;a[i].mark);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span> (a[i].mark &lt; <span class="number">60</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %d\n&quot;</span>, a[i].name, a[i].mark);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5求总成绩最高的学生姓名（10分）<br>题目内容：定义一个学生结构体，包括学生姓名和数学和语文成绩。实现用户从键盘输入n名学生的所有信息(最多不超过200人)，输出总成绩最高的学生姓名。</p><p>输入：学生人数n（一个正整数），n名学生的姓名（一个字符串，长度不超过19个字符）、数学成绩（一个正整数）、语文成绩（一个正整数）</p><p>输出：总成绩最高的学生姓名</p><p>样例：</p><p>输入：3</p><p>zhang 68 89</p><p>wang 72 56</p><p>zhao 34 78</p><p>输出：</p><p>zhang</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> chinese, math, total;</span><br><span class="line">&#125;a[<span class="number">200</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, num, k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s %d %d&quot;</span>, a[i].name, &amp;a[i].math, &amp;a[i].chinese);</span><br><span class="line">a[i].total = a[i].math+a[i].chinese;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">num = a[<span class="number">0</span>].total;</span><br><span class="line">k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i].total &gt; num) &#123;</span><br><span class="line">num = a[i].total;</span><br><span class="line">k = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, a[k].name);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="进阶-3">进阶</h2><p>1字符串替换（10分）<br>题目内容：编写程序，将字符串中的所有大写英文字母按以下对应规则替换,其余类型的字符不替换：</p><p>原字母：    ABCD……XYZ</p><p>替换后字母：ZYXW……CBA</p><p>输入：在一行中输入一个不超过99个字符、并以回车结束的字符串。</p><p>输出：在一行中输出替换完成后的字符串。</p><p>样例1：输入：ABCD                         输出：ZYXW</p><p>样例2：输入：AbCDefG, Hijklmn OPq …XYZ    输出：ZbXWefT, Sijklmn LKq …CBA</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//155 - x</span></span><br><span class="line"><span class="type">char</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%[^\n]&quot;</span>, a);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; a[i] &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="number">155</span> - a[i]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2求n名学生各自的总成绩（10分）<br>题目内容：定义一个学生结构体，包括学生姓名、两门课成绩和总成绩。实现用户从键盘输入n名学生的所有信息(最多不超过200人)，求每个学生的总成绩并输出。</p><p>输入：学生人数n（1个正整数），n名学生的姓名（1个字符串，长度不超过19个字符）和两门课程的成绩（2个正整数）</p><p>输出：每个学生的姓名、总成绩 （相邻数据用一个空格隔开，每个学生信息占用一行）</p><p>样例：</p><p>输入：</p><p>3</p><p>zhang 68 89</p><p>wang 72 56</p><p>zhao 34 78</p><p>输出：</p><p>zhang 157</p><p>wang 128</p><p>zhao 112</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">person</span> &#123;</span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line">&#125;arr[<span class="number">200</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s %d %d&quot;</span>, arr[i].name, &amp;arr[i].a, &amp;arr[i].b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %d\n&quot;</span>, arr[i].name, arr[i].a + arr[i].b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3成绩排序（10分）<br>题目内容：定义一个学生结构体，包括学生名字、1门课程的成绩。实现用户从键盘输入n名学生的所有信息(最多不超过200人)，根据成绩从高到低进行排序并输出。</p><p>输入：学生人数n（1个正整数），n名学生的姓名（1个字符串，长度不超过19个字符）和成绩（1个非负整数）</p><p>输出：每个学生的姓名、总成绩 （相邻数据用一个空格隔开，每个学生信息占用一行）</p><p>样例：</p><p>输入：</p><p>3</p><p>zhang 68</p><p>wang 72</p><p>zhao 34</p><p>输出：</p><p>wang 72</p><p>zhang 68</p><p>zhao 34</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">person</span> &#123;</span><br><span class="line"><span class="type">char</span> name[<span class="number">21</span>];</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line">&#125;arr[<span class="number">201</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s %d&quot;</span>, arr[i].name, &amp;arr[i].a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="type">int</span> k = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[k].a &gt; arr[j].a)</span><br><span class="line">k--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">char</span> swaparr[<span class="number">21</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(swaparr, arr[k].name);</span><br><span class="line"><span class="built_in">strcpy</span>(arr[k].name, arr[i].name);</span><br><span class="line"><span class="built_in">strcpy</span>(arr[i].name, swaparr);</span><br><span class="line"><span class="type">int</span> swap = arr[k].a;</span><br><span class="line">arr[k].a = arr[i].a;</span><br><span class="line">arr[i].a = swap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %d\n&quot;</span>, arr[i].name, arr[i].a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//尝试用链表操作</span></span><br></pre></td></tr></table></figure><h1>第九讲</h1><h2 id="基础-4">基础</h2><p>1Hermite多项式（10分）<br>问题描述：编写程序，计算 Hermite 多项式值。Hermite 多项式定义如下。</p><p>输入：从键盘随机输入一个非负整数和一个实数，作为n和x的值。</p><p>输出：Hn(x)的值，精确到小数点后2位。</p><p>样例1：输入 0  1.5   输出 1.00</p><p>样例2：输入 1  1.5   输出 3.00</p><p>样例3：输入 2  2.4   输出 21.04</p><p>样例4：输入 5  2.4   输出 624.20</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">float</span> n, x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f %f&quot;</span>, &amp;n, &amp;x);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1.00&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, <span class="number">2</span> * x);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="type">float</span> a = <span class="number">1.0</span>;</span><br><span class="line"><span class="type">float</span> b = <span class="number">2.0</span> * x;</span><br><span class="line"><span class="type">float</span> c;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">c = <span class="number">2.0</span> * x * b - <span class="number">2.0</span> * (i - <span class="number">1</span>) * a;</span><br><span class="line">a = b;</span><br><span class="line">b = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2递归求解最大元素（10分）<br>问题描述：编写程序，用递归方法求解，长度为10的整型数组中最大元素值。</p><p>输入：由键盘任意输入10个整数作为数组值。</p><p>输出：最大元素的值</p><p>样例1：输入  0 1 2 3 4 5 6 7 8 9 输出 9</p><p>样例2：输入  9 8 7 6 5 4 3 2 1 0 输出 9</p><p>样例3：输入  0 1 2 3 4 9 5 6 7 8 输出 9</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//寻找最大的元素(now为当前最大值，据题目可设置默认为0)</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Max</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> n, <span class="type">int</span> now)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> now;</span><br><span class="line"><span class="keyword">if</span> (now &lt; arr[n - <span class="number">1</span>])</span><br><span class="line">now = arr[n - <span class="number">1</span>];</span><br><span class="line">n--;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Max</span>(arr, n, now);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">Max</span>(a, <span class="number">10</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3输出正整数的各位数字（10分）<br>问题描述：编写递归函数，把正整数的各位数字依次打印输出</p><p>输入：任意一个正整数</p><p>输出：从高位开始依次输出正整数的各位数字，每位数占用一行。</p><p>样例2: 输入 13</p><p>输出1</p><p>3</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 12458</span></span><br><span class="line"><span class="comment">//从高位输出数字</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">PrintHead</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n / <span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> n;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">PrintHead</span>(n / <span class="number">10</span>));</span><br><span class="line"><span class="keyword">return</span> n % <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">PrintHead</span>(a));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4递归求解字符串的长度（10分）<br>问题描述：编写递归函数，求给定字符串的长度。</p><p>输入：任意一个字符串（字符串中可能包含空格）</p><p>输出：输出字符串的长度</p><p>样例 : 输入Hello World!          输出12</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// asda15</span></span><br><span class="line"><span class="comment">//求字符串长度</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">StrLen</span><span class="params">(<span class="type">char</span>* str)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (*str == <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">str++;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">StrLen</span>(str) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">char</span> a[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%[^\n]&quot;</span>, a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">StrLen</span>(a));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5递归查找指定数据（10分）<br>问题描述：编写递归函数，设已有升序整数数组a[N]，并且数组中无重复元素。编写递归函数，使用对半检索方法在数组a中查找值为key的数组元素，如果找到key，函数返回元素在数组中的下标，如果未找到，函数返回-1。</p><p>输入：数组大小，数组元素，要查找的元素</p><p>输出：如果找到指定元素，输出对应的数组下标；如果未找到，输出-1。</p><p>样例: 输入     3</p><p>10 100 1000</p><p>100</p><p>输出    1</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//当你写了一堆代码，你还没捋顺逻辑，却能意外运行正确</span></span><br><span class="line"><span class="comment">// 11 12 13 14 15 [14]</span></span><br><span class="line"><span class="comment">//折半查找(可实现从下标head查找到下标tail)</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">HalfSort</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> head, <span class="type">int</span> tail, <span class="type">int</span> key)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> mid;</span><br><span class="line">mid = (head + tail) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (tail &lt; head)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[mid] == key)</span><br><span class="line"><span class="keyword">return</span> mid;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (arr[mid] &lt; key)</span><br><span class="line">head = mid + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (arr[mid] &gt; key)</span><br><span class="line">tail = mid - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">HalfSort</span>(arr, head, tail, key);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, key;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;key);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">HalfSort</span>(a, <span class="number">0</span>, n - <span class="number">1</span>, key));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="进阶-4">进阶</h2><p>1递归求解最大字符串（10分）<br>问题描述：编写递归函数char* StrMax(char *StrArr[ ]，int n)，用递归方法求n个字符串中按ASCII字典顺序排序为最大的字符串。</p><p>输入：字符串个数n（最多不超过100个），n个字符串（每个字符串不超过99个字符）</p><p>输出：按ASCII字典排序最大的字符串</p><p>样例: 输入     5</p><p>BJilin</p><p>AJilin</p><p>HJilin</p><p>IJilin</p><p>IJilinU</p><p>输出    IJilinU</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//递归求最大字符串</span></span><br><span class="line"><span class="function"><span class="type">char</span>* <span class="title">StrMax</span><span class="params">(<span class="type">char</span>* StrArr[], <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> *StrArr;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="type">char</span> swaparr[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(swaparr, <span class="built_in">StrMax</span>(StrArr, n - <span class="number">1</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(swaparr, *(StrArr+n<span class="number">-1</span>)) &gt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> swaparr;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> *(StrArr+n<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">char</span> a[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="type">char</span>* pa[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, a[i]);</span><br><span class="line">pa[i] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, <span class="built_in">StrMax</span>(pa, n));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//成年人的崩溃就在一瞬间</span></span><br></pre></td></tr></table></figure><p>2递归求解运算次数（10分）<br>问题描述：编写递归函数void JGFun(int InData,int *Nums)实现：输入一个自然数，若为偶数，则把它除以2，若为奇数，则把它乘以3加1。经过有限次运算后，可以得到自然数值1。求经过多少次可得到自然数1，并打印中间运算过程。InData为自然数，*Nums为运算次数，*Nums初值为0。</p><p>输入：任意一个大于0的整数</p><p>输出：依次输出中间运算过程中的数值，最后输出运算次数</p><p>样例3: 输入   3<br>输出   3(乘3加1)-&gt;10(除2)-&gt;5(乘3加1)-&gt;16(除2)-&gt;8(除2)-&gt;4(除2)-&gt;2(除2)-&gt;1<br>7</p><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//递归求解运算次数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">JGFun</span><span class="params">(<span class="type">int</span> inDate, <span class="type">int</span>* Nums)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (inDate == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (inDate % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d(乘3加1)-&gt;&quot;</span>, inDate);</span><br><span class="line"><span class="built_in">JGFun</span>(inDate * <span class="number">3</span> + <span class="number">1</span>, Nums);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d(除2)-&gt;&quot;</span>, inDate);</span><br><span class="line"><span class="built_in">JGFun</span>(inDate / <span class="number">2</span>, Nums);</span><br><span class="line">&#125;</span><br><span class="line">(* Nums)++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> inDate, Nums;</span><br><span class="line">Nums = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span>* pNums = &amp;Nums;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;inDate);</span><br><span class="line"><span class="built_in">JGFun</span>(inDate, pNums);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, Nums);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>第十一讲</h1><p>1自守数（10分）<br>问题描述：若一个整数a满足条件a*a的尾数等于a则称a为自守数，例如</p><p>25<em>25=625，76</em>76=5776， 9376*9376=87909376</p><p>都是自守数。编写程序，求n以内所有自守数。</p><p>输入：从键盘随机输入一个非负整数作为n值。</p><p>输出：输出小于n的所有自守数，每行一个。</p><p>样例1：输入</p><pre><code>  10   </code></pre><p>输出</p><p>1</p><pre><code> 5 6</code></pre><p>时间限制：500ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, a, b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">a = i;</span><br><span class="line">b = i * i;</span><br><span class="line"><span class="keyword">while</span> (a != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (a % <span class="number">10</span> != b % <span class="number">10</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">a /= <span class="number">10</span>;</span><br><span class="line">b /= <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2正整数分解（10分）<br>问题描述：对于正整数n（n&lt;=20），输出其和等于n的所有不增的正整数和式。</p><p>输入：从键盘随机输入一个正整数n。</p><p>输出：所有和为n的正整数和式，每个和式占一行。</p><p>样例1：输入</p><pre><code>               4</code></pre><p>输出</p><pre><code>4=3+1   4=2+2   4=2+1+1   4=1+1+1+1</code></pre><p>样例2：输入</p><pre><code>             5   </code></pre><p>输出</p><p>5=4+1</p><pre><code>   5=3+2   5=3+1+1   5=2+2+1   5=2+1+1+1   5=1+1+1+1+1</code></pre><p>时间限制：500ms内存限制：32000kb<br>C</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num[<span class="number">21</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>; <span class="comment">//记录加数数量</span></span><br><span class="line"><span class="type">int</span> N;</span><br><span class="line"></span><br><span class="line"><span class="comment">//深搜求解</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> sum)</span> </span>&#123;</span><br><span class="line"><span class="comment">//递归出口</span></span><br><span class="line"><span class="keyword">if</span> (sum == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d=%d&quot;</span>, N, num[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; x; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;+%d&quot;</span>, num[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">num[x] = i;</span><br><span class="line">x++;</span><br><span class="line"><span class="keyword">if</span> (sum - i &gt;= <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">dfs</span>(i + <span class="number">1</span>, sum - i);</span><br><span class="line">&#125;</span><br><span class="line">x--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line"><span class="built_in">dfs</span>(N, N);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>第十二讲</h1><p>1创建单向链表（10分）<br>问题描述：根据随机输入的若干非零整数，以数字0结束；建立一个新链表。</p><p>输入：随机输入若干个整数，以数字0结束</p><p>输出：新建链表中个节点的值，数字间没有间隔字符。</p><p>样例：输入 5 4 2 1 3 0           输出 54213</p><p>时间限制：2000ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span> &#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* next;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//新建空链表</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">build</span>() &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* head, * tmp, * p;</span><br><span class="line">head = tmp = p = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">head = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;head-&gt;x);</span><br><span class="line">tmp = head;</span><br><span class="line">tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">p = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p-&gt;x);</span><br><span class="line"><span class="keyword">if</span> (p-&gt;x == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">tmp-&gt;next = p;</span><br><span class="line">tmp = p;</span><br><span class="line">tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印链表</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (head != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, head-&gt;x);</span><br><span class="line">head = head-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//释放链表内存地址</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">release</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* p;</span><br><span class="line">p = head;</span><br><span class="line"><span class="keyword">while</span> (head != <span class="literal">NULL</span>) &#123;</span><br><span class="line">p = head-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(head);</span><br><span class="line">head = p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* head;</span><br><span class="line">head = <span class="built_in">build</span>();</span><br><span class="line"><span class="built_in">print</span>(head);</span><br><span class="line"><span class="built_in">release</span>(head);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2删除单向链表中指定节点（10分）<br>问题描述：删除非零整数链表中包含的指定整数值节点。</p><p>输入：第一行，以数字0结束的若干非零整数作为新建链表的各节点值；</p><p>第二行，一个整数作为删除节点值。</p><p>输出：删除后的链表中各节点值。</p><p>样例：输入 4 2 1 3 3 2 0</p><p>3</p><p>输出 4212</p><p>时间限制：2000ms内存限制：32000kb</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span> &#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* next;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//新建空链表</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">build</span>() &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* head, * tmp, * p;</span><br><span class="line">head = tmp = p = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">head = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;head-&gt;x);</span><br><span class="line">tmp = head;</span><br><span class="line">tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">p = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p-&gt;x);</span><br><span class="line"><span class="keyword">if</span> (p-&gt;x == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">tmp-&gt;next = p;</span><br><span class="line">tmp = p;</span><br><span class="line">tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除节点</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">del</span>(<span class="keyword">struct</span> cell* head, <span class="type">int</span> n) &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* p, * p0;</span><br><span class="line">p0 = head;</span><br><span class="line">p = head;</span><br><span class="line"><span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;x == n) &#123;</span><br><span class="line"><span class="comment">//删除头节点</span></span><br><span class="line"><span class="keyword">if</span> (p == head) &#123;</span><br><span class="line">head = head-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line">p = head;</span><br><span class="line">p0 = head;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除末节点</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (p-&gt;next == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line">p0-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除中间节点</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">p0-&gt;next = p-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line">p = p0-&gt;next;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">p0 = p;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印链表</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (head != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, head-&gt;x);</span><br><span class="line">head = head-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//释放链表内存地址</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">release</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* p;</span><br><span class="line"><span class="keyword">while</span> (head != <span class="literal">NULL</span>) &#123;</span><br><span class="line">p = head-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(head);</span><br><span class="line">head = p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* head;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">head = <span class="built_in">build</span>();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">head = <span class="built_in">del</span>(head, n);</span><br><span class="line"><span class="built_in">print</span>(head);</span><br><span class="line"><span class="built_in">release</span>(head);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 吉林大学2022秋季中国大学mooc程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 吉林大学2022秋季中国大学mooc程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吉林大学2022秋季超星学习通程序设计第二章到第四章</title>
      <link href="/2022/12/03/%E5%90%89%E6%9E%97%E5%A4%A7%E5%AD%A62022%E7%A7%8B%E5%AD%A3/%E8%B6%85%E6%98%9F%E5%AD%A6%E4%B9%A0%E9%80%9A/2-4/"/>
      <url>/2022/12/03/%E5%90%89%E6%9E%97%E5%A4%A7%E5%AD%A62022%E7%A7%8B%E5%AD%A3/%E8%B6%85%E6%98%9F%E5%AD%A6%E4%B9%A0%E9%80%9A/2-4/</url>
      
        <content type="html"><![CDATA[<h1>实验02 分支与循环程序设计（2022级）</h1><p>题目编号：Exp02-Enhance04,GJBook3-04-14</p><p>题目名称：字母矩阵</p><p>题目描述：用循环语句控制打印如下图形，其中输出的每个字母占用2个字符宽度（空格在前，字母在后）。</p><p>A B C D E F G H I<br>B C D E F G H I A<br>C D E F G H I A B<br>D E F G H I A B C<br>E F G H I A B C D<br>F G H I A B C D E<br>E F G H I A B C D<br>D E F G H I A B C<br>C D E F G H I A B<br>B C D E F G H I A<br>A B C D E F G H I</p><p>输入：无</p><p>输出：如上图字母矩阵</p><p>说明：请同学们根据字母、位置的规律实现该程序。打表爽一时，考试两行泪~</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">char</span> ch, a;</span><br><span class="line">ch = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">a = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (ch &gt; <span class="string">&#x27;I&#x27;</span>) &#123;</span><br><span class="line">ch = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>, ch);</span><br><span class="line">ch++;</span><br><span class="line">&#125;</span><br><span class="line">ch = a + j + <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">ch = <span class="string">&#x27;E&#x27;</span>;</span><br><span class="line">a = <span class="string">&#x27;E&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (ch &gt; <span class="string">&#x27;I&#x27;</span>) &#123;</span><br><span class="line">ch = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>, ch);</span><br><span class="line">ch++;</span><br><span class="line">&#125;</span><br><span class="line">ch = a - j - <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>实验03+模块化程序设计（2022级）</h1><ol start="3"><li>(程序题)<br>题目编号：Exp03-Basic02，GJBook3-05-06</li></ol><p>题目名称：逆序数</p><p>题目描述：编写函数，求任意位自然数的逆序数，例如5432就是2345的逆序数。</p><p>输入：任意一个整数（&lt;10^18） 。</p><p>输出：如果输入的不是自然数，则输出NULL；否则输出对应的逆序数。</p><p>样例1：</p><p>输入：120<br>输出：21<br>样例2：</p><p>输入：999999999999999999<br>输出：999999999999999999<br>样例3：</p><p>输入：-1357<br>输出：NULL</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ReNum</span><span class="params">(<span class="type">long</span> <span class="type">long</span> x)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;x);</span><br><span class="line"><span class="keyword">if</span> (x &gt;= <span class="number">0</span>)</span><br><span class="line"><span class="built_in">ReNum</span>(x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NULL&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求逆序数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ReNum</span><span class="params">(<span class="type">long</span> <span class="type">long</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x % <span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line">x /= <span class="number">10</span>;</span><br><span class="line"><span class="keyword">while</span> (x != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, x % <span class="number">10</span>);</span><br><span class="line">x /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>(程序题)<br>题目编号 ：Exp03-Basic03</li></ol><p>题目名称：多边形周长</p><p>题目描述：编写程序，求由键盘按顺时针方向输入n（0&lt;n&lt;=10)个顶点坐标的多边形周长（测试数据已保证当n&gt;2时，各点按输入方向依次连接可构成封闭的n边形）。</p><p>输入：第一行输入一个整数，作为n值；以后每行两个浮点数（double），为多边形各顶点的坐标。</p><p>输出：多边形的周长，精确到小数点后2位。</p><p>样例1：</p><p>输入：<br>4<br>0  0<br>0  1<br>1  1<br>1  0<br>输出：4.00<br>样例2：</p><p>输入：<br>1<br>2 3<br>输出：<br>0.00<br>样例3：</p><p>输入：<br>2<br>2 3<br>2 4<br>输出：<br>1.00</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Len</span><span class="params">(<span class="type">double</span> x1, <span class="type">double</span> x2, <span class="type">double</span> y1, <span class="type">double</span> y2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">double</span> x1, y1, x2, y2, x3, y3, C;</span><br><span class="line">C = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>, &amp;x1, &amp;y1);</span><br><span class="line">x3 = x1;</span><br><span class="line">y3 = y1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">C = <span class="number">0.00</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">2</span>) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>, &amp;x2, &amp;y2);</span><br><span class="line">C += <span class="built_in">Len</span>(x1, x2, y1, y2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>, &amp;x2, &amp;y2);</span><br><span class="line">C += <span class="built_in">Len</span>(x1, x2, y1, y2);</span><br><span class="line">x1 = x2;</span><br><span class="line">y1 = y2;</span><br><span class="line">&#125;</span><br><span class="line">C += <span class="built_in">Len</span>(x1, x3, y1, y3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, C);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//计算两点一线长度</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Len</span><span class="params">(<span class="type">double</span> x1, <span class="type">double</span> x2, <span class="type">double</span> y1, <span class="type">double</span> y2)</span> </span>&#123;</span><br><span class="line"><span class="type">double</span> length;</span><br><span class="line">length = <span class="built_in">pow</span>(<span class="built_in">pow</span>(x1 - x2, <span class="number">2</span>) + <span class="built_in">pow</span>(y1 - y2, <span class="number">2</span>), <span class="number">0.5</span>);</span><br><span class="line"><span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>(程序题)<br>题目编号：Exp03-Extend01，GJBook3-12-04</li></ol><p>题目名称：自守数</p><p>题目描述：若一个正整数a满足条件 a^2 的尾数等于a，则称a为自守数，例如：</p><p>25^2=625 、76^2=5776 、9376^2=87909376 都是自守数。</p><p>编写程序，求小于等于n的所有自守数。</p><p>输入：从键盘随机输入一个正整数n（不超过10000000）。</p><p>输出：输出小于等于n的所有自守数，每个数之间以一个西文空格间隔。</p><p>样例1：</p><p>输入：10<br>输出：1 5 6<br>样例2：</p><p>输入：100<br>输出：1 5 6 25 76</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">ZNum</span><span class="params">(<span class="type">long</span> <span class="type">long</span> n)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">long</span> <span class="type">long</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">ZNum</span>(i))</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %lld&quot;</span>, i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断一个数是否为自守数</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">ZNum</span><span class="params">(<span class="type">long</span> <span class="type">long</span> n)</span> </span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> x = n * n;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> a = n;<span class="comment">//中间量</span></span><br><span class="line"><span class="keyword">if</span> (n % <span class="number">10</span> != x % <span class="number">10</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">n /= <span class="number">10</span>;</span><br><span class="line">x /= <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (a&lt;<span class="number">10</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (n / <span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (n % <span class="number">10</span> != x % <span class="number">10</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (n % <span class="number">10</span> != x % <span class="number">10</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (n / <span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【计2014级期中试题】素数判断。</p><p>问题描述：一个大于1的自然数，只能被1和它本身整除，不能被其它除0以外的自然数整除，则该数称之为素数。编写函数，判断一个整数是否为素数。</p><p>注：判断素数部分必须编写成一个独立于main()函数的其它函数。</p><p>输入：一个大于1的自然数</p><p>输出：根据是否是素数输出Y/N</p><p>样例1：</p><p>输入：3</p><p>输出：Y</p><p>样例2：</p><p>输入：51</p><p>输出：N</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">char</span> <span class="title">SNum</span><span class="params">(<span class="type">long</span> <span class="type">long</span> n)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="built_in">SNum</span>(n));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断一个数是否为素数</span></span><br><span class="line"><span class="function"><span class="type">char</span> <span class="title">SNum</span><span class="params">(<span class="type">long</span> <span class="type">long</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span> || n == <span class="number">2</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;Y&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">long</span> <span class="type">long</span> i = <span class="number">2</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (n % i == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;N&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;Y&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>实验04 数组及其在程序设计中的应用（2022级）</h1><ol><li>(程序题)<br>题目编号：Exp04-Basic01,GJBook3例-06-13</li></ol><p>题目名称：括号匹配</p><p>题目描述：编写程序，从终端读入以‘@’为结束符的字符序列，检查该字符序列中的 ( 与 )、 [ 与 ] 、{ 与 } 是否匹配（个数相等且位置不相交）。</p><p>输入：包含一串以‘@’为结束符的字符串，其间可能包含空白或其它非括号字符。</p><p>输出：如果字符串中三类括号匹配，则输出YES；否则输出NO。</p><p>样例1:</p><p>输入：</p><p>{a,a}b{c[cc]c}  {a(bb[cc]dd)a}@<br>输出：<br>YES<br>样例2:</p><p>输入：<br>{a,a}b{c[cc]c] {a(bb[cc]dd)a}@<br>输出：<br>NO</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">push</span><span class="params">(<span class="type">char</span>* a, <span class="type">char</span> ch)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pop</span><span class="params">(<span class="type">char</span>* a)</span></span>;</span><br><span class="line"><span class="function"><span class="type">char</span> <span class="title">GetCh</span><span class="params">(<span class="type">char</span>* a)</span></span>;</span><br><span class="line"><span class="type">int</span> top = <span class="number">-1</span>;<span class="comment">//栈顶位置</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">char</span> a[<span class="number">50</span>];</span><br><span class="line"><span class="type">char</span> str[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">sizeof</span>(str); i++) &#123;</span><br><span class="line"><span class="keyword">switch</span> (str[i]) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;[&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;&#123;&#x27;</span>:</span><br><span class="line"><span class="built_in">push</span>(a, str[i]); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">GetCh</span>(a) == <span class="string">&#x27;(&#x27;</span>)</span><br><span class="line"><span class="built_in">pop</span>(a);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;]&#x27;</span>:</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">GetCh</span>(a) == <span class="string">&#x27;[&#x27;</span>)</span><br><span class="line"><span class="built_in">pop</span>(a);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">GetCh</span>(a) == <span class="string">&#x27;&#123;&#x27;</span>)</span><br><span class="line"><span class="built_in">pop</span>(a);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (str[i] == <span class="string">&#x27;@&#x27;</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (top == <span class="number">-1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//压栈</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">push</span><span class="params">(<span class="type">char</span>* a, <span class="type">char</span> ch)</span> </span>&#123;</span><br><span class="line">top++;</span><br><span class="line">a[top] = ch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//弹栈</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pop</span><span class="params">(<span class="type">char</span>* a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (top == <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">top--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调取栈顶元素</span></span><br><span class="line"><span class="function"><span class="type">char</span> <span class="title">GetCh</span><span class="params">(<span class="type">char</span>* a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (top == <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> a[top];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>(程序题)<br>题目编号：Exp04-Basic02</li></ol><p>题目名称：n倍数关系</p><p>题目描述：</p><p>给定若干不完全相同的正整数（&lt;10000）和n（n&lt;5)，计算这些正整数里面有多少数对满足：其中一个是另一个的n倍。例如：1 4 3 2 9 7 18 22，n=3时得到的答案是2；因为3是1的3倍，9是3的3倍。</p><p>输入：输入第一行给出正整数n的值，接下来包括多组测试数据。每组数据最多100个整数占用一行，以数字0结束(不计入100个整数里)。测试数据不超过20组，最后一行只包括-1，表示输入数据结束。</p><p>输出：对每组输入数据，输出一行，给出有多少数对满足其中一个是另一个n倍。（注：最后一行末尾无换行符等多余字符。）</p><p>样例：</p><p>输入：<br>2<br>1 4 3 2 9 7 18 22 0<br>2 4 8 10 0<br>7 5 11 13 1 3 0<br>-1<br>输出：<br>3<br>2<br>0</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//debug</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DEBUG</span><span class="params">(<span class="type">int</span>* num, <span class="type">int</span> x, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; x; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, num[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num[<span class="number">101</span>];</span><br><span class="line"><span class="type">int</span> a, n, b; <span class="comment">//b计数</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n); <span class="comment">//获取倍数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">21</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取单组数据</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="built_in">sizeof</span>(num); j++) &#123;</span><br><span class="line">a = j; <span class="comment">//debug</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num[j]);</span><br><span class="line"><span class="keyword">if</span> (num[j] == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span> (num[j] == <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//DEBUG(num, a, n);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//条件判断</span></span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; a; j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = j + <span class="number">1</span>; k &lt;= a; k++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">float</span>(num[j]) / num[k] == n || <span class="built_in">float</span>(num[k]) / num[j] == n)</span><br><span class="line">b++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n%d&quot;</span>, b);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>(程序题)<br>题目编号:  Exp04-Basic03</li></ol><p>题目名称:  数组排序<br>题目描述:  编写函数，分别采用教材给出的“主元选择排序”、“冒泡排序”和“逐步增加递增子序列”排序方法对给定数组进行排序。综合运用调试方法，观察不同排序方法在排序过程中数组元素值的变化情况，如观察递增排序如下序列{9、8、7、6、5、4、3、2、1、0}，{0、1、2、3、4、5、6、7、8、9}和{2、9、4、7、6、5、8、3、0、1}时，数组中元素比较次数、移动或交换次数。</p><p>说明：</p><p>（1）对于“主元选择排序”和“冒泡排序”，执行完3个赋值操作，计为1次交换。</p><p>（2）对于“逐步增加递增子序列”排序，每执行一次while循环的循环条件判断，计为1次比较；如果在某轮比较中元素本身的位置没有变化，则本轮移动次数为0。</p><p>（3）因本题目的是观察输出数据，深入理解排序算法；所以样例点和实测点一致。</p><p>输入:包含10个整数的待排序数组。</p><p>输出:在一行内依次输出，递增排序时，主元排序比较次数 和 移动/交换次数、冒泡排序比较次数 和 移动/交换次数和递增子序列排序比较次数 和 移动/交换次数，相邻数字之间以一个西文空格间隔。</p><p>样例1:</p><p>输入：<br>9 8 7 6 5 4 3 2 1 0<br>输出：<br>45 9 90 45 54 54<br>样例2:</p><p>输入：<br>0 1 2 3 4 5 6 7 8 9<br>输出：<br>45 9 9 0 9 0<br>样例3:</p><p>输入：<br>2 2 3 3 5 5 4 4 6 6<br>输出：<br>45 9 27 4 13 6<br>样例4:</p><p>输入：<br>1 0 3 2 5 4 7 6 9 8<br>输出：<br>45 9 18 5 14 10<br>样例5:</p><p>输入：<br>1 2 3 4 5 5 4 3 2 1<br>输出：<br>45 9 81 20 29 24</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SelectSort</span><span class="params">(<span class="type">int</span>* num)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BubbleSort</span><span class="params">(<span class="type">int</span>* num)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InsertionSort</span><span class="params">(<span class="type">int</span>* num)</span></span>;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> num[<span class="number">10</span>], newnum[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">newnum[i] = num[i];</span><br><span class="line"><span class="built_in">SelectSort</span>(newnum);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, a, b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">newnum[i] = num[i];</span><br><span class="line"><span class="built_in">BubbleSort</span>(newnum);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d %d&quot;</span>, a, b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">newnum[i] = num[i];</span><br><span class="line"><span class="built_in">InsertionSort</span>(newnum);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d %d&quot;</span>, a, b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SelectSort</span><span class="params">(<span class="type">int</span>* num)</span> </span>&#123;</span><br><span class="line">a = <span class="number">0</span>; </span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line"><span class="type">int</span> k = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i+<span class="number">1</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (num[k] &gt; num[j])</span><br><span class="line">k = j;</span><br><span class="line">a++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> swap = num[i];</span><br><span class="line">num[i] = num[k];</span><br><span class="line">num[k] = swap;</span><br><span class="line">b++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BubbleSort</span><span class="params">(<span class="type">int</span>* num)</span> </span>&#123;</span><br><span class="line">a = <span class="number">0</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (flag) &#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (num[i] &gt; num[i + <span class="number">1</span>]) &#123;</span><br><span class="line"><span class="type">int</span> swap = num[i];</span><br><span class="line">num[i] = num[i + <span class="number">1</span>];</span><br><span class="line">num[i + <span class="number">1</span>] = swap;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">b++;</span><br><span class="line">&#125;</span><br><span class="line">a++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//插入排序（逐步增加递增子序列）</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InsertionSort</span><span class="params">(<span class="type">int</span>* num)</span> </span>&#123;</span><br><span class="line">a = <span class="number">0</span>;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> j, swap;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">j = i - <span class="number">1</span>;</span><br><span class="line">a++;</span><br><span class="line"><span class="keyword">while</span> ((num[j] &gt; num[i]) &amp;&amp; j &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">j--;</span><br><span class="line">a++;</span><br><span class="line">&#125;</span><br><span class="line">swap = num[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = i - <span class="number">1</span>; k &gt;= j + <span class="number">1</span>; k--) &#123;</span><br><span class="line">num[k + <span class="number">1</span>] = num[k];</span><br><span class="line">b++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (num[j + <span class="number">1</span>] != swap)</span><br><span class="line">b++;</span><br><span class="line">num[j + <span class="number">1</span>] = swap;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>(程序题)<br>题目编号：Exp04-Basic04，GJBook3-06-19</li></ol><p>题目名称：删除重复元素</p><p>题目描述：编写函数，不使用其他辅助数组，把整型数组中重复元素删得只剩一个；所有未被删除元素都保留最先顺序移动到数组前面。</p><p>输入：第一行输入数组长度n（≤100），第二行依次从键盘随机输入n个整数作为数组元素值。</p><p>输出：已删除重复元素的数组，各元素间以一个西文空格间隔，最后一个元素后无字符。</p><p>样例1：</p><p>输入：<br>10<br>1 1 2 3 3 3 2 1 2 4<br>输出：<br>1 2 3 4<br>样例2：</p><p>输入：<br>10<br>1 0 2 2 2 2 2 2 2 2<br>输出：<br>1 0 2</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j] == arr[i]) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = j; k &lt; n; k++) &#123;</span><br><span class="line">arr[k] = arr[k+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">n--;</span><br><span class="line">i--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, arr[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, arr[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>(程序题)<br>题目编号：Exp04-Basic05，GJBook3-06-06</li></ol><p>题目名称：转移0元素</p><p>题目描述：编写程序，不使用其他辅助数组，把给定整型数组中所有0元素全部移到后面，且所有非0元素的顺序不变。</p><p>输入：第一行输入数组长度n（≤100），第二行依次从键盘随机输入n个整数作为数组元素值。</p><p>输出：已将所有0元素串到后面的整数数组，各元素间以一个西文空格间隔，最后一个元素后无字符。</p><p>样例1：</p><p>输入：<br>10<br>0 3 1 0 0 0 1 2 3 0<br>输出：<br>3 1 1 2 3 0 0 0 0 0<br>样例2：</p><p>输入：<br>10<br>0 0 0 0 0 0 1 2 3 4<br>输出：<br>1 2 3 4 0 0 0 0 0 0</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">MoveZeroArr</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> n)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">MoveZeroArr</span>(arr, n)[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, <span class="built_in">MoveZeroArr</span>(arr, n)[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//移动零元素</span></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">MoveZeroArr</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[i] == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; n<span class="number">-1</span>; j++) &#123;</span><br><span class="line"><span class="type">int</span> swap = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = swap;</span><br><span class="line">&#125;</span><br><span class="line">n--;</span><br><span class="line">i--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>(程序题)<br>题目编号 ：Exp04-Basic06，GJBook3-06-04</li></ol><p>题目名称：循环右移</p><p>题目描述：编写程序，不使用其它辅助数组，把一维整型数组中的各个元素循环右移j位。</p><p>输入：</p><p>第一行输入两个整数，n表示数组长度（0&lt;n&lt;=100），j表示循环右移的位数（j&gt;=0）；</p><p>第二行依次从键盘随机输入n个整数作为数组元素值。</p><p>输出：</p><p>循环右移后的整数数组，各元素间以一个西文空格间隔，最后一个元素后无字符。</p><p>样例1：</p><p>输入：<br>10 2<br>1 2 3 4 5 6 7 8 9 0<br>输出：<br>9 0 1 2 3 4 5 6 7 8<br>样例2：</p><p>输入：<br>10 23<br>1 2 3 4 5 6 7 8 9 0<br>输出：<br>8 9 0 1 2 3 4 5 6 7</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, j;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;j);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; j; i++) &#123;</span><br><span class="line"><span class="type">int</span> swap = arr[n<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = n - <span class="number">1</span>; k &gt; <span class="number">0</span>; k--)</span><br><span class="line">arr[k] = arr[k - <span class="number">1</span>];</span><br><span class="line">arr[<span class="number">0</span>] = swap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, arr[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, arr[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>(程序题)<br>题目编号：Exp04-Basic07，GJBook3-06-01</li></ol><p>题目名称：检验矩阵重复元素</p><p>题目描述：编写程序判断任意给定n*n的两维整型数组中是否有相同元素。</p><p>输入：第一行输入数组行数n（≤10），第二行随机输入n*n个整数作为数组元素值。</p><p>输出：如果数组中有相同元素，则输出YES；否则，输出NO。</p><p>样例1：</p><p>输入：<br>3<br>1 2 3 4 5 6 7 8 9<br>输出：<br>NO<br>样例2：</p><p>输入：<br>3<br>1 1 2 3 4 5 6 7 8<br>输出：<br>YES</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">10</span>][<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i][j]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k++) &#123;</span><br><span class="line"><span class="keyword">if</span> (k != j)</span><br><span class="line"><span class="keyword">if</span> (arr[i][j] == arr[i][k]) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (k != i)</span><br><span class="line"><span class="keyword">if</span> (arr[i][j] == arr[k][j]) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li>(程序题)<br>题目编号: Exp04-Basic08,GJBook3-06-03</li></ol><p>题目名称: 矩阵转置</p><p>问题描述: 编写程序，将任意给定n*n的两维整型数组转置。</p><p>输入：第一行输入数组行数n（≤10），第二行随机输入n*n个整数作为数组元素值。</p><p>输出：按先行后列、从左至右的顺序输出转置后数组内的所有元素，每行n个元素，同一行内的各元素间以一个西文空格间隔；每行最后一个元素除必要的回车换行符外无其它字符。</p><p>样例1：</p><p>输入：<br>3<br>1 2 3<br>1 2 3<br>1 2 3<br>输出：<br>1 1 1<br>2 2 2<br>3 3 3<br>样例2：</p><p>输入：<br>3<br>1 1 1<br>2 2 2<br>3 3 3<br>输出：<br>1 2 3<br>1 2 3<br>1 2 3</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i][j]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="type">int</span> swap = arr[i][j];</span><br><span class="line">arr[i][j] = arr[j][i];</span><br><span class="line">arr[j][i] = swap;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, arr[i][<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, arr[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="9"><li>(程序题)<br>题目编号：Exp04-Basic09，GJBook3-06-02</li></ol><p>题目名称：检验矩阵主对角线对称</p><p>题目描述：编写程序，判断任意给定n*n的两维整型数组是否关于主对角线对称。</p><p>输入：第一行输入数组行数n（≤10），第二行随机输入n*n个整数作为数组元素值。</p><p>输出：如果数组关于主对角线对称，则输出YES；否则输出NO。</p><p>样例1：</p><p>输入：</p><p>3<br>1 2 3<br>2 1 2<br>3 2 1<br>输出：<br>YES<br>样例2：</p><p>输入：</p><p>3<br>0 0 1<br>2 1 2<br>3 2 1<br>输出：<br>NO</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i][j]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[i][j] != arr[j][i]) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="10"><li>(程序题)<br>题目编号：Exp04-Basic10，GJBook3-06-12</li></ol><p>题目名称：字符串反序</p><p>问题描述：编写程序，将给定的字符串反序输出。</p><p>输入：一个长度不超过255的字符串，字符串中可能含有空白字符。</p><p>输出：反序输出的字符串。</p><p>样例1：</p><p>输入 A            输出 A</p><p>样例2：</p><p>输入 123 45    输出  54 321</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">255</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%[^\n]&quot;</span>, str);</span><br><span class="line">n = <span class="built_in">strlen</span>(str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = n<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, str[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="11"><li>(程序题)<br>题目编号：Exp04-Enhance01,GJBook3-06-25</li></ol><p>题目名称：规则形式构建集合</p><p>题目描述：</p><p>设整数集合 M 定义如下：</p><p>(1) 1∈M ；</p><p>(2) 若 x ∈M , 则 2x+1 ∈M , 3x+1 ∈M ；</p><p>(3) 没有别的整数属于集合 M 。</p><p>编程序按递增顺序生成并输出集合 M 的前n项</p><p>输入：一个正整数n（≤300）。</p><p>输出：按递增序列输出n个属于集合M的整数，各数间以一个西文空格间隔；最后一个数后无字符。</p><p>样例1:</p><p>输入：10<br>输出：1 3 4 7 9 10 13 15 19 21<br>样例2：</p><p>输入：1<br>输出：1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SelectSort</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DelArr</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> n)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="type">int</span> arr[<span class="number">1100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">arr[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>, x = <span class="number">0</span>; x &lt;= <span class="number">500</span>; i += <span class="number">2</span>, x++) &#123;</span><br><span class="line"><span class="type">int</span> num1 = <span class="number">2</span> * arr[x] + <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> num2 = <span class="number">3</span> * arr[x] + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">arr[i] = num1;</span><br><span class="line">arr[i + <span class="number">1</span>] = num2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">DelArr</span>(arr, <span class="number">1000</span>);</span><br><span class="line"><span class="built_in">SelectSort</span>(arr, <span class="number">800</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, arr[i]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//选择排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SelectSort</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++) &#123;</span><br><span class="line"><span class="type">int</span> k = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[k] &gt; arr[j])</span><br><span class="line">k = j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> swap = arr[i];</span><br><span class="line">arr[i] = arr[k];</span><br><span class="line">arr[k] = swap;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除重复元素</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DelArr</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j] == arr[i]) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = j; k &lt; n; k++) &#123;</span><br><span class="line">arr[k] = arr[k + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">n--;</span><br><span class="line">j--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="12"><li>(程序题)<br>题目编号 ：Exp04-Enhance02，GJBook3-06-26</li></ol><p>题目名称：约瑟夫问题(Josephus)</p><p>题目描述：</p><p>古代某法官要判决 n 个犯人死刑, 他有一条荒唐的逻辑, 将犯人首尾相接排成圆圈，所有计数从1开始； 然后从第 s 个人开始数, 每数到第 m 个犯人，则拉出来处决; 然后再数 m 个，数到的犯人再处决；… ; 但剩下的最后一个犯人可以赦免。编程序，给出处决顺序，并告知哪一个人活下来。</p><p>输入：三个正整数 n（≤1000），s和m，都可以使用int类型变量表示。</p><p>输出：依次输出被处决人员的编号，每个编号之间用一个西文空格间隔，最后一个编号后无字符。</p><p>样例：</p><p>输入：6 1 5<br>输出：5 4 6 2 3 1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, s, m, k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;n, &amp;s, &amp;m);</span><br><span class="line"><span class="type">int</span> arr[<span class="number">1001</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">arr[i] = i + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">k = s - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (n != <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; m; i++) &#123;</span><br><span class="line">k++;</span><br><span class="line"><span class="keyword">if</span> (k &gt; n - <span class="number">1</span>)</span><br><span class="line">k = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[k]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = k; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">arr[i] = arr[i + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (k == n - <span class="number">1</span>)</span><br><span class="line">k = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">n--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="13"><li>(程序题)<br>题目编号 ：Exp04-Enhance03，freshman-1006</li></ol><p>题目名称：英文翻译自然数</p><p>题目描述：按常规英文输出1000以内自然数的英文读法。</p><p>输入：每个测试输入包含 1 个测试用例，给出正整数 n（0&lt;= n &lt;1000）</p><p>输出：输出占一行：如果 0&lt;= n &lt;1000, 用规定的格式输出 n，所有英文单词小写，最后一个单词后无字符；否则输出ERR。</p><p>样例：</p><p>输入：123<br>输出：one hundred and twenty-three</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ANum_to_Eng</span><span class="params">(<span class="type">char</span>* eng, <span class="type">int</span> num)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BNum_to_Eng</span><span class="params">(<span class="type">char</span>* eng, <span class="type">int</span> num)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CNum_to_Eng</span><span class="params">(<span class="type">char</span>* eng, <span class="type">int</span> num)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="type">int</span> num_arr[<span class="number">3</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">char</span> eng[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (n &gt;= <span class="number">0</span> &amp;&amp; n &lt; <span class="number">1000</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">num_arr[i] = n % <span class="number">10</span>;</span><br><span class="line">n = n / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//百位</span></span><br><span class="line"><span class="keyword">if</span> (num_arr[<span class="number">0</span>] != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">ANum_to_Eng</span>(eng, num_arr[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s hundred&quot;</span>, eng);</span><br><span class="line"><span class="keyword">if</span> (num_arr[<span class="number">1</span>] == <span class="number">0</span> &amp;&amp; num_arr[<span class="number">2</span>] == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; and &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//十位</span></span><br><span class="line"><span class="keyword">if</span> (num_arr[<span class="number">1</span>] != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//尾数为10 - 19</span></span><br><span class="line"><span class="keyword">if</span> (num_arr[<span class="number">1</span>] == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (num_arr[<span class="number">2</span>] == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">BNum_to_Eng</span>(eng, num_arr[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, eng);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">CNum_to_Eng</span>(eng, num_arr[<span class="number">2</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, eng);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//位数为20 - 99</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (num_arr[<span class="number">2</span>] == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">BNum_to_Eng</span>(eng, num_arr[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, eng);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">BNum_to_Eng</span>(eng, num_arr[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s-&quot;</span>, eng);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//个位</span></span><br><span class="line"><span class="built_in">ANum_to_Eng</span>(eng, num_arr[<span class="number">2</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, eng);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ERR&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ANum_to_Eng</span><span class="params">(<span class="type">char</span>* eng, <span class="type">int</span> num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (num) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;zero&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;one&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;two&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;three&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;four&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;five&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;six&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;seven&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;eight&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;nine&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BNum_to_Eng</span><span class="params">(<span class="type">char</span>* eng, <span class="type">int</span> num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (num) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;ten&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;twenty&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;thirty&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;forty&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;fifty&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;sixty&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;seventy&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;eighty&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;ninety&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CNum_to_Eng</span><span class="params">(<span class="type">char</span>* eng, <span class="type">int</span> num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (num) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;eleven&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;twelve&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;thirteen&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;fourteen&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;fifteen&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;sixteen&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;seventeen&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;eighteen&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line"><span class="built_in">strcpy</span>(eng, <span class="string">&quot;nineteen&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 吉林大学2022秋季超星学习通程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 吉林大学2022秋季超星学习通程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表基本操作及实现</title>
      <link href="/2022/11/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/%E9%93%BE%E8%A1%A8%E5%9F%BA%E7%A1%80%E5%8A%9F%E8%83%BD/"/>
      <url>/2022/11/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/%E9%93%BE%E8%A1%A8%E5%9F%BA%E7%A1%80%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h1>前言</h1><p>下列代码已上传至<a href="https://github.com/YRoads/Data-Structure/tree/main">GitHub</a><br>链表基础功能包括新建新链表，打印链表元素，释放链表内存，新增节点，删除节点，排序，查找节点······</p><h1>实战</h1><h2 id="一、添加一个结构体">一、添加一个结构体</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span> &#123;</span><br><span class="line">ElementType val;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* next;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在这里，ElementType为<code>任意类型</code>，为了方便下面功能实现，我们假定ElementType为int，即</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElementType;</span><br></pre></td></tr></table></figure><h2 id="二、新建链表（Build）">二、新建链表（Build）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">···假定新链表以0为结尾，且首位不为0···</span><br></pre></td></tr></table></figure><p>c/c++实现：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">Build</span>() &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* head, * p, * tail;</span><br><span class="line">head = p = tail = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;<span class="comment">//计录当前节点数</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (!n) &#123;<span class="comment">//若n节点数为0，则添加一个头节点</span></span><br><span class="line">head = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));<span class="comment">//为头节点申请一个新空间</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;head-&gt;val);<span class="comment">//输入头节点</span></span><br><span class="line">tail = head;<span class="comment">//此时头节点也是尾节点</span></span><br><span class="line">tail-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">n = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">p = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));<span class="comment">//为新节点申请一个新空间</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p-&gt;val);</span><br><span class="line"><span class="keyword">if</span> (p-&gt;val == <span class="number">0</span>) &#123;<span class="comment">//若输入为0，则释放此时p节点的内存并跳出循环</span></span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">tail-&gt;next = p;<span class="comment">//tail指向p，实现节点连接</span></span><br><span class="line">tail = p;<span class="comment">//tail移动到p，实现tail移动到尾节点位置</span></span><br><span class="line">tail-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、打印链表（Print）">三、打印链表（Print）</h2><p>c/c++实现：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Print</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (head) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, head-&gt;val);</span><br><span class="line">head = head-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印链表就是把链表每一个节点遍历一遍就完了，没什么好说的</p><h2 id="四、释放链表内存（Release）">四、释放链表内存（Release）</h2><p>c/c++实现：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Release</span><span class="params">(<span class="keyword">struct</span> cell* head)</span> </span>&#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* p;</span><br><span class="line"><span class="keyword">while</span> (head) &#123;</span><br><span class="line">p = head-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line">head = p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个也是遍历链表，但<code> 与打印链表不同的是，由于释放当前节点，需要保存下一节点的位置，不然释放节点处后面的节点将变成野指针，释放head后将无法访问到下一节点位置</code>，所以需要用p保存head下一节点地址</p><h2 id="五、新增节点（Add）">五、新增节点（Add）</h2><p>c/c++实现：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">Add</span>(<span class="keyword">struct</span> cell* head, <span class="type">int</span> n) &#123;</span><br><span class="line"><span class="keyword">if</span> (head == <span class="literal">NULL</span> || n &lt; <span class="number">0</span>) &#123;<span class="comment">//若为空链表或n不合法，则返回NULL</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* p, * p0;</span><br><span class="line">p0 = head;</span><br><span class="line">p = (<span class="keyword">struct</span> cell*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> cell));<span class="comment">//为新增节点p申请一个新空间</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p-&gt;val);</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>) &#123;<span class="comment">//当新增节点位置为头节点处时</span></span><br><span class="line">p-&gt;next = head;</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">p0 = p0-&gt;next;<span class="comment">//p0记录新增节点位置的前一个节点</span></span><br><span class="line"><span class="keyword">if</span> (p0 == <span class="literal">NULL</span>) &#123;<span class="comment">//若n超过链表长度，则返回原头节点head</span></span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">p-&gt;next = p0-&gt;next;<span class="comment">//***标注A***</span></span><br><span class="line">p0-&gt;next = p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>标注A：</code>必须先将新节点指向下一节点位置,再将前一节点指向新节点（若相反,则会丢失下一节点地址）</p><h2 id="六、删除节点（Del）">六、删除节点（Del）</h2><p>c/c++实现：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* <span class="built_in">Del</span>(<span class="keyword">struct</span> cell* head, <span class="type">int</span> n) &#123;</span><br><span class="line"><span class="keyword">if</span> (head == <span class="literal">NULL</span> || n &lt;= <span class="number">0</span>) &#123;<span class="comment">//若为空链表或n不合法，则返回NULL</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cell</span>* p, * p0;</span><br><span class="line">p = p0 = head;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>) &#123;<span class="comment">//当删除节点为头节点时</span></span><br><span class="line">head = head-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(p);<span class="comment">//***标注B***</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">p0 = p0-&gt;next;<span class="comment">//p0记录删除节点位置的前一个节点</span></span><br><span class="line"><span class="keyword">if</span> (p0 == <span class="literal">NULL</span>) &#123;<span class="comment">//若n超过链表长度，则返回原头节点head</span></span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">p = p0-&gt;next;</span><br><span class="line"><span class="keyword">if</span> (p) &#123;<span class="comment">//检测p是否为NULL，即p0是否为位节点</span></span><br><span class="line">p0-&gt;next = p-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(p);<span class="comment">//***标注B***</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>标注B：</code>删除节点需要释放内存</p><h2 id="七、查找（Find）">七、查找（Find）</h2><h3 id="1）通过节点查找元素（FindElement）">1）通过节点查找元素（FindElement）</h3><p>c/c++实现：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ElementType <span class="title">FindElement</span><span class="params">(<span class="keyword">struct</span> cell* head, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (head == <span class="literal">NULL</span> || n &lt;= <span class="number">0</span>) &#123;<span class="comment">//若为空链表或n不合法，则返回0</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">head = head-&gt;next;</span><br><span class="line"><span class="keyword">if</span> (head == <span class="literal">NULL</span>) &#123;<span class="comment">//若n超过链表长度，则返回0</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> head-&gt;val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2）通过元素查找节点（FindSite）">2）通过元素查找节点（FindSite）</h3><p>c/c++实现：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">FindSite</span><span class="params">(<span class="keyword">struct</span> cell* head, ElementType n)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">1</span>;<span class="comment">//记录节点位置</span></span><br><span class="line"><span class="type">bool</span> TorN = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">while</span> (head) &#123;</span><br><span class="line"><span class="keyword">if</span> (head-&gt;val == n) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, x);</span><br><span class="line">TorN = <span class="literal">true</span>;<span class="comment">//若找到则标记true</span></span><br><span class="line">&#125;</span><br><span class="line">head = head-&gt;next;</span><br><span class="line">x++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NULL&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//未找到返回0并打印NULL</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><mark>总结：</mark>通过节点查找<code>元素</code>，只需要定位节点位置即可；通过元素查找<code>节点</code>，则会有<code>多种可能性</code>，需要遍历链表一个一个抓取</p><h1>后记</h1><p>2022/11/26<br>要期末考了，先鸽一段时间再写blog<br>争取一个星期写两篇（理论上可以做到，只要不摆）</p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四、线性方程组与向量组的线性相关性</title>
      <link href="/2022/10/16/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E5%9B%9B%E3%80%81%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E5%90%91%E9%87%8F%E7%BB%84%E7%9A%84%E7%BA%BF%E6%80%A7%E7%9B%B8%E5%85%B3%E6%80%A7/"/>
      <url>/2022/10/16/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E5%9B%9B%E3%80%81%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E4%B8%8E%E5%90%91%E9%87%8F%E7%BB%84%E7%9A%84%E7%BA%BF%E6%80%A7%E7%9B%B8%E5%85%B3%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1>线性方程组的相容性</h1><h2 id="线性方程组及其相容性">线性方程组及其相容性</h2><ol><li>线性方程组的一般形式</li><li>线性方程组的矩阵形式<ul><li>系数矩阵</li><li>增广矩阵</li></ul></li><li>线性方程组的向量形式</li><li>齐次与非齐次线性方程组</li><li>方程组的解和通解<ul><li>解向量</li><li>非零解</li><li>通解</li></ul></li><li>线性方程组的相容性<ul><li>有解则相容</li></ul></li><li>同解方程组</li></ol><h2 id="Cramer法则（P76）">Cramer法则（P76）</h2><h2 id="线性方程组解的存在性判定定理（P76）">线性方程组解的存在性判定定理（P76）</h2><h1>向量组的线性相关性</h1><h1>向量组及其线性组合</h1><ol><li>向量组</li></ol>]]></content>
      
      
      <categories>
          
          <category> JLU-Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线性代数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三、可逆矩阵</title>
      <link href="/2022/10/15/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E4%B8%89%E3%80%81%E5%8F%AF%E9%80%86%E7%9F%A9%E9%98%B5/"/>
      <url>/2022/10/15/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E4%B8%89%E3%80%81%E5%8F%AF%E9%80%86%E7%9F%A9%E9%98%B5/</url>
      
        <content type="html"><![CDATA[<h1>可逆矩阵的定义与性质</h1><h2 id="可逆矩阵">可逆矩阵</h2><ol><li>AB = BA = E，则方阵A是可逆的，且B为A的逆矩阵，简称A的逆</li><li>可逆矩阵又称<mark>非奇异矩阵</mark>，不可逆矩阵又称<mark>奇异矩阵</li></ol><h2 id="可逆矩阵的性质（P50）">可逆矩阵的性质（P50）</h2><h1>方阵可逆的充分必要条件与逆矩阵的计算</h1><h2 id="伴随矩阵">伴随矩阵</h2><h2 id="相关定理">相关定理</h2><h2 id="分块对角矩阵的逆-（P51）">分块对角矩阵的逆 （P51）</h2><h1>矩阵的秩</h1><h2 id="矩阵A的子式和矩阵的秩">矩阵A的子式和矩阵的秩</h2><ol><li>矩阵A的k阶子式</li><li>矩阵A的秩<ul><li>R(A) &lt;= min{m, n}</li><li>R(AT) = R(A)</li></ul></li><li>行满秩与列满秩矩阵</li><li>满秩矩阵与降秩矩阵</li></ol><h2 id="相关定理-2">相关定理</h2><ol><li>A经过有限次初等变换化为矩阵B，则R(A) = R(B)</li><li>等价矩阵有相同的秩</li><li>R(A) = R(PA) = R(AQ) = R(PAQ)</li><li>对行满秩矩阵A，必有列满秩矩阵B，使AB=E</li></ol><h2 id="重要结论（P52）">重要结论（P52）</h2>]]></content>
      
      
      <categories>
          
          <category> JLU-Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线性代数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二、方阵的行列式</title>
      <link href="/2022/10/15/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E4%BA%8C%E3%80%81%E6%96%B9%E9%98%B5%E7%9A%84%E8%A1%8C%E5%88%97%E5%BC%8F/"/>
      <url>/2022/10/15/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E4%BA%8C%E3%80%81%E6%96%B9%E9%98%B5%E7%9A%84%E8%A1%8C%E5%88%97%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1>一、方阵行列式的概念</h1><h2 id="全排列及逆序数">全排列及逆序数</h2><ol><li>n级排列</li><li>逆序</li><li>逆序数</li><li>奇排列和偶排列</li><li>定理2.1：一次对换必改变排列的奇偶性</li></ol><h2 id="方阵行列式">方阵行列式</h2><pre><code>* 行列式* 主对角线* 次对角线</code></pre><ol><li>n阶行列式</li><li>匀项分布项<ul><li>匀布项</li><li>符号因子</li><li>主对角行列式</li><li>次对角行列式</li></ul></li></ol><h1>二、方阵行列式的性质及相关定理</h1><h1>方阵行列式的性质</h1><ol><li>分行可加性</li><li>矩阵与其转置的行列式相同</li><li>某行k倍可以提出k为行列式系数</li><li>一次换法变化变成负行列式<ul><li>两行（列）相同，则行列式为0</li><li>两行（列）对应元素成比例，则行列式为0</li></ul></li><li>消法变换不改变行列式</li></ol><h1>相关定理（P29）</h1><h1>三、行列式的展开定理与行列式的计算</h1><h1>元素的余子式，k阶子式和代数余子式</h1><ol><li>元素的余子式和代数余子式</li><li>k阶子式和它的代数余子式</li></ol><h1>行列式展开定理</h1><ol><li>行列式按一行（列）展开定理   *****</li><li>行列式按某k行（列）展开定理（Laplace定理）</li></ol><h1>特殊行列式</h1><ol><li>Vandermonde（范德蒙德）行列式</li></ol>]]></content>
      
      
      <categories>
          
          <category> JLU-Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线性代数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一、矩阵的运算与初等变换</title>
      <link href="/2022/10/15/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E4%B8%80%E3%80%81%E7%9F%A9%E9%98%B5%E7%9A%84%E8%BF%90%E7%AE%97%E4%B8%8E%E5%88%9D%E7%AD%89%E5%8F%98%E6%8D%A2/"/>
      <url>/2022/10/15/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E4%B8%80%E3%80%81%E7%9F%A9%E9%98%B5%E7%9A%84%E8%BF%90%E7%AE%97%E4%B8%8E%E5%88%9D%E7%AD%89%E5%8F%98%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h1>一、矩阵与向量的概念</h1><h2 id="矩阵的概念">矩阵的概念</h2><ol><li>矩阵<ul><li>实矩阵</li><li>负矩阵</li></ul></li><li>同型矩阵</li><li>矩阵相等</li><li>零矩阵</li><li>方阵</li><li>行矩阵与列矩阵</li></ol><h2 id="向量的概念">向量的概念</h2><ol><li>向量<ul><li>向量相等</li><li>零向量</li></ul></li><li>基本向量组<ul><li>基本列（行）向量</li></ul></li><li>单位矩阵</li></ol><h1>二、矩阵的运算</h1><h2 id="矩阵的线性运算">矩阵的线性运算</h2><ol><li>矩阵加法</li><li>负矩阵</li><li>矩阵的减法</li><li>矩阵加法满足的运算律</li><li>数乘矩阵</li><li>数乘矩阵满足的运算律</li></ol><h2 id="矩阵的乘法运算">矩阵的乘法运算</h2><ol><li>矩阵乘法</li><li>矩阵乘法满足的运算律（不满足交换律【AB != BA】）</li><li>可换矩阵（AB = BA）</li><li>方阵的幂<ul><li>满足的运算律</li></ul></li><li>矩阵多项式</li><li>矩阵的转置<ul><li>满足的运算律</li></ul></li></ol><h1>三、分块矩阵及矩阵的分块运算</h1><h2 id="分块矩阵">分块矩阵</h2><h2 id="矩阵的分块运算">矩阵的分块运算</h2><ol><li>矩阵的分块加、减法运算</li><li>矩阵的分块数乘运算</li><li>矩阵的分块乘法运算</li><li>分块矩阵的转置 （整体到部分）</li></ol><h1>四、几种特殊矩阵</h1><ol><li>对角矩阵<ul><li>标量矩阵</li></ul></li><li>上（下）三角矩阵</li><li>对称矩阵 （转置相等）</li><li>反称矩阵 （转置负相等）</li><li>分块对角矩阵</li></ol><h1>五、矩阵的初等变换</h1><h2 id="矩阵的初等行（列）变换">矩阵的初等行（列）变换</h2><ol><li>倍法变换</li><li>消法变换</li><li>换法变换</li></ol><h2 id="矩阵的等价关系">矩阵的等价关系</h2><ol><li>矩阵等价（有限次变换得到）</li><li>矩阵的等价关系的性质<ul><li>自反性</li><li>对称性</li><li>传递性</li></ul></li><li>行阶梯型矩阵</li><li>行最简型矩阵</li><li>相关定理 （P7）</li></ol><h2 id="初等矩阵">初等矩阵</h2><ol><li>初等倍法矩阵</li><li>初等消法矩阵</li><li>初等换法矩阵</li><li>左乘A（初等行变换），右乘A（初等列变换）</li></ol>]]></content>
      
      
      <categories>
          
          <category> JLU-Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线性代数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十月计划</title>
      <link href="/2022/10/02/%E7%9B%AE%E6%A0%87/%E5%8D%81%E6%9C%88%E8%AE%A1%E5%88%92/"/>
      <url>/2022/10/02/%E7%9B%AE%E6%A0%87/%E5%8D%81%E6%9C%88%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">修正记录：</span><br><span class="line">2022/10/02 整体规划</span><br></pre></td></tr></table></figure><h1>运动</h1><p><font color = purple>以下数据均参考 <mark><em>华为运动健康</em></mark></font></p><ol><li>有氧慢跑：<em>50.00km</em></li><li>羽毛球：<em>4次</em> +</li></ol><h1>吉他</h1><ol><li>入个门就行</li></ol><h1>学习</h1><ol><li>微积分和线代：把过去的问题解决了，新的就先不追求了</li><li>专业课：巩固c语言，学习c++基本语法</li><li>英语：每天背50单词吧，多了直接开摆了</li><li>附加：尝试走人工智能方向</li><li>数据结构与算法</li></ol><h1>生活</h1><ol><li>过好自己就行，不要管其他人</li></ol><h1>阅读</h1><ol><li>浪潮之巅</li><li>骆驼祥子</li></ol><h1>爱好</h1><ol><li>心流：重新看吧，都忘了</li><li>修完Sokoban，写完Sokoban记录</li><li>参加一次社团活动（不一定）</li><li>操场看一次演出</li></ol><h1>挑战</h1><ol><li>平复负面情绪</li><li>–··· ----- ···-- ···-- ----- —·· ·---- —·· ·---- —·· -···· ·---- ····· —·· ·---- --··· ----· -···· ····· --··· ····· —·· —·· ··— ····- ····- ··— ·---- ····· ----- ----· ----- --··· -···· ·---- -···· ·---- -···· -···· ----· ·---- —·· -···· ·---- ····- ····- ··— ··— ----· ····- ···-- ·---- ·---- —·· -···· ·---- ····- ····- ··— ··— —·· -···· ··— ··— ·---- ···-- ----- --··· ·---- —·· -···· ·---- ----· ----- ···-- —·· --··· ····· ··— ·---- --··· ----- ···-- ····- ·---- —·· -···· ·---- —·· ····- —·· ···–</li></ol>]]></content>
      
      
      <categories>
          
          <category> Plan </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JLU_Plan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>九月的记忆</title>
      <link href="/2022/09/30/Life/%E4%B9%9D%E6%9C%88%E7%9A%84%E8%AE%B0%E5%BF%86/"/>
      <url>/2022/09/30/Life/%E4%B9%9D%E6%9C%88%E7%9A%84%E8%AE%B0%E5%BF%86/</url>
      
        <content type="html"><![CDATA[<p><font size=8><mark>简单记录生活，意识流博客</font><br><font color=#25c18f size=3><em>最近更新时间：22-10-01 00:02:12</em></font></p><h1>**运动记录**</h1><p><font color = purple>截止至 2022.9.30 22:24:53<br>以下数据均来源于 <mark><em>华为运动健康</em></mark></font><br>步数：<em>160363</em><br>骑行：<em>30.46km</em><br>有氧慢跑：<em>2.03km</em></p><h1>**生活 01**</h1><h2 id="延迟开学">延迟开学</h2><p>8.27暂缓返校，后续在家中上网课</p><h2 id="网课">网课</h2><p>拿到课表，发现自己要学的挺多的，网课还没开始，我已经向往常一样给自己定下了计划和目标（日常操作）<br>结果也像往常一样，直接开摆<br>早八一周有四节（九月份），可以说是拿来睡觉的，根本听不进去<br>是真的没听，程序的内容是之前就已经自学过一些了</p><h2 id="选课">选课</h2><p>对于选课，我首选心理学相关的课，这毕竟是我第一想学的（分不够）<br>收藏了 <u>心理学与生活</u> ，但是抢不到，因为有人多选被退课才能挤进去<br>另一门是 <u>在影视中学心理</u>，一方面这门课我就想看看老师是怎么分析的，另一方面是方便<strong>划水</strong></p><h2 id="大学城隔离">大学城隔离</h2><p>9.17终于能返校了，只是得去大学城隔离七天，去之前听说不能洗澡，挺神奇的感觉<br>到后面其实也看淡了<br>每天吃的也很不习惯，肉少，饭也不够，加了几次<br>认识了一个大四学长，有幸让我看到了美国人是如何作息的<br>总的来说，隔离体验不好，希望下次回校别再去那隔离，真的很痛苦（除了隔离费用全免）</p><h2 id="返校">返校</h2><p>隔离完由学校派车接送我们回去<br>（不得不说，很墨迹，大早上七点不到喊人，九点了还没走，到学校都十一点了）<br>不知道从哪进的校门，但校园是挺大的<br>见了室友，熟悉熟悉就好了</p><h1>**生活 02**</h1><h2 id="开摆">开摆</h2><p>这个月可以说是从头摆到尾了<br>除了线代微积分和英语，基本上全部都在摆，什么思政课，什么形势政策，听不下去，程序设计讲的是真的慢，五分钟能搞完的讲半小时（至少我是那么认为的，杠就是你对）</p><h2 id="厕所问题">厕所问题</h2><p><font color=red size=8><strong>这个问题很严重!!!<br><br>首先！！！<br><br>我想请问上厕所不冲厕所的兄弟<br><br>你留着那些对你来说很美味的食物<br><br>是想分享给其他北宛一公寓的3楼的吉大学子吗？？？？？<br><br>其次！！！<br><br>你不冲厕所就算了<br><br>你的纸能不能扔到坑里<br><br>不要跟花圈一样围在你hamburger的旁边ok？<br><br>然后！！！<br><br>哥们你仪表堂堂英姿飒爽<br><br>摆高冷架子无所谓<br><br>你在我眼前不冲厕所还摆高冷<br><br>从我面前淡定走出厕所<br><br>你可真🐂<br><br>秀死我了<br><br>最后！！！<br><br>我请求那些<mark>菊部有帕金森</mark>的人<br><br>我不要求你能精准入坑<br><br>只求你别辣到瓷砖上<br><br>谢谢各位大哥了！！！</strong></font></p><h2 id="校园印象">校园印象</h2><p>校园很大<br>温度很冷<br>空气很干<br>总体而言：挺满意的<font size=5><mark>（除了厕所）</mark></font></p><h2 id="情感">情感</h2><p>9.17认识了一名学长<br>9.23认识三个舍友<br>9.26认识交一个打羽毛球的学长<br>9.29要了一个女生的微信</p><h1>**生活 03**</h1><p>想学吉他了</p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JLU_Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言推箱子的实现（待完善）(待更新)</title>
      <link href="/2022/09/14/C%E8%AF%AD%E8%A8%80%E9%A1%B9%E7%9B%AE/Sokoban/"/>
      <url>/2022/09/14/C%E8%AF%AD%E8%A8%80%E9%A1%B9%E7%9B%AE/Sokoban/</url>
      
        <content type="html"><![CDATA[<p>源码已上传至<a href="https://github.com/YRoads/Sokoban">GitHub</a><br><code>该项目变量基本为全局变量，可以去掉指针操作</code><br>该博客将记录手敲<code>c语言推箱子</code>的过程，包括几个我认为比较有意义的过程和结语：</p><ul><li><mark>游戏逻辑的实现</li><li><mark>文件操作：存档的读取调用</li><li><mark>几个注意的地方</li></ul><p><font color=blue>总源码一览</font></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">YRoads</span></span><br><span class="line"><span class="comment">2022.9.10</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">更新日志</span></span><br><span class="line"><span class="comment">9.10 游戏逻辑实现</span></span><br><span class="line"><span class="comment">9.11 添加音乐、图片，修复游戏算法错误</span></span><br><span class="line"><span class="comment">9.12 添加重开功能，重写判定游戏获胜算法，增添自定义关卡功能</span></span><br><span class="line"><span class="comment">9.15 去除指针操作，优化部分内容</span></span><br><span class="line"><span class="comment">选关目前用不了，模型会重叠</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.获取人物位置</span></span><br><span class="line"><span class="comment">2.获取白箱子位置 EOF</span></span><br><span class="line"><span class="comment">3.人前为空地、星星：人1</span></span><br><span class="line"><span class="comment">4.人前1为白箱子、黑箱子</span></span><br><span class="line"><span class="comment">4.1.人前2为空地：人1 白箱子2</span></span><br><span class="line"><span class="comment">4.2.人前2为墙：无行为</span></span><br><span class="line"><span class="comment">4.3.人前2为星星：人1 黑箱子2</span></span><br><span class="line"><span class="comment">3.时刻检测星星位置是否为0，0则打印星星</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.循环123读取文件字符串直到&quot;level&quot;</span></span><br><span class="line"><span class="comment">2.指针后移一格</span></span><br><span class="line"><span class="comment">3.判断是否为数字i，是则跳出循环</span></span><br><span class="line"><span class="comment">4.读取换行</span></span><br><span class="line"><span class="comment">5.循环将行列模型输入二维数组</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.获取&quot;level&quot;字符</span></span><br><span class="line"><span class="comment">2.找到后面的数字</span></span><br><span class="line"><span class="comment">3.添加数字下的符号加入到数组中</span></span><br><span class="line"><span class="comment">4.遇到&quot;end&quot;停止</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib,<span class="string">&quot;Winmm.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//关卡模型</span></span><br><span class="line"><span class="type">int</span> Sence[<span class="number">50</span>][<span class="number">50</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> SenceCopy[<span class="number">50</span>][<span class="number">50</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> Ma_x;<span class="comment">//人物x坐标</span></span><br><span class="line"><span class="type">int</span> Ma_y;<span class="comment">//人物y坐标</span></span><br><span class="line"><span class="type">int</span> Box_num = <span class="number">0</span>;<span class="comment">//储存白箱子数量</span></span><br><span class="line"><span class="type">int</span> Box_x[<span class="number">30</span>], Box_y[<span class="number">30</span>];</span><br><span class="line"><span class="type">int</span> lev, length, width;<span class="comment">//关卡、行、列</span></span><br><span class="line"><span class="type">int</span> yxc = <span class="number">0</span>;<span class="comment">//选关判定数据</span></span><br><span class="line"><span class="type">int</span> zxw = <span class="number">0</span>;<span class="comment">//重开判定数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取用户输入关卡</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Le_Num</span><span class="params">()</span> &#123;</span><br><span class="line">initgraph(<span class="number">20</span>, <span class="number">20</span>);</span><br><span class="line"><span class="type">wchar_t</span> le_num[<span class="number">5</span>];</span><br><span class="line"><span class="type">bool</span> tr = InputBox(le_num, <span class="number">4</span>, <span class="string">L&quot;Please input the level: (目前仅有10关)&quot;</span>, <span class="string">L&quot;只因&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (tr == <span class="number">0</span> || _wtoi(le_num) &lt; <span class="number">1</span> || _wtoi(le_num) &gt; <span class="number">999</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter a number!&quot;</span>);</span><br><span class="line">closegraph();</span><br><span class="line"><span class="keyword">return</span>  <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">closegraph();</span><br><span class="line"><span class="keyword">return</span>  _wtoi(le_num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打开sence文件</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">OpenSence</span><span class="params">(FILE* psence)</span> &#123;</span><br><span class="line"><span class="type">char</span> ch[<span class="number">50</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> le_num = Le_Num();</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="keyword">while</span> (fgetc(psence) == <span class="number">32</span>);<span class="comment">//跳过空格</span></span><br><span class="line">fseek(psence, <span class="number">-1</span>, SEEK_CUR);</span><br><span class="line"><span class="built_in">fscanf</span>(psence, <span class="string">&quot;%s&quot;</span>, ch);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(ch, <span class="string">&quot;end&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;读取失败&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(ch, <span class="string">&quot;level&quot;</span>) != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">while</span> (fgetc(psence) == <span class="number">32</span>);<span class="comment">//跳过空格</span></span><br><span class="line">fseek(psence, <span class="number">-1</span>, SEEK_CUR);</span><br><span class="line"><span class="built_in">fscanf</span>(psence, <span class="string">&quot;%s&quot;</span>, ch);<span class="comment">//关卡数</span></span><br><span class="line">lev = atoi(ch);</span><br><span class="line"></span><br><span class="line"><span class="comment">//载入用户指定关卡</span></span><br><span class="line"><span class="keyword">if</span> (lev == le_num) &#123;</span><br><span class="line"><span class="built_in">fscanf</span>(psence, <span class="string">&quot;%s&quot;</span>, ch);<span class="comment">//行</span></span><br><span class="line">length = atoi(ch);</span><br><span class="line"><span class="keyword">while</span> (fgetc(psence) == <span class="number">32</span>);</span><br><span class="line">fseek(psence, <span class="number">-1</span>, SEEK_CUR);</span><br><span class="line"><span class="built_in">fscanf</span>(psence, <span class="string">&quot;%s&quot;</span>, ch);<span class="comment">//列</span></span><br><span class="line">width = atoi(ch);</span><br><span class="line"><span class="keyword">while</span> (fgetc(psence) == <span class="number">32</span>);</span><br><span class="line">fseek(psence, <span class="number">-1</span>, SEEK_CUR);</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取场景</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; width; i++) &#123;</span><br><span class="line">fgetc(psence);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; length; j++) &#123;</span><br><span class="line"><span class="built_in">fscanf</span>(psence, <span class="string">&quot;%c&quot;</span>, ch);</span><br><span class="line">Sence[i][j] = atoi(ch);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加副本（实现q重开）</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; width; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; length; j++) &#123;</span><br><span class="line">SenceCopy[i][j] = Sence[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//生成场景</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重开（副本覆盖原本）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">qAgain</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; width; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; length; j++) &#123;</span><br><span class="line">Sence[i][j] = SenceCopy[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取白箱子所在坐标</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">BoxS</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; width; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; length; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (Sence[i][j] == <span class="number">5</span>) &#123;</span><br><span class="line">Box_x[Box_num] = j;</span><br><span class="line">Box_y[Box_num] = i;</span><br><span class="line">Box_num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取人物所在坐标</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ManS</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; width; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; length; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (Sence[i][j] == <span class="number">2</span>) &#123;</span><br><span class="line">Ma_x = j;</span><br><span class="line">Ma_y = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//操作控制附属</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ConT</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> U, <span class="type">int</span> D, <span class="type">int</span> L, <span class="type">int</span> R)</span> &#123;</span><br><span class="line"><span class="keyword">switch</span> (Sence[y - U + D][x - L + R]) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">Sence[y][x] = <span class="number">0</span>;</span><br><span class="line">Sence[y - U + D][x - L + R] = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="keyword">switch</span> (Sence[y - <span class="number">2</span> * U + <span class="number">2</span> * D][x - <span class="number">2</span> * L + <span class="number">2</span> * R]) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">Sence[y][x] = <span class="number">0</span>;</span><br><span class="line">Sence[y - U + D][x - L + R] = <span class="number">2</span>;</span><br><span class="line">Sence[y - <span class="number">2</span> * U + <span class="number">2</span> * D][x - <span class="number">2</span> * L + <span class="number">2</span> * R] = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">Sence[y][x] = <span class="number">0</span>;</span><br><span class="line">Sence[y - U + D][x - L + R] = <span class="number">2</span>;</span><br><span class="line">Sence[y - <span class="number">2</span> * U + <span class="number">2</span> * D][x - <span class="number">2</span> * L + <span class="number">2</span> * R] = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//操作控制中心</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ConTCenter</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> U = <span class="number">0</span>, D = <span class="number">0</span>, L = <span class="number">0</span>, R = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> key = _getch();</span><br><span class="line"><span class="keyword">switch</span> (key) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;W&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">U = <span class="number">1</span>;</span><br><span class="line">ConT(Ma_x, Ma_y, U, D, L, R);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;S&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">D = <span class="number">1</span>;</span><br><span class="line">ConT(Ma_x, Ma_y, U, D, L, R);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">L = <span class="number">1</span>;</span><br><span class="line">ConT(Ma_x, Ma_y, U, D, L, R);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">R = <span class="number">1</span>;</span><br><span class="line">ConT(Ma_x, Ma_y, U, D, L, R);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//case &#x27;r&#x27;://选择关卡</span></span><br><span class="line"><span class="comment">//yxc = 520;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;Q&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;q&#x27;</span>:<span class="comment">//重开</span></span><br><span class="line">zxw = <span class="number">1314</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新白箱子状态</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UpBox</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Box_num; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (Sence[Box_y[i]][Box_x[i]] == <span class="number">0</span>) &#123;</span><br><span class="line">Sence[Box_y[i]][Box_x[i]] = <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏胜利条件之一(场上白箱子为0)</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">GameO</span><span class="params">(<span class="type">int</span> width, <span class="type">int</span> lenth)</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; width; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; lenth; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (Sence[i][j] == <span class="number">3</span>) &#123; <span class="keyword">return</span> <span class="number">1</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//载入美妙的音乐</span></span><br><span class="line"><span class="comment">/*mciSendString(_T(&quot;open soul.mp3 alias bkmusic&quot;), NULL, 0, NULL);</span></span><br><span class="line"><span class="comment">mciSendString(_T(&quot;play bkmusic repeat&quot;), NULL, 0, NULL);*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">FILE* psence = fopen(<span class="string">&quot;sence.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="type">int</span> Over = OpenSence(psence);<span class="comment">//打开sence文件(此处生成length和width)</span></span><br><span class="line"><span class="keyword">if</span> (Over == <span class="number">0</span>) &#123; <span class="keyword">return</span> <span class="number">0</span>; &#125;</span><br><span class="line"></span><br><span class="line">BoxS();<span class="comment">//获取白箱子所在坐标</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//载入图片</span></span><br><span class="line">IMAGE GROUND, WALL, MAN, BOX, BLACKBOX, STAR, WIN;</span><br><span class="line">loadimage(&amp;GROUND, _T(<span class="string">&quot;0.jpg&quot;</span>), <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">loadimage(&amp;WALL, _T(<span class="string">&quot;1.jpg&quot;</span>), <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">loadimage(&amp;MAN, _T(<span class="string">&quot;2.jpg&quot;</span>), <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">loadimage(&amp;BOX, _T(<span class="string">&quot;3.jpg&quot;</span>), <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">loadimage(&amp;BLACKBOX, _T(<span class="string">&quot;4.jpg&quot;</span>), <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">loadimage(&amp;STAR, _T(<span class="string">&quot;5.jpg&quot;</span>), <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">loadimage(&amp;WIN, _T(<span class="string">&quot;win.jpg&quot;</span>), length * <span class="number">50</span>, width * <span class="number">50</span>);<span class="comment">//此处length和width需要OpenSence()函数获取</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//开始游戏</span></span><br><span class="line">initgraph(length * <span class="number">50</span>, width * <span class="number">50</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">UpBox();<span class="comment">//更新白箱子状态</span></span><br><span class="line"><span class="comment">//加载场景</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; width; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; length; j++) &#123;</span><br><span class="line"><span class="keyword">switch</span> (Sence[i][j]) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">putimage(j * <span class="number">50</span>, i * <span class="number">50</span>, &amp;GROUND); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">putimage(j * <span class="number">50</span>, i * <span class="number">50</span>, &amp;WALL); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">putimage(j * <span class="number">50</span>, i * <span class="number">50</span>, &amp;MAN); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">putimage(j * <span class="number">50</span>, i * <span class="number">50</span>, &amp;BOX); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">putimage(j * <span class="number">50</span>, i * <span class="number">50</span>, &amp;BLACKBOX); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">putimage(j * <span class="number">50</span>, i * <span class="number">50</span>, &amp;STAR); <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ManS();<span class="comment">//获取人物所在坐标</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//监测游戏状态</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Box_num; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (GameO(width, length) == <span class="literal">false</span>) &#123;</span><br><span class="line"><span class="keyword">goto</span> GameOver;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ConTCenter();<span class="comment">//控制中心</span></span><br><span class="line"><span class="keyword">if</span> (yxc == <span class="number">520</span>) &#123;</span><br><span class="line">yxc = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="comment">//重新选关1</span></span><br><span class="line"><span class="keyword">if</span> (zxw == <span class="number">1314</span>) &#123;</span><br><span class="line">zxw = <span class="number">0</span>;</span><br><span class="line">qAgain();</span><br><span class="line">initgraph(length * <span class="number">50</span>, width * <span class="number">50</span>);<span class="comment">//刷新页面(否则会有图片残留)</span></span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;<span class="comment">//重开</span></span><br><span class="line"></span><br><span class="line">cleardevice();</span><br><span class="line">&#125;</span><br><span class="line">fclose(psence);</span><br><span class="line"><span class="keyword">continue</span>;<span class="comment">//重新选关2</span></span><br><span class="line"></span><br><span class="line">GameOver:<span class="comment">//跳转</span></span><br><span class="line"><span class="comment">//弹出通关图片</span></span><br><span class="line">putimage(<span class="number">0</span>, <span class="number">0</span>, &amp;WIN);</span><br><span class="line">_getch();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>一、前置准备</h1><p><font size=5>VS2022，easyx图形库，基础c语言语法</font></p><h1>二、游戏逻辑 &amp;&amp; 存档读取逻辑</h1><h2 id="游戏逻辑">游戏逻辑</h2><p>首先我们知道推箱子是为了 <code>控制人物</code> <code>移动箱子</code> 运送到 <code>指定的地方</code>，当场上箱子全部<code>运送完毕</code>之后，游戏即获胜。<br>因此，我们可以写出其逻辑流程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1. 控制人物</span></span><br><span class="line"><span class="comment">2. 移动箱子到指定地方</span></span><br><span class="line"><span class="comment">3. 运送完毕</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>当然，如果光这样的话那就跟装大象一样说的简单做的难了<br>我们继续思考：怎么样让计算机知道你是在控制人去移动而不是在控制箱子或者目标物？</p><ul><li>1.在这里我们可以选择<code>获取人物位置</code>，进而达到控制人的效果</li></ul><p>那么往下想，为游戏平面定一个二维平面，标记x轴与y轴，当你控制人物移动的时候，人物如何向你所想的方向移动？</p><ul><li>2.我们可以通过<code>控制键盘按键</code>（例如’w’ ‘a’ ‘s’ ‘d’），进而由按键判断移动方向</li><li>3.接下来再找出<code>人物移动的几种情况</code></li></ul><p>最后我们需要结束游戏</p><ul><li>4.方法多样，在此文章选择<code>判断白箱子数量</code>（ps在这我们讲待移动箱子记为白箱子，已完成目标箱子记为黑箱子），因此，我们还需要如同第一步一样<code>获取白箱子的位置</code></li></ul><p>到此我们完善一下游戏的逻辑：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.获取人物位置</span></span><br><span class="line"><span class="comment">2.获取白箱子位置</span></span><br><span class="line"><span class="comment">3.人前为空地、目标（星星）：人1</span></span><br><span class="line"><span class="comment">4.人前1为白箱子、黑箱子</span></span><br><span class="line"><span class="comment">4.1.人前2为空地：人1 白箱子2</span></span><br><span class="line"><span class="comment">4.2.人前2为墙：无行为</span></span><br><span class="line"><span class="comment">4.3.人前2为目标（星星）：人1 黑箱子2</span></span><br><span class="line"><span class="comment">3.时刻检测目标（星星）位置是否为0，0则打印目标（星星）</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>（ps先打上第三点，至于为什么要实现，后面会提到，这是需要注意的点）</p><h2 id="存档读取逻辑">存档读取逻辑</h2><p>在这里，我们可以先凭个人喜好自定义的存档格式：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">level 2</span><br><span class="line">9 9</span><br><span class="line">111110000</span><br><span class="line">120010000</span><br><span class="line">103310111</span><br><span class="line">103010151</span><br><span class="line">111011151</span><br><span class="line">011000051</span><br><span class="line">010001001</span><br><span class="line">010001111</span><br><span class="line">011111000</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure><p><mark><font size=4>（注：请记住下表中文字对应的数字）</font></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">level 2     ——关卡数</span><br><span class="line">9 9         ——行和列</span><br><span class="line">下面的数字   ——模型（用数字代替）</span><br><span class="line">0：空地</span><br><span class="line">1：墙</span><br><span class="line">2：人物</span><br><span class="line">3：白箱子</span><br><span class="line">4：黑箱子</span><br><span class="line">5：目标物（暂且称为星星）</span><br></pre></td></tr></table></figure><p><mark>ps：下面可以先跳过，直至逻辑实现实现再返回</p><ul><li>1.读取到关卡数位置（无则继续往下读取）</li><li>2.读取行列数（为实现打印关卡场景的嵌套循环做准备）</li><li>3.打印场景</li><li>4.若输入关卡或者某些文档错误读取到end则退出游戏</li></ul><h1>三、逻辑实现</h1><p>我们先给出全局变量和头文件（ps头文件后面会介绍），可以先跳过，往下遇到再看：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Sence[<span class="number">50</span>][<span class="number">50</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> SenceCopy[<span class="number">50</span>][<span class="number">50</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> Ma_x;<span class="comment">//人物x坐标</span></span><br><span class="line"><span class="type">int</span> Ma_y;<span class="comment">//人物y坐标</span></span><br><span class="line"><span class="type">int</span> Box_num = <span class="number">0</span>;<span class="comment">//储存白箱子数量</span></span><br><span class="line"><span class="type">int</span> Box_x[<span class="number">30</span>], Box_y[<span class="number">30</span>];</span><br><span class="line"><span class="type">int</span>* pSt_x = Box_x, * pSt_y = Box_y;</span><br><span class="line"><span class="type">int</span> lev, length, width;<span class="comment">//关卡、行、列</span></span><br><span class="line"><span class="type">int</span> yxc = <span class="number">0</span>;<span class="comment">//选关判定数据</span></span><br><span class="line"><span class="type">int</span> zxw = <span class="number">0</span>;<span class="comment">//重开判定数据</span></span><br></pre></td></tr></table></figure><p>我们先不用创建自定义存档文件，因为是游戏2d平面，我们可以很容易想到创建一个二维数组存储地图：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> Sence[<span class="number">50</span>][<span class="number">50</span>] = &#123;</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">1</span>&#125;</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">1</span>&#125;</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">1</span>&#125;</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><mark>还没看到文件操作前，先把width和length初始化成长和宽</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//我们上一步创建的数组是9×9的，故：</span></span><br><span class="line">length = <span class="number">9</span>;</span><br><span class="line">width = <span class="number">9</span>;</span><br></pre></td></tr></table></figure><h2 id="1、创建场景">1、创建场景</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载场景</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; width; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; length; j++) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (Sence[i][j]) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&#x27;0&#x27;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&#x27;1&#x27;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&#x27;2&#x27;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&#x27;3&#x27;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&#x27;4&#x27;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&#x27;5&#x27;</span>); <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们先通过嵌套循环打印一个出场景，为接下来的工作做准备</p><h2 id="2、获取人物坐标">2、获取人物坐标</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">ManS</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; width; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; length; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (Sence[i][j] == <span class="number">2</span>) &#123;</span><br><span class="line">Ma_x = j;</span><br><span class="line">Ma_y = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取坐标原理和打印场景一样，遍历一遍二维数组，找到人物的x和y坐标值，并通过全局变量储存在全局中，我们运行便可以得到下列结果：</p><p>111110000<br>1<font color=red>2</font>0010000<br>103310111<br>103010151<br>111011151<br>011000051<br>010001001<br>010001111<br>011111000</p><h2 id="3、获取白箱子位置">3、获取白箱子位置</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//与获取人物位置同理</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">BoxS</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; width; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; length; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (Sence[i][j] == <span class="number">5</span>) &#123;</span><br><span class="line">Box_x[Box_num] = j;</span><br><span class="line">Box_y[Box_num] = i;</span><br><span class="line">Box_num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意这里我们使用一个数组对对白箱子的数量和各个坐标进行储存，<code>Box_num++</code>对白箱子的数量进行一个计数，至于是为什么，可以往下看【时刻更新白箱子位置】</strong></p><h2 id="4、控制人物">4、控制人物</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//操作控制行为</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ConT</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> U, <span class="type">int</span> D, <span class="type">int</span> L, <span class="type">int</span> R)</span> &#123;</span><br><span class="line"><span class="keyword">switch</span> (Sence[y - U + D][x - L + R]) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">Sence[y][x] = <span class="number">0</span>;</span><br><span class="line">Sence[y - U + D][x - L + R] = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="keyword">switch</span> (Sence[y - <span class="number">2</span> * U + <span class="number">2</span> * D][x - <span class="number">2</span> * L + <span class="number">2</span> * R]) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">Sence[y][x] = <span class="number">0</span>;</span><br><span class="line">Sence[y - U + D][x - L + R] = <span class="number">2</span>;</span><br><span class="line">Sence[y - <span class="number">2</span> * U + <span class="number">2</span> * D][x - <span class="number">2</span> * L + <span class="number">2</span> * R] = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">Sence[y][x] = <span class="number">0</span>;</span><br><span class="line">Sence[y - U + D][x - L + R] = <span class="number">2</span>;</span><br><span class="line">Sence[y - <span class="number">2</span> * U + <span class="number">2</span> * D][x - <span class="number">2</span> * L + <span class="number">2</span> * R] = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//监控按键操作</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ConTCenter</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> U = <span class="number">0</span>, D = <span class="number">0</span>, L = <span class="number">0</span>, R = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> key = _getch();</span><br><span class="line"><span class="keyword">switch</span> (key) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;W&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">U = <span class="number">1</span>;</span><br><span class="line">ConT(Ma_x, Ma_y, U, D, L, R);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;S&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">D = <span class="number">1</span>;</span><br><span class="line">ConT(Ma_x, Ma_y, U, D, L, R);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">L = <span class="number">1</span>;</span><br><span class="line">ConT(Ma_x, Ma_y, U, D, L, R);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">R = <span class="number">1</span>;</span><br><span class="line">ConT(Ma_x, Ma_y, U, D, L, R);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;Q&#x27;</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;q&#x27;</span>:<span class="comment">//重开</span></span><br><span class="line">zxw = <span class="number">1314</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（1）监控按键操作">（1）监控按键操作</h3><p>首先，我么得设置待操作的按键（上下左右等），在这我选用wasd来表示方位移动，q表示重新开始<br>对于按键操作，通过<code>switch()</code>是目前最合适的方式了，不推荐试用if()，这会使代码变得复杂麻烦<br>我们试用switch()前得<code>获取一个字符串</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> key = _getch();</span><br></pre></td></tr></table></figure><p>当然，不需要设置变量key也行，可以直接写成switch(_getch())，设置变量是为了让代码可读性更高<mark>（<code>别杠，杠就是你对，杠就是我眼睛瞎，看不出来</code>）</mark><br>为了能让计算机知道操作对应的方位，以及对其方位内的操作<br>在函数<code>ConTCenter()</code>中我设置了U(up)、D(down)、R(right)、L(left)四个变量，代表人物移动方向（为什么不设置全局变量，往下看）<br>例如，当我们输入‘W’时，给U赋值一个单位，其余为0，这个时候我们就可以实现仅操控人物上方的操作了。<br>但如果我们U为全局变量，下一次获取操作时，我们必须得将D R L全设置为0，非常麻烦，故我们设置为局部变量。</p><h3 id="（2）操作控制行为">（2）操作控制行为</h3><p>接着，我们得写按下U之后发生了什么<br>先思考，操作控制实际上控制的是什么<br>显而易见，控制了人的移动，这是废话没错<br>但这是玩家主观上的想法，我们还得考虑<code>人动了，物体也得动</code><br>所以，我们每操作一次，得<code>将2 3 4 5更新一次</code><br>但无论怎么动，<code>4和5都只会消失或者打开</code>，并没有移动的操作，它只能在一个位置上<br>所以我们之前仅仅获取了人物和白箱子的坐标就够了，其他的只需要执行删除或者添加操作<br>我们返回<mark>游戏逻辑</mark>那部分回顾一下我们对于这部分操作的思路</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3.</span>人前为空地、目标（星星）：人<span class="number">1</span></span><br><span class="line"><span class="number">4.</span>人前<span class="number">1</span>为白箱子、黑箱子</span><br><span class="line"><span class="number">4.1</span>.人前<span class="number">2</span>为空地：人<span class="number">1</span> 白箱子<span class="number">2</span></span><br><span class="line"><span class="number">4.2</span>.人前<span class="number">2</span>为墙：无行为</span><br><span class="line"><span class="number">4.3</span>.人前<span class="number">2</span>为目标（星星）：人<span class="number">1</span> 黑箱子<span class="number">2</span></span><br></pre></td></tr></table></figure><p>通过分析流程，我们主要控制的是人，所以我们得在人物周围进行操作，所以我们要在<code>ConT()</code>函数中加入<code>人的坐标</code>当作参数,其次，为了确定移动方位和距离，我们需要添加上述的<code>U D R L</code>作为参数<br>即<code>ConT(int x, int y, int U, int D, int L, int R)</code></p><ol><li>我们获取人物坐标的前方，通过switch()函数判断前方物体是什么</li><li>是0（空地），则人的坐标变成人前一格</li><li>是5（星星），则人的坐标变成人前一格，星星则被人覆盖消失</li><li>是3或者4（箱子）<ul><li>前方2格是0，则人的坐标变成人前一格，白箱子的的坐标变成人前两格</li><li>前方2格是1，则不进行任何操作</li><li>前方2格是5，则人的坐标变成人前一格，白箱子变成黑箱子并将的坐标变成人前两格（或黑箱子的坐标变成人前两格）</li></ul></li></ol><p><font color=#29c690>以上太繁琐了是吗？不要紧，看游戏逻辑里面的TXT就行</font><br>接下来我们用<code>switch()</code>判断人前是什么物品，通过x和y的简单加减，便可以确定人前的坐标，进而通过二维数组知道是何物品，最后再次通过x和y的简单加减，便可改变该坐标的物品</p><h2 id="5、时刻更新白箱子的状态">5、时刻更新白箱子的状态</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新白箱子状态</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UpBox</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Box_num; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (Sence[Box_y[i]][Box_x[i]] == <span class="number">0</span>) &#123;</span><br><span class="line">Sence[Box_y[i]][Box_x[i]] = <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这步操作很简单，就是单纯把所有初始白箱子的坐标全检测一变，如果在进行<code>人物操作后</code>改坐标是0（空地），则更新为5（星星）</p><h2 id="6、游戏胜利条件">6、游戏胜利条件</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//游戏胜利条件之一(场上白箱子为0)</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">GameO</span><span class="params">(<span class="type">int</span> width, <span class="type">int</span> lenth)</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; width; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; lenth; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (Sence[i][j] == <span class="number">3</span>) &#123; <span class="keyword">return</span> <span class="number">1</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同理，检测<code>人物操作前</code>白箱子数量，若为0则函数返回整数1，否则返回0<br><mark>注意！！！白箱子为0的情况还包括人位于在最后一个白箱子的坐标处，所以一定要这种情况排除！！！</p><h1>四、添加选关窗口、图片、音乐</h1><h1>五、注意的地方</h1><h1>六、使用的工具</h1><h1>七、结语</h1>]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JLU_Learn </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;  }    div#menus {    font-family: 'ZhuZiAYuanJWD';  }  h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;  }  a.article-title,  a.blog-slider__title,  a.categoryBar-list-link,  h1.post-title {    font-family: ZhuZiAYuanJWD;  }    .iconfont {    font-family: 'iconfont' !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }    /* 时间轴生肖icon */  svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;  }    .icon-zhongbiao::before {    color: #f7c768;  }    /* bilibli番剧插件 */  #article-container .bangumi-tab.bangumi-active {    background: var(--anzhiyu-theme);    color: var(--anzhiyu-ahoverbg);    border-radius: 10px;  }  a.bangumi-tab:hover {    text-decoration: none !important;  }  .bangumi-button:hover {    background: var(--anzhiyu-theme) !important;    border-radius: 10px !important;    color: var(--anzhiyu-ahoverbg) !important;  }  a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;  }  .bangumi-button {    padding: 5px 10px !important;  }    a.bangumi-tab {    padding: 5px 10px !important;  }  svg.icon.faa-tada {    font-size: 1.1em;  }  .bangumi-info-item {    border-right: 1px solid #f2b94b;  }  .bangumi-info-item span{    color: #f2b94b;  }  .bangumi-info-item em{    color: #f2b94b;  }    /* 解决artitalk的图标问题 */  #uploadSource > svg {    width: 1.19em;    height: 1.5em;  }    /*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */  #page-header:not(.not-top-img):before {    background-color: transparent !important;  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);  }    /* 文章页面正文背景 */  div#post {    background: rgba(255, 255, 255, 0.9);  }    /* 分页页面 */  div#page {    background: rgba(255, 255, 255, 0.9);  }    /* 归档页面 */  div#archive {    background: rgba(255, 255, 255, 0.9);  }    /* 标签页面 */  div#tag {    background: rgba(255, 255, 255, 0.9);  }    /* 分类页面 */  div#category {    background: rgba(255, 255, 255, 0.9);  }    /*夜间模式伪类遮罩层透明*/  [data-theme='dark'] #recent-posts > .recent-post-item {    background: #121212;  }    [data-theme='dark'] .card-widget {    background: #121212 !important;  }    [data-theme='dark'] div#post {    background: #121212 !important;  }    [data-theme='dark'] div#tag {    background: #121212 !important;  }    [data-theme='dark'] div#archive {    background: #121212 !important;  }    [data-theme='dark'] div#page {    background: #121212 !important;  }    [data-theme='dark'] div#category {    background: #121212 !important;  }    [data-theme='dark'] div#category {    background: transparent !important;  }  /* 页脚透明 */  #footer {    background: transparent !important;  }    /* 头图透明 */  #page-header {    background: transparent !important;  }    #rightside > div > button {    border-radius: 5px;  }    /* 滚动条 */    ::-webkit-scrollbar {    width: 10px;    height: 10px;  }    ::-webkit-scrollbar-thumb {    background-color: #425aef;    border-radius: 2em;  }    ::-webkit-scrollbar-corner {    background-color: transparent;  }    ::-moz-selection {    color: #fff;    background-color: #425aef;  }    /* 音乐播放器 */    /* .aplayer .aplayer-lrc {    display: none !important;  } */    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }    .aplayer.aplayer-fixed {    z-index: 999999 !important;  }    /* 评论框  */  .vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;  }    /* 设置评论框 */    .vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;  }    /* 鼠标图标 */  body {    cursor: url('/img/x1.cur'), auto;  }  a,  [type='button']:not(:disabled),  [type='reset']:not(:disabled),  [type='submit']:not(:disabled),  button:not(:disabled) {    cursor: url('/img/x2.cur'), auto !important;  }  /* md网站下划线 */  #article-container a:hover {    text-decoration: none !important;  }    #article-container #hpp_talk p img {    display: inline;  }    /* 404页面 */  #error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);  }    #error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;  }    #error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #425aef;    background-position: center;    background-size: cover;  }    #error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei', 'Microsoft YaHei', sans-serif;  }  #error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;  }  #error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;  }  #error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);  }    #body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;  }    #body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;  }    #body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;  }    #body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;  }    #body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--heo-card-bg);    display: flex;  }    #body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: rgb(255, 255, 255);  }    #body-wrap.error .aside-list .aside-list-item .content time {    display: none;  }    /* 代码框主题 */  #article-container figure.highlight {    border-radius: 10px;  }  ]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>life</title>
      <link href="/life/index.html"/>
      <url>/life/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>打卡</title>
      <link href="/life/%E6%89%93%E5%8D%A1/2022.10.html"/>
      <url>/life/%E6%89%93%E5%8D%A1/2022.10.html</url>
      
        <content type="html"><![CDATA[<h1>2022.10.12</h1><ol><li><mark>核酸</li><li><mark>英语单词 50 new &amp;&amp; xx old</li><li>线性代数</li><li>微积分</li><li><mark>阅读白皮书</li><li>专业作业 04 end</li><li><mark>心理课</li><li>（数据结构与算法）</li></ol><h1>2022.10.13</h1><ol><li><mark>核酸</li><li><mark>核酸志愿者</li><li><mark>英语单词 50 new &amp;&amp; xx old</li><li><mark>写完白皮书</li><li>线性代数</li><li>微积分</li><li><mark>心理课</li></ol><h1>2022.10.14</h1><ol><li><mark>核酸</li><li><mark>核酸志愿者</li><li>英语单词 50 new &amp;&amp; xx old</li><li>线性代数 [4]</li><li>微积分 [4]</li><li><mark>心理课</li><li><mark>书信志愿</li></ol><h1>2022.10.15</h1><ol><li><mark>核酸</li><li><mark>英语单词 50 new &amp;&amp; xx old</li><li><mark>线性代数 [4]</li><li>微积分 [4]</li><li><mark>心理课</li></ol><h1>2022.10.15</h1><ol><li><mark>核酸</li><li><mark>英语单词 50 new &amp;&amp; xx old</li><li><mark>线性代数 [4]</li><li>微积分 [4]</li><li><mark>心理课</li></ol><h1>2022.10.16</h1><ol><li><mark>核酸</li><li><mark>英语单词 50 new &amp;&amp; xx old</li><li><mark>线性代数 [4]</li><li>微积分 [4]</li><li>心理课</li></ol><h1>2022.10.17</h1><ol><li><mark>核酸</li><li><mark>英语单词 50 new &amp;&amp; xx old</li><li><mark>线性代数 [4]</li><li>微积分 [4]</li><li>心理课</li><li><mark>【程序设计（指针）】</li></ol><h1>2022.10.18</h1><ol><li><mark>核酸</li><li>英语单词 50 new &amp;&amp; xx old</li><li>线性代数 [4]</li><li><mark>微积分 [4]</li><li>心理课</li><li><mark>程序设计（指针）</li><li><mark>【程序设计（结构体）】</li></ol><h1>2022.10.19</h1><ol><li><mark>核酸</li><li><mark>英语单词 50 new &amp;&amp; xx old</li><li>线性代数 [4]</li><li><mark>微积分 [4]</li><li>心理课</li><li><mark>程序设计（mococ）</li></ol><h1>2022.10.20</h1><ol><li><mark>核酸</li><li><mark>英语单词 50 new &amp;&amp; xx old</li><li>线性代数 [4]</li><li><mark>微积分 [4]</li><li>心理课</li><li>数据结构与算法</li><li><mark>程序设计（mooc）</li></ol><h1>2022.10.21</h1><ol><li><mark>核酸</li><li><mark>英语单词 50 new &amp;&amp; xx old</li><li>线性代数 [4]</li><li><mark>微积分 [4]</li><li>心理课</li><li>数据结构与算法</li><li><mark>程序设计（mooc）</li></ol><h1>2022.10.22</h1><ol><li><mark>核酸</li><li><mark>英语单词 50 new &amp;&amp; xx old</li><li>线性代数 [4]</li><li><mark>微积分 [4]</li><li><mark>心理课</li><li><mark>数据结构与算法</li><li><mark>程序设计（mooc）</li><li><mark>30s社团视频</li><li><mark>心理实验被试</li><li>脑科学视频*2</li></ol><h1>2022.10.23</h1><ol><li><mark>核酸</li><li><mark>英语单词 50 new &amp;&amp; xx old</li><li>线性代数 [4]</li><li>微积分 [4]</li><li>心理课</li><li><mark>数据结构与算法</li><li><mark>程序设计（mooc）</li><li>脑科学视频*2</li><li><mark>英语作文</li></ol><h1>2022.10.24</h1><ol><li><mark>核酸</li><li>英语单词 50 new &amp;&amp; xx old</li><li>线性代数 [4]</li><li>微积分 [4]</li><li>心理课</li><li>数据结构与算法</li><li><mark>程序设计（学习通）</li><li><mark>补全英语作文</li></ol><h1>2022.10.25</h1><ol><li>核酸</li><li>英语单词 50 new &amp;&amp; xx old</li><li>线性代数 [4]</li><li>微积分 [4]</li><li>心理课</li><li>数据结构与算法</li><li>脑科学视频*2</li><li>链表题</li></ol>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>星星</title>
      <link href="/life/%E6%98%9F%E6%98%9F.html"/>
      <url>/life/%E6%98%9F%E6%98%9F.html</url>
      
        <content type="html"><![CDATA[<p><mark>以下内容以经过简单加密</p><p>今天是国庆节</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--··· ····· ----- ---·· ····· ····· ····· ·---- -···· -···· --··· ····- -···· ---·· ---·· -···· ····· ·---- ···-- ---·· ----· ----- ··--- ----· ····· ····· ····· -···· --··· ····- ----· ----- -···· ····- ----· ····- ····· ·---- ----· ····- ····· ----· ----- -···· --··· ----· ··--- ··--- ----· -···· ----· ··--- ----· -···· ····· ----· ·---- ·---- -···· ··--- ----- ----· -···· ---·· ····- ····- ··--- ·---- --··· -···· ---·· ··--- -···· ····- ····- --··· ····- ····- ··--- ----- --··· ····· ----- ---·· --··· -···· ---·· ··--- -···· ···-- ····· ····· --··· ····· ----- ---·· ----· -···· ····· ----· --··· ·---- ····· ··--- ····· -···· ··--- -···· ····- ····- ··--- ·---- ····· ·---- ····· ·---- ····· ·---- ----· --··· ··--- -···· ···-- -···· ····· -···· -···· ····· ····· -···· ····· --··· ····· ----· --··· ··--- ----- ···-- ···-- ··--- ····· ----- --··· ····· ····- ····- ··--- ----- --··· ····· ----- ---·· --··· ·---- ···-- ·---- ··--- ····· ----· ···-- ····· ····· ----- ----- ·---- ····· ·---- ····· ----· ·---- -···· ----- --··· ·---- --··· ---·· ----· -···· ····· ----· ····· ·---- ··--- ··--- ----· ----· --··· ····- ----· ··--- ····- ···-- ····· ----· ---·· ---·· -···· ----· -···· ---·· --··· ···-- -···· ----· ····- ····- ··--- ·---- --··· ----- ···-- ····- ····· ····· ···-- ·---- -···· ----- ·---- --··· --··· ----- ---·· ----- ----- -···· ··--- ----· ····- ····- ··--- ·---- --··· ----- ···-- ····- ---·· ·---- ··--- ····· ----- -···· -···· ----· ----· ····- ···-- ·---- ····- ····- ··--- ·---- --··· ----- ···-- ····- ·---- ----- -···· ·---- ····· -···· -···· ----- -···· ----- ·---- --··· ----· ----· ----- ---·· ····- ····- ··--- ·---- --··· ----- ···-- ····- ----· ····- ···-- ·---- ----· ···-- --··· ····· -···· ---·· ----· ----· ····· ---·· ----- ·---- ····- ····- ··--- ·---- --··· ----- ···-- ····- ·---- ····· ·---- ····· ----· ·---- -···· ----- --··· ·---- --··· ---·· ----· ----· ---·· ····· -···· ---·· ---·· -···· ----- --··· ···-- ····· --··· -···· -···· -···· --··· ·---- -···· -···· ····- ····- ··--- ----- --··· ····· ----- ---·· ----- ---·· ·---- ---·· ····· ····· ----- ----- ····· ---·· ----- ··--- ····· ····· --··· ····· -···· ----· --··· ····· --··· ----- -···· ----· ····- ····- ··--- ----- ····· -···· ----· -···· --··· ····· ----- ---·· ·---- ··--- ····· ---·· --··· ----- ····· ···-- -···· ··--- ··--- -···· ·---- ·---- -···· ··--- ----- ----· -···· ---·· ····- ····- ··--- ·---- ·---- ---·· ····- ····· ----· -···· ··--- ····· ·---- ---·· ····- ····· ----· ··--- ····- ··--- ····- ····- ··--- ·---- --··· ··--- ····· ----· --··· ·---- ····· ····- ····· ····· ····· ···-- ----· --··· ----· ····- ·---- ·---- ··--- ····· ----· ····· ····- ····- -···· ----· ----- ----- ----· -···· ····· ----· --··· ----· ----- ----- ····· ·---- ···-- ·---- --··· ----- ····· ···-- ····· ··--- ·---- ---·· ·---- ···-- ----· ····- ····- ····- ··--- ----- ----· ----· ····- ····- ---·· ----- ----· ----· --··· ····· ----- ---·· ····· ----· ----- ·---- ····· ----· ----- -···· ····· ····· ----- ----- --··· ----- ····· ·---- -···· -···· ---·· -···· ·---- ··--- -···· ····- ····· -···· -···· ----- ····· ····· ----- ··--- -···· ····- ····· ·---- ····- ····- ··--- ----- --··· ----- ····· ···-- ····· ··--- ----- ····- ····- ····- ··--- ·---- ····· ····· ····· -···· ····· ····· --··· ····· ····· ····· ···-- ·---- -···· ···-- --··· ··--- ···-- ····· -···· ····· --··· ----- ···-- ----- ·---- ----- ---·· ----- --··· ----· ····- ·---- -···· ----· ---·· --··· ·---- ·---- ····- ---·· --··· ---·· ----· ----· ----· ----· -···· ···-- ··--- ····· ---·· ····· ····· ··--- -···· ·---- ····- ····- ··--- ·---- ·---- ··--- ----- ··--- --··· ----- ····· ···-- ----- ····- --··· ·---- -···· ····· ····- ····· ····· ----- ····· ····· -···· ····· ····- ····· ----· -···· ····· ----· ····- ····- ··--- ·---- --··· ----- ····· ···-- ·---- ··--- -···· ····- ----· ----· --··· ····- --··· ----· ··--- ··--- ---·· -···· --··· ··--- --··· -···· ····· ··--- --··· -···· --··· ---·· ----· -···· ····· ----· -···· ····· ····- ····· ····· ----- ····· ·····  </span><br></pre></td></tr></table></figure><p>——————————<br>我也回想到了过去<br>那年我认识了一个6岁的小男孩</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">·---- ··--- -···· ····- ····· ····· --··· ····· -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ····· ····- ·---- -···· --··· ----- ···-- ----· ··--- ····· ---·· ····· -···· -···· ····- ---·· ····· ····· ----· ···-- --··· ----- ····· ···-- ··--- ····· ---·· ····· -···· ···-- ····· ····· -···· ···-- -···· ·---- --··· ···-- ·---- ··--- ----· -···· ····· ----· ····- ····- ··--- ·---- ····· ··--- ---·· ----- ····· -···· -···· ··--- ····· -···· ----· ····- ····· ····· ···-- ·---- ·---- ··--- ----- ··--- ····· ·---- ·---- ···-- ····· -···· -···· ····· -···· ···-- -···· ·---- --··· ···-- ·---- ··--- ----· -···· ·---- -···· ----- ··--- -···· ····· ····- ····- ··--- ----- ----· -···· ·---- ····· ····· ----· ----- -···· ····· ·---- ···-- ---·· ····· -···· ··--- -···· ·---- ··--- -···· ····- ····· ····· ····· -···· ····· -···· -···· ----- ····· -···· -···· ----- ····· ····· ····· ···-- -···· ····· ---·· ····· ····· ····- ---·· --··· ··--- ----· ----· ----- ----· -···· ····· ----· ····· ····· ----- ··--- ----· ····· ····- ····- ---·· ····- ---·· --··· ····· ····- ·---- -···· -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ----· -···· ····· ----· ·---- ----- ····· ····· ····· ····· ····· ·---- ····- ····- ··--- ·---- ·---- ·---- ----· ----· --··· ····· ----- --··· ----· -···· ····· ----· --··· ----- ··--- ··--- -···· -···· --··· --··· ----· -···· ····· ----· --··· ----- ····· ···-- ----· ··--- ---·· ··--- ----· ---·· ··--- ··--- ····· ····· ····· ·---- ----· -···· ····· ----· ····· --··· ···-- -···· -···· ---·· ·---- ----· ····- ····- ··--- ----- --··· ····· ----- ---·· ----· --··· ----· ····- ·---- ·---- ··--- ····· ····- ····- ··--- ·---- ---·· ····- ···-- -···· --··· ----- -···· ----· ----· -···· ····· ----· -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- --··· ----· ··--- ··--- --··· ----· --··· --··· --··· ····- ----· ----- -···· ····- --··· ··--- -···· ··--- ···-- ---·· ····· ---·· ·---- --··· --··· ···-- ·---- ····- ····· ····· ····· -···· ·---- ----· ·---- ····· ----- ····· ··--- ····- ····· ····· ····· ··--- ····- ····- ··--- ·---- --··· ····· ----- ··--- ----- ····· ··--- ----· ·---- ----· -···· ····· ····· ----· ----- -···· --··· ···-- ·---- ····- ··--- ---·· ····· ··--- ····- ····- ··--- ·---- ·---- ·---- ····- ---·· --··· ---·· ----· ----· ----· ----· -···· ···-- ····· ·---- ---·· ··--- ····- ····- ··--- ·---- ····· ····· ----· ···-- --··· ----- ···-- --··· --··· ----· ··--- ··--- --··· ----· --··· --··· --··· ····- ----· ----- -···· ····- --··· ··--- ·---- ·---- ·---- ----- ····· ----· ···-- ····· ----- --··· ····· ----- ----- --··· ·---- -···· ----· -···· ----· ··--- ····- ····- ··--- ·---- --··· ····· ----- ··--- ----- ····· ··--- ----· ----- ----- --··· ····· ·---- ----- ····· ····· -···· -···· --··· ····- ---·· -···· ···-- ····- ····- ····- ··--- ----- ·---- ·---- ---·· ···-- ····· ····· ····· ···-- --··· ----- ····· ···-- ····· ····· --··· ····· -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ·---- -···· -···· ----- --··· ----- ···-- ····- ----· -···· ····· ----· -···· ···-- ---·· ----- -···· ····- --··· ··--- ····- ····- ··--- ·---- ·---- ··--- -···· ····- ····· ····· --··· ····· --··· ----- -···· ----· ····· --··· ---·· ····· ····· -···· ····· ····· ----· -···· ····· ----· -···· ···-- ---·· ----- -···· ····- --··· ··--- ····· ····· ····· ···-- ····· ---·· ··--- ----- ····· ···-- ---·· ····· ----· ··--- ···-- ---·· ····- ····- ··--- ·---- ---·· ····· --··· ····· -···· -···· ---·· -···· ·---- ··--- ----- ··--- ····· --··· ----- ----· ----· -···· ····- --··· ····· ···-- ····- ---·· -···· -···· --··· ----- ····- ····- ··--- ----- ---·· ---·· ·---- --··· ---·· ---·· ·---- --··· ----· -···· ····· ----· ····- ····- ··--- ·---- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ··--- ····· ---·· ····· -···· -···· ····- ---·· -···· ---·· ·---- ----· -···· ···-- ---·· ····· ----- --··· ···-- ····· ····· ····· ···-- ·---- ----· -···· ·---- -···· ----- ··--- -···· ····· ····- ····- ··--- ·---- ····· ····· ····· ···-- -···· ····- ----- ····- -···· ····- ----· --··· --··· ----· -···· --··· ··--- ····· ---·· ····· -···· ···-- ····· ····· --··· ····· ···-- ----· ····- ····- ··--- ·---- ··--- ····· ---·· ····· -···· -···· ····- ---·· ····· --··· ·---- --··· ---·· ·---- ---·· ··--- ---·· ····· -···· ···-- ----· -···· ····· ----· ·---- ····- --··· ····- ····- ····- ··--- ·---- ··--- ····· ---·· ····· -···· -···· ····- ---·· ----· ····- ···-- ·---- ----· ···-- --··· ····· ·---- ····· ····- ----· ··--- ----· ····- ····- ····- ····- ··--- ·---- ··--- ····· ---·· ····· -···· -···· ····- ---·· ----- --··· ·---- -···· --··· ····· ----- ---·· -···· ····· ··--- ··--- ----- ----- ····· ··--- ····- ····- ··--- ----- --··· ····· ----- ---·· -···· ··--- ··--- -···· ··--- ----- --··· ···-- ·---- ····· ··--- ----· ····- ····- ··--- ·---- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ----- -···· ··--- ----· -···· -···· --··· ----· ····· ····- ·---- -···· -···· ----· --··· ····· -···· ----· --··· ····· -···· ·---- --··· ···-- ----· ··--- ·---- ----· ··--- ----· ····- ····- ····· ····· ····· ·---- ----· -···· ····· --··· ---·· ····- --··· ···-- ----- --··· ·---- ··--- -···· ···-- -···· ·---- ·---- ····· ····· ···-- ·---- ·---- ··--- -···· ····· ----· ----- -···· ····· ····· ····· ·---- ····· ----- ··--- ···-- ----· -···· ····· ----· ·---- ···-- ----- ----- ··--- ---·· ----· ----- ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- -···· ··--- ··--- -···· -···· ····- --··· ··--- ----· ----· -···· ···-- ··--- ····· ---·· ····· ·---- ·---- ---·· ···-- ····· ····· --··· ····· -···· ··--- ···-- ---·· -···· ----· --··· ····· ····· ----· ----- -···· -···· -···· --··· ····- ----· -···· ····· ----· -···· ---·· ·---- ··--- ····- ····- ··--- ·---- ····· ·---- ····· ·---- ---·· ····· ····- ---·· --··· ----- ···-- ····- ----- -···· ··--- ----· ····· ----- ····· ····· ····- ····- ··--- ·---- ····· -···· ····· ····· -···· ··--- ··--- -···· ---·· --··· ---·· ··--- --··· ···-- ····· ·---- ----· -···· ····· ----· ----· --··· ----· ····- ·---- ·---- ··--- ····· ····- ····- ··--- ·---- ·---- --··· --··· ·---- -···· ---·· ····- ····· ····· ····- ---·· --··· ····· -···· ··--- -···· --··· -···· ····· ····- ····· -···· ····· ····· ····- ····- ··--- -----</span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ··--- ····· ---·· ····· -···· -···· ····- ---·· ·---- --··· ---·· ····- -···· ··--- ··--- ····- ---·· ····· ····- ---·· --··· ----- ···-- ····- ·---- ·---- ··--- ····· -···· ··--- ····- ----- ····- ····- ··--- ·---- ··--- ····· ---·· ····· -···· -···· ····- ---·· ---·· ·---- ····- ····· ---·· -···· --··· ··--- ····- ····- ··--- ·---- ---·· ····· --··· ····· -···· -···· ---·· -···· ····· ·---- ····· ·---- ·---- ··--- ····· ---·· ----- ····- ----· ----· --··· ····· ----- --··· -···· -···· ---·· -···· ----· -···· ··--- ·---- ····· ·---- ·---- ···-- -···· ····- ----· ··--- ----· -···· ····· ----· --··· ···-- ··--- ----- --··· ···-- ··--- ·---- ····- ····- ··--- ----- ····· -···· ----· -···· --··· ····· ----- ---·· ----- -···· ··--- ----· ----· -···· ··--- ····· ····· ----· --··· ··--- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ····· ····- ·---- -···· -···· ····- --··· ··--- ····· ····· ···-- ··--- ···-- ····· -···· ····· ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ---·· --··· ·---- ----- --··· ----- ····- ···-- ····· ····· ····· -···· ····· -···· -···· ···-- ··--- -···· -···· -···· ····· -···· ---·· ---·· ····- ····- ··--- ·---- ---·· --··· ·---- ----- --··· ----- ····- ···-- ·---- ----- ····· ····· ·---- ··--- ····· ···-- ----· -···· ····· ----· ····· ····· ···-- ·---- ----- -···· ··--- ----· -···· -···· --··· ----· ····· ----· ----- ----- --··· ····- ··--- --··· ····· -···· ····· ····· ----· ····- ----· ····- ----· ····- ----- ···-- ····· --··· ----- ----· ····· ····· ····· ···-- ·---- -···· -···· ----- ····· --··· ----- ----· ----· -···· ····· ----· ····· ····· ----- ··--- ····- ····- ··--- ·---- ---·· --··· ·---- ----- --··· ----- ····- ···-- --··· ----- ···-- ····- ····· ····· ···-- ·---- ----- -···· ··--- ----· -···· -···· --··· ----· ----· ···-- --··· --··· ····· -···· ····· ····· -···· ···-- -···· ·---- --··· ···-- ·---- ··--- ····- ····- ··--- ----- --··· ----- -···· ----· ··--- ····· ---·· ----- ····· -···· ··--- -···· ····· ----· ----- -···· ····· ····· ----- ----- ····· ····· --··· --··· -···· ---·· ---·· -···· ····- ····- ··--- ·---- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- -···· ··--- ··--- -···· -···· ·---- ---·· ····· ·---- ·---- ·---- ---·· ····- ····- ··--- ·---- ·---- ·---- ----- ··--- ·---- ····· -···· ----- ····· ····· ----- ----- ····· ····· ····· -···· ····· ····· --··· ····· ----· ···-- --··· --··· ····· -···· ····· ····· -···· ···-- -···· ·---- --··· ···-- ·---- ··--- ----· -···· ····· ----· ····· ····· ···-- ·---- ····- ····- ··--- ·---- ····· -···· ····· ····· ·---- ---·· ···-- --··· ····· ----· --··· ··--- ····· -···· ··--- -···· ····· ····· ----- ----- ····- ····- ··--- ·---- ····· -···· ----· -···· ····· --··· ···-- ----· ····· --··· ···-- ----· --··· ----- ····· ···-- ····· ····- ·---- -···· -···· ---·· ---·· -···· --··· ·---- ····- ····- ····- ····- ··--- ·---- ····· --··· ···-- ----· ····· --··· ···-- ----· --··· ----- ····· ···-- ····· ····- ·---- -···· ---·· ···-- ····· ---·· ----· ··--- ···-- ··--- ····- ····- ··--- ·---- ----· ----· -···· ···-- ··--- ····· ---·· ····· ---·· ···-- ····· ---·· ----· ··--- ···-- ··--- ····- ····- ··--- ·---- ····· -···· ····· ····· ····· ·---- ----· --··· ·---- ---·· ···-- --··· ····· ····- ---·· --··· ····· ·---- ---·· ··--- ····· ····· ----- ----- ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ----· -···· ··--- ····· ----· -···· ····- --··· ----- --··· ·---- -···· -···· ----- ·---- ····- ·---- ····· --··· ----· ····· ····· ···-- ·---- ····· ·---- ---·· ··--- ····· ····· -···· ---·· ····- ····- ··--- ·---- ····· ---·· ----- ----- -···· ···-- ····· ····· ---·· ····· ---·· --··· --··· ----· ··--- ··--- ---·· -···· ---·· ----· ---·· ----· ···-- --··· ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ····· ---·· ----- ----- -···· ···-- ····· ····· -···· ··--- ··--- -···· -···· ----- ···-- ----- --··· ----- ····- ···-- ----- --··· ·---- -···· -···· ----- ·---- ····- ----- -···· ··--- ----· -···· -···· --··· ----· ····· --··· ···-- -···· -···· ···-- ····· ····· ····- ····- ··--- ·---- ····· -···· ----· -···· ····· --··· ----- ----· ····· ····· ····· ···-- ····· ----· ----- -···· ····- ····- ··--- ·---- -···· ----· ---·· --··· ----· ·---- -···· ----- ····· ·---- ---·· ··--- ····· ····· -···· ---·· ----· -···· ····· ----· ·---- ····· --··· ----· ····· ····· ···-- ·---- ·---- ----· -···· ···-- ····· -···· ····· ····· --··· ----- ···-- ····- -···· ··--- ··--- -···· ··--- ····· --··· --··· --··· ----- -···· ----· ··--- ····· ---·· ----- ----· -···· ····· ----· ----· -···· ·---- -···· ----- ··--- -···· ····· ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ····· ·---- ----· --··· ··--- ····· ---·· ····· -···· -···· ····- ---·· -···· ····- --··· ··--- ----- --··· ·---- -···· ---·· ····· -···· ····· ····· ····· ----- ----- ····- ····- ··--- ·---- ·---- ·---- ---·· ···-- --··· ----- ····· ···-- ----· ----- ··--- ----· ····· ····· ····· ----- --··· ····- ----· ----- ····- ····- ··--- ----- ·---- ·---- ---·· ···-- --··· ····- ----· ----- ----- --··· ···-- ····· ····· ----· ·---- ··--- ····· ---·· ----- ··--- --··· ····- ----· ----- ····· ····· ····· ···-- ····· ·---- ···-- -···· ····- ····- ··--- ·---- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- --··· ----- ···-- ····- ----- -···· ··--- ----· ····· ----- ····· ····· ····· ····· ----- ----- ····- ····- ··--- ·---- -···· ·---- --··· ····- ····· ····· -···· -···· -···· ···-- -···· ·---- ·---- ····· ····· ···-- --··· ····· ----- --··· ····· ----- ····· -···· ····· ····· ----- ----- ····- ····- ··--- ----- ····· -···· ----· -···· -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ····· ···-- --··· ---·· --··· ····- ··--- ····· ····· ····· ····· ·---- ····· ····· ----- ----- ·---- ··--- -···· ····- ····· ····· --··· ····· ----· ···-- --··· --··· ····· -···· ····· ····· -···· ···-- -···· ·---- --··· ···-- ·---- ··--- ----· -···· ····· ----· ····· ····· ···-- ·---- ····- ····- ··--- ·---- ····· -···· ····· ····· ---·· ··--- ---·· ····· ·---- --··· ··--- ·---- ····· ····· ----- ----- ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ··--- ····· ---·· ····· -···· -···· ····- ---·· -···· ···-- ····- -···· ····· ····· ····· ·---- ··--- ····- -···· ----- ··--- ···-- ····· --··· ----· ····· -···· -···· ····- ····- ··--- ·---- ---·· ····- ···-- -···· ····· -···· ····· ····· ····· ····· ····· -···· ---·· ----- ·---- ----- ·---- ----· ···-- -···· ····- ····- ··--- ·---- ··--- ····- -···· ----- ··--- ···-- ····· --··· ----· ····· -···· -···· ····· -···· ···-- ····- ··--- ····· ---·· ····· -···· -···· ····- ---·· --··· -···· --··· ----· ----· ---·· ---·· ---·· ····· -···· ····· ····· ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ····· ---·· ·---- ·---- -···· ---·· ····- ----- -···· ·---- --··· ····- ····· ····· ····· ···-- -···· ····- --··· ··--- ····· ····- ---·· --··· -···· ---·· ·---- ··--- ····- ····- ··--- ·---- ····· -···· ····· ····· ----· -···· ····· ----· -···· ···-- ····· ····· --··· ----· ···-- ---·· -···· ----- ··--- -···· ····· ····· ····· ···-- ····· ····- ·---- -···· -···· ---·· ·---- ··--- ····· ····· --··· --··· ····- ····- ··--- ·---- ····· ····· ----· ···-- ····· ····· ····· ···-- ····· ····- ·---- -···· -···· ---·· ---·· -···· --··· ·---- ····- ····- ····· ··--- ---·· ----- ----· ---·· ----- ··--- --··· ----- ···-- ----- ····· ····· ····· ·---- ····- ····- ··--- ·---- ····· -···· ····· ····· ----· -···· ····· ----· -···· ···-- ····· ····· --··· ----· ···-- ---·· -···· ----· ---·· --··· --··· ····- ···-- ----· ····· ····· ----- ----- ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ····· ····· ····· ···-- ----· --··· ----· ····- ·---- ·---- ··--- ····· --··· ·---- ····· ··--- ····· -···· ··--- -···· ····- ····- ··--- ·---- ····· -···· ····· ····· -···· ··--- ··--- -···· -···· ···-- ----- ···-- --··· ····· ----· ····· --··· ·---- ····· ··--- ····· -···· ··--- -···· ····- ····- ··--- -----</span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ··--- ····· ---·· ····· -···· -···· ····- ---·· ---·· ····- ·---- ·---- -···· ---·· ··--- --··· ····- ····- ··--- ·---- ····· -···· ····· ····· ····· ···-- ··--- ···-- ·---- ···-- ----· ····- ·---- -···· ----· -···· ----· -···· ····- --··· ·---- ····- ---·· ····- ---·· ----- ----- ····· ----- --··· ·---- -···· -···· ----- ·---- ····- ····- ····- ··--- ·---- ····· ---·· ·---- ·---- -···· ---·· ····- ----- ····· -···· ····· ····· ····· ··--- ····· ··--- ·---- ····· ···-- ---·· --··· ····· ----- ---·· ····- ····- ··--- ·---- ····· -···· ····· ····· ····· ····· ····· ···-- -···· ····- --··· ··--- ····· ····- ---·· --··· -···· ---·· ·---- ··--- ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ····· ····- ·---- -···· -···· ---·· ---·· -···· --··· ·---- ····- ····- -···· ··--- ··--- -···· -···· ···-- -···· ·---- --··· ···-- ·---- ··--- ····- ····- ··--- ·---- ····· -···· ----· -···· --··· ----- ···-- ····- --··· ----- -···· ----· ····· ·---- ----· --··· -···· ··--- ··--- -···· ---·· ----- ·---- ----- ·---- ----· ···-- -···· ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ····· ··--- ····· ··--- ·---- ····· ···-- ---·· --··· ····· ----- ---·· ·---- -···· ----· -···· ····· -···· ····· ····· ····· ····· ····· ···-- --··· ----- ····· ···-- ··--- ----- ----- ····- ····· ---·· ····- ··--- ····- ····- ··--- ·---- ····· --··· ···-- ----· ····· --··· ···-- ----· --··· ----- ····· ···-- ····· ····· ····· ···-- -···· ----- ···-- ----- --··· ----- ····- ···-- ····· ----· ----· ·---- ····· ····· ···-- ·---- ·---- ----· -···· ···-- ····· -···· ····· ····· ·---- -···· ····- ····- ·---- -···· -···· ----· ····- ····- ··--- ----- -···· ---·· --··· ----· ---·· ··--- ----· ··--- ····- ····- ··--- ·---- ····· ·---- ····· ·---- ····· ·---- ----· --··· ····· ····· ····· ···-- -···· ····- ----- ····- -···· ····- ----· --··· ·---- ---·· ···-- --··· ····· ----· --··· ··--- -···· ---·· --··· ----· ---·· ··--- ----· ··--- ····- ····- ··--- ·---- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- -···· ··--- ··--- -···· ----· ··--- ·---- ---·· ----· ···-- -···· ----· ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ----· ----- ··--- ----· ····· ····- ---·· ----· --··· ····- ----· ----- -···· ····- --··· ··--- ----· ----· -···· ···-- ··--- ····· ---·· ····· ····- ····- ··--- ·---- ····· -···· ----· -···· ·---- ·---- ---·· ···-- --··· ····- ----· ----- -···· ·---- --··· ····- ····· ····· ····· ···-- --··· ----- ····· ···-- ----- --··· ·---- -···· ---·· ····· -···· ····· ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- --··· ----- ···-- ····- ····· ···-- --··· ---·· --··· ····- ··--- ····· ----· -···· ····· ----· ····· ····· ···-- ·---- ····· ····· ----- ----- ····- ····- ··--- ·---- ····· -···· ----· -···· ····· -···· ····· ····· ····· ·---- ····· ·---- ····· ····· ····· ···-- --··· ----· -···· ---·· ····- ····- ··--- ·---- ····· ·---- -···· ---·· ····· -···· ·---- ····- --··· ····· ··--- ·---- --··· ----- ···-- ····- ····· ····· ···-- ·---- ·---- ··--- ----- ··--- ----· --··· ----· ····- ·---- ·---- ··--- ····· ····· -···· ····· ····· ····· ···-- --··· ---·· --··· ····- ··--- ····· ----· -···· ····· ----· -···· ----· -···· ··--- ·---- --··· ··--- --··· ····- ····- ··--- ----- --··· ····· ----- ---·· ····· ····- ·---- -···· ····· ····· ····· -···· ····· ····· --··· ····· --··· ----- -···· ····- ····· ····· ····· ·---- ···-- -···· --··· ·---- ----· -···· ····- --··· -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ·---- -···· ····- ····- ·---- ·---- -···· ----- ····· -···· ····· ····· ····· ---·· ----- ----- -···· ···-- ····· ····· ----· -···· ····· ----· -···· ····- --··· ··--- ---·· -···· --··· ··--- ····- ····- ··--- ·---- ····· -···· ····· ····· ·---- -···· ----· -···· ····· -···· ····· ····· ····· ····· ····· ···-- -···· ····- ----- ····- -···· ····- ----· --··· -···· ·---- ····· -···· ----· -···· ····- --··· ----- --··· ·---- -···· -···· ----- ·---- ····- ·---- ··--- -···· ····- -···· ····- ····· ·---- ----· ···-- ··--- --··· ····· ·---- ---·· ··--- ----· --··· ··--- ----- ····· ····- ··--- ----- -···· -···· ·---- ·---- -···· ---·· --··· ·---- ----· -···· ····· ----· ---·· ····- ---·· --··· ---·· -···· ··--- --··· ····- ····- ··--- ·---- --··· ----- ··--- ··--- ····· ····· ····· ···-- -···· ····- ----- ····- -···· ····- ----· --··· ·---- ---·· ···-- --··· ---·· ·---- ---·· ··--- ---·· ····· -···· ···-- ----· -···· ····· ----· ·---- ----· --··· ----· ····- ····- ··--- ·---- ····· -···· ····· ····· ·---- ····· ····· ···-- ····· ·---- ----· ·---- ----· -···· ····- --··· ·---- ---·· ···-- --··· ····- ····- ··--- ·---- ----· -···· ·---- ····· ····· ----· ----- -···· ----- -···· ··--- ----· ----· ···-- --··· --··· -···· -···· ·---- ·---- -···· ---·· --··· ·---- ····· ····· ····· -···· ····· ····· --··· ····· ····· --··· ····· --··· ··--- -···· ----· ····· ····- ····- ··--- -----</span><br></pre></td></tr></table></figure><p>很可惜，小男孩失败了<br>失败那年，小男孩15岁</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- --··· ····- ··--- ----· --··· ----- -···· ----· --··· ····- ··--- ---·· ·---- ----- ····· ··--- ····· ····- ·---- -···· -···· ---·· ··--- --··· ----- --··· ···-- ··--- ----· -···· ····· ----· -···· ·---- ----· ---·· ····· ····· ····· ·---- ····- ····- ··--- ·---- ----· -···· ··--- ····· ----· -···· ····- --··· --··· ····· ···-- ··--- --··· ·---- --··· ---·· ····- ····- ··--- ·---- --··· ····· ····- --··· ····· ····· ····· ··--- ····· ····· ····· -···· ----- ···-- ···-- ··--- ····· ·---- ----· --··· ····· ····· ····· -···· ----- ···-- ···-- ··--- ----· -···· ····· ----· -···· ---·· -···· ·---- ····- ····- ··--- ----- ·---- ·---- ---·· ···-- --··· ----- ····· ···-- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ·---- ·---- ---·· ···-- ····· ----- ··--- ··--- ····· ----· -···· ----- -···· ·---- --··· ···-- ---·· ····- ---·· ···-- ·---- ·---- ·---- ----- --··· ----- ···-- ----· --··· ----- ···-- ····- --··· ----· ····· ····· ----· -···· ····· ----· --··· ----· ----- ----- -···· ··--- ····· ····- ····- ····- ··--- ·---- ····· ·---- ···-- ·---- -···· -···· --··· ····· ---·· ····- ----- ----· ·---- ----- ----- -···· ····· ----· --··· ··--- ----- --··· ·---- -···· -···· ----- ·---- ····- ----· -···· ····· ----· -···· ····· ····- ····· ····· ----- ····· ·····</span><br></pre></td></tr></table></figure><p>——————————</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--··· ····· ----- ---·· -···· ----· ····· ····· ·---- ·---- ·---- ----- --··· ----· ··--- ··--- --··· ----· --··· --··· --··· ····- ----· ----- -···· ---·· ----- ··--- ---·· -···· -···· ···-- --··· ----· --··· ····- ----· ----- ----· ----- ····- ····- ··--- ·---- --··· ----- ···-- ----· ····· ·---- ···-- ---·· ····· ·---- ····· ·---- ·---- ··--- ----- ··--- --··· ----- ···-- ----- ····· ----- ----- ---·· ---·· ·---- ---·· ----· ----· ··--- ···-- ·---- -···· ----· ----- ----· ····- ····- ··--- ·---- ····· ----· --··· ··--- ---·· ···-- ····· ··--- ····· ····- ·---- -···· ····· ····- ····- ···-- ····· ····- ·---- ····- --··· ··--- --··· ····- ····- ····- ··--- ·---- ····· ····· ··--- ·---- --··· ····· ----- ··--- --··· ----- ····· ···-- ····· ·---- --··· ··--- --··· ····· ··--- ·---- ·---- ···-- ----· ····- ····- ····- ··--- ----- --··· ····· ----- ---·· ····· ····· ····· ···-- ----· --··· ----· ····- ·---- ·---- ··--- ····· ·---- ·---- ---·· ···-- ----· ·---- ---·· ···-- --··· ----· --··· ····- ----· ----- ----· ----- ----· -···· ····· ----· ----· ···-- -···· ----· --··· ·---- ----- ----· -···· -···· ··--- --··· ····· -···· ----· ····- ····- ····- ··--- ·---- ····· -···· ----· -···· --··· ····· ----- ---·· ·---- ··--- ····· ---·· --··· ----- ····· ···-- -···· ··--- ··--- ····- ----· ····- ----· ····- ----· ····- ----- ···-- -···· ----· ····· ····· ····· ····· ····· ··--- ····· ·---- ---·· ··---</span><br></pre></td></tr></table></figure><p>——————————<br>现在的小男孩，已经成长大男孩了<br>今年小男孩已经18岁，开始上大学了</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ----- --··· ···-- ····· --··· ····· ----- ---·· ····· ····· ---·· ··--- ····· ----· ·---- ··--- ·---- -···· --··· ·---- ·---- --··· --··· -···· ----· -···· ····· ----· ····· ····· ····· ···-- ····· ·---- ···-- -···· ····· ····· ----- ----- ····- ····- ··--- ·---- ····· -···· ····· ····· ----· -···· ··--- ····· ·---- ---·· ···-- ·---- ····· -···· ··--- -···· ---·· ····· --··· ----· ····· -···· -···· ····· ····· ----· ·---- ··--- --··· ----- ··--- ··--- ----- --··· ·---- -···· ····· --··· ····· ··--- ····- ····- ··--- ·---- ····· ·---- ····· ·---- ····· ·---- ----· --··· --··· ----- ···-- ····- ··--- ···-- --··· ····· ····- -···· -···· ·---- -···· ···-- ----· ----- ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ····· ····- ·---- -···· ·---- -···· ····· ··--- ·---- ····- ---·· ----· ····- ····- ··--- ·---- ····· ····· ····· -···· ·---- ·---- ·---- ----· ····· ·---- ----· --··· ····· ····· ····· -···· ·---- ·---- ·---- ----· ----· -···· ····· ----· ·---- -···· ····· ··--- ·---- ····- ---·· ----· ····- ····- ··--- ·---- ····· -···· ····· ····· -···· ··--- ··--- ····- --··· -···· ····· ····- ····· ····· ···-- ·---- ····- ····- ··--- ·---- -···· ·---- --··· ····· ····· ----- ····· ----· ····· -···· ····· ····· ·---- -···· ····· ··--- ·---- ····- ---·· ----· ····- ····- ··--- ----- -···· ·---- ---·· ····· ·---- ·---- ·---- ---·· ----· -···· ····· ----· --··· ----- ····· ···-- ····- ····- ··--- ·---- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ----- ····- --··· ·---- ····· ----- --··· ····· --··· -···· ····· ····- ····· ----· ----- -···· ····· ····· ----- ----- ·---- ··--- -···· ····- ····· ····· --··· ····· ----· ···-- --··· --··· ····· -···· ····· ····· ·---- -···· ····· ··--- ·---- ····- ---·· ----· ----· -···· ····· ----· ····· ····· ···-- ·---- ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- --··· ····· -···· ·---- ····· ····· ----- ----- ·---- ····· ··--- ····- -···· -···· --··· --··· ·---- ····· -···· ·---- ----· --··· ----- -···· ····- ····- ··--- ·---- ····· -···· ····· ····· ·---- ----· -···· ···-- --··· ····· ----- ---·· ·---- -···· ----· -···· ····- ····- ··--- ·---- ·---- ·---- ---·· ···-- ····· ····· ·---- ··--- --··· ----- ····· ···-- ····· -···· ····· ····· ·---- ·---- ·---- ----- ····· ·---- ---·· ··--- ····· ----- ··--- ··--- ····· ---·· ·---- ····· -···· ·---- --··· ···-- -···· ··--- ···-- ---·· ---·· ····· ····- ---·· --··· --··· ---·· --··· ----· ----· ····- ·---- ·---- ·---- ·---- ----- ----· -···· ····· ----· ····- ····- ··--- ----- --··· ····· ----- ---·· ----· --··· ----· ····- ·---- ·---- ··--- ····· ····- ····- ··--- ·---- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ---·· ····· ····- ---·· --··· ----- ···-- ····- -···· -···· --··· --··· ····· -···· ----- -···· ----· -···· ····· ----· ----· ··--- ---·· ··--- ····· ----- ····· ····· ····· ·---- ---·· ··--- --··· --··· ---·· --··· ----· ----· ····- ·---- ····- ····- ··--- ·---- ·---- ·---- ---·· ···-- --··· ····- ----· ----- --··· ----- ····· ···-- ····· -···· ····· ····· --··· ····- ··--- ----- ····· ---·· ----- ----· ----· ---·· ----- ··--- --··· ----- ···-- ----- ····· ----· ·---- ··--- ····· ··--- ···-- ··--- ····· ····· ····· -···· ----· -···· ····· ----· ····· ····· ····· -···· --··· ····- ----· ----- --··· ·---- --··· ---·· --··· ----- ···-- ----- ····· ····· ----- ----- ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ····· ····· ····· ···-- ---·· ····- --··· ··--- -···· ····· ··--- ··--- ----- ----- ····· ··--- ····- ····- ··--- ·---- ····· ·---- ····· ·---- ····· ·---- ----· --··· ·---- ·---- -···· ··--- ----- ----· -···· ---·· ····- ····- ··--- ·---- --··· ----· ··--- ··--- ····· ----- ····· ----· ····- ····- ··--- ----- ---·· ····· ····- ---·· --··· ----- ···-- ····- ····· ····· ···-- ·---- ----- -···· ··--- ----· ----· -···· ··--- ·---- --··· ····- ··--- ---·· -···· ·---- --··· ····· ····· ----- ····· ----· -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ····- ····- ··--- ·---- -···· ··--- ···-- ---·· ····· -···· ··--- -···· -···· ·---- --··· ····· ····· ----- ····· ----· ····· -···· ····· ····· ·---- ····· ----· ---·· ····· ----· -···· ----· ----· -···· ··--- ·---- --··· ····- ··--- ---·· ····· ---·· ----- ----- -···· ···-- ····· ····· ····· ··--- ····- ----- ··--- ---·· ----· ----· ----· -···· ····· ----· ---·· ····· ----- ··--- ·---- ·---- ··--- ···-- ····· ·---- ·---- --··· --··· ----- ···-- ····- ····· -···· ····· ····· ----- --··· ·---- -···· -···· ----- ·---- ····- ····- ····- ··--- ·---- ---·· ····· ····- ---·· --··· ----- ···-- ····- ····· ----· ----· ·---- ····· ····· ···-- ·---- ····- ····- ··--- ----- ---·· ···-- ····· ··--- ····· ····- ·---- -···· ····· ····· ··--- ·---- --··· ----- ····· ···-- -···· -···· ··--- --··· --··· ····- ··--- ----·</span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ····· ····· ····· ···-- -···· ···-- ----- ···-- --··· ····· ----· ····· -···· ----· -···· ··--- -···· -···· --··· ····· ----· ---·· ----- ··--- ····· ····· ··--- ----· ····- ····- ··--- ·---- ····· -···· ----· -···· ····· -···· ····· ····· ····· ····· ····· ···-- ····· ···-- --··· ---·· --··· ····- ··--- ····· -···· ----· -···· ··--- -···· -···· --··· ····· ----· ---·· ----- ··--- ····· ····· ··--- ----· ····- ····- ··--- ·---- ····· -···· ····· ····· ····· ···-- --··· ---·· --··· ····- ··--- ····· --··· ----- ···-- ····- ·---- ·---- ····- ---·· --··· ---·· ----· ----· ----· -···· ····· ----· ----· ---·· ----- ··--- ····· ····· ··--- ----· ····- ····- ··--- ·---- ·---- ·---- ····- ---·· --··· ---·· ----· ----· ----- --··· ·---- -···· -···· ----- ·---- ····- -···· ----- ···-- ----- --··· ----- ····- ···-- ----· ---·· ----- ··--- ····· ····· ··--- ----· ----· -···· ····· ----· -···· ----· -···· ··--- ·---- --··· ··--- --··· ····- ····- ··--- ·---- ----· ---·· ----- ··--- ····· ····· ··--- ----· ----· -···· ····· ----· -···· ····· ---·· ----· ····· ·---- ··--- ···-- ····- ····- ··--- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ····· ····· ····· ···-- ····· ···-- --··· ---·· --··· ····- ··--- ····· ---·· ···-- ····· ---·· ----· ··--- ···-- ··--- ----- -···· -···· --··· --··· ----- ···-- ----- ····- ····- ··--- ·---- ····· ····· ····· ···-- ····· ···-- --··· ---·· --··· ····- ··--- ····· ····· ····- ·---- -···· --··· ---·· ----· ··--- -···· ····· ---·· ----· ····· ····· ····· ·---- ····· ··--- ····· ·---- ····· ---·· ····- ··--- ··--- ---·· ·---- ----· ····- ····- ··--- ·---- ····· ····· ····· ···-- ····· ···-- --··· ---·· --··· ····- ··--- ····· ····· ··--- ····· ·---- ····· ---·· ····- ··--- ··--- ---·· ·---- ----· ----· -···· ····· ----· ····· ·---- ···-- -···· --··· ----- -···· ----· ·---- ··--- ····· ---·· --··· -···· ··--- ····- ··--- ----· ····· ···-- ····- ····- ··--- ----- ·---- ··--- -···· ····- ····· ····· ·---- ··--- ····· ····· ···-- ·---- ····· -···· ····· ····· ····· ····· ····· ···-- -···· ····- ----- ····- -···· ····- ----· --··· ·---- -···· --··· ·---- ·---- --··· --··· -···· ····- ····- ··--- ·---- ····· ·---- -···· ---·· ····· -···· ·---- ····- ····· -···· ····· ····· ----- -···· ··--- ----· -···· -···· --··· ----· ----· ---·· ----- ··--- ····· ····· ··--- ----·</span><br></pre></td></tr></table></figure><p>我也曾多次告诉小男孩要尝试去对外社交，社交一些不愿意社交的人和事，这些都是必要的<br>但小男孩可能做不到，他很努力去社交，却无法真正融入进去，他不喜欢那种氛围</p><p>小男孩希望去帮助别人，希望给孩子更多的帮助，不走他的路，所以他选择加入志愿者社<br>小男孩并没有多大的爱心，他不是所有人都愿意帮助，也不是所有问题都想解答，他只是在弥补遗憾，</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-···· ---·· ·---- ----· -···· ···-- ---·· ····· ····· ---·· ··--- ----- --··· ····- ----· ----- -···· ····- --··· ··--- ----- --··· ·---- -···· ---·· ····· -···· ·····  </span><br></pre></td></tr></table></figure><p>，同时为了让自己更快乐<br>——————————</p><p>我很高兴能认识小男孩，他给了我很多视野，一个灰色世界的视野<br>躺在床上，写着文章，或许这篇文章会出现在我的blog上，又或许会石沉大海<br>我要了一个女孩子的微信，这是第一次<br>因为</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--··· ····· ----- ---·· ····· ····- ·---- -···· -···· --··· ----· ··--- ·---- ----- ····· ····· ····· ····· ····· ·---- ----· -···· ··--- ····· ····· ----· ----- -···· ····· ····· ----- ----- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ----· -···· ····· ----· ·---- ··--- -···· ····- ····· ····· --··· ····· -···· --··· ----· ··--- ----· -···· ····· ----· -···· ··--- ----- ···-- -···· ---·· -···· -···· ····- ····- ··--- ----- ·---- ·---- ---·· ···-- ····· ····· --··· ····· -···· ··--- ----- ···-- -···· ---·· -···· -···· -···· ··--- ···-- ---·· ·---- -···· --··· ·---- ·---- --··· --··· -···· -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ··--- ····· ---·· ····· -···· -···· ····- ---·· ····· ·---- ·---- --··· ····· ----· --··· ··--- ---·· ···-- ····· ··--- ·---- ·---- ·---- ----- ····· ---·· ----- ··--- --··· ····- ----· ----- ····- ····- ··--- ----- --··· ····· ----- ---·· -···· ····- --··· ··--- ----· -···· ··--- ····· ----· -···· ··--- ····· ····- ····- ··--- ·---- --··· ····· ----- ··--- ----- ····· ··--- ----· --··· ----- ····· ···-- -···· ····- --··· ··--- -···· ··--- ---·· ·---- ----- ····- ----· ---·· -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ----· -···· ····· ----· ·---- ·---- ····- ----- --··· ····· -···· ---··  </span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--··· ····· ----- ---·· -···· ·---- --··· ····- ---·· ····· ····- ---·· --··· ----- ···-- ····- -···· ····- --··· ··--- ----· -···· ··--- ·---- --··· ····- ··--- ---·· ····· ·---- ---·· ··--- ·---- -···· ----- -···· --··· ····· ----· ---·· -···· ····- ----· ··--- ····- ····- ··--- ·---- ····· -···· ----· -···· --··· ····· ----- ---·· ----· -···· ····· ----· ·---- ····· ----- ·---- ·---- -···· ---·· ---·· ····· ·---- ·---- ···-- ----- -···· ··--- ----· ····· ·---- ----· --··· --··· ----- ···-- ----- ----· ···-- --··· --··· ····· ····· ···-- ·---- ····· ····· ····· -···· ----· ----· --··· ····- --··· ····· ----- ---·· -···· ····- --··· ··--- ·---- ·---- --··· ····· ····· ····· ···-- ·---- ----· -···· ····· ----· -···· ····- --··· ··--- ---·· -···· --··· ··--- ····- ····- ··--- ----- --··· ····· ----- ---·· ····· ····· ····· -···· ----· -···· ·---- ····· ····· ····- ·---- -···· ·---- -···· ----· ···-- --··· ----· -···· ····- ----- --··· ·---- -···· -···· ----- ·---- ····- ----· -···· ····· ----· ·---- ····· ----- ·---- ----- ···-- ···-- ··--- ····- ····- ··--- ·---- ···-- ····· ····- ·---- -···· ----· --··· -···· ----- --··· ·---- -···· -···· ----- ·---- ····- ----· -···· ····· ----· ·---- -···· -···· ----· ·---- -···· ---·· ---·· ····- ····- ··--- ·---- ····· ····· ····· ···-- -···· ----- ···-- ----- --··· ----- ····- ···-- ····· ----· --··· ··--- ·---- -···· ---·· ··--- --··· ----- ···-- -----</span><br></pre></td></tr></table></figure><p>生活还是得继续，我想用音乐去安慰自己，去学唱歌，去学吉他<br>但迷茫，恐惧，无助还是来了<br>我的未来我不知道怎么走了，我不知道谁能带我走出去，我没有模仿的人<br>是不是我一开始就错了，计算机本不适合我<br>我想学</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-···· ···-- ····· ····· ---·· ···-- -···· ····· -···· ---·· ---·· -···· ····- ····- ··--- ·---- ····· ····- ---·· ·---- ---·· ·---- ---·· ----· --··· ····· ----- ---·· -···· ····- --··· ··--- ----· ···-- --··· --··· ----- --··· ·---- -···· -···· ----- ·---- ····- ····· ····· ····· -···· ····· -···· -···· ···-- -···· ---·· ----· ----· -···· ····- ···-- ---·· ····- ····- ··--- ·---- -···· ·---- --··· ····· ····· ----- ····· ----· ····· --··· ···-- ···-- --··· ····· ----- ---·· ····· ····· ····· -···· --··· ···-- ··--- ·---- ----· -···· ····· ----· ····· ····· ···-- ·---- ·---- ---·· ···-- --··· ····· ----· --··· ··--- ----- --··· ·---- -···· -···· ----- ·---- ····- ----· -···· ····· ----· ---·· ----- ····· ····· ----- ---·· ---·· -···· ····· ····· -···· ---·· ---·· ····- ----- ----· </span><br></pre></td></tr></table></figure><p>我想学法学，因为</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--··· ····· ----- ---·· -···· ····- --··· ··--- -···· ····· -···· ··--- --··· -···· ··--- ····· ---·· ----- ···-- ---·· -···· ····- ----· ··--- ····- ····- ··--- ·---- --··· ····· ----- ---·· -···· ····- --··· ··--- ----· ···-- --··· --··· ----· ---·· ----- ··--- --··· ----- ···-- ----- --··· ----- ··--- ··--- -···· -···· --··· --··· --··· ····- ··--- ---·· ----- ····· ---·· ····· ····- ····- ··--- ·---- --··· ····· ----- ---·· ----· -···· ··--- ····· ····· ····· ····· ···-- -···· ····- ··--- ··--- ----· ---·· ----- ··--- --··· ----- ···-- ----- -···· ·---- ···-- ---·· ---·· ·---- ··--- ····· ····- ····- ··--- ·---- ----· -···· ··--- ····· ····· ····· ····· ···-- -···· ····- ··--- ··--- -···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ·---- ·---- ·---- ----- ····· ·---- ---·· ··--- ----· -···· ····· ----· ·---- ····· ····- ----· ··--- ----· ····- ····- ----- ···-- ···-- ··--- ---·· ·---- ---·· ----·</span><br></pre></td></tr></table></figure><p>但我从没想学计算机</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-···· ----· --··· ····· ---·· ····- ----· ···-- -···· ---·· --··· ·---- ---·· ····- ···-- -···· ····· ----· ----· ---·· -···· ····- --··· ··--- ·---- ·---- ·---- ----- ····- ····- ··--- ·---- ····· ····- ·---- -···· ·---- ··--- -···· ····- ---·· ····· ····· ···-- ----· ····- ···-- ·---- ----· ···-- --··· ····· ·---- ····· ····- ----· ··--- ----· ····- ····- ----· -···· ····· ----· --··· ----- -···· ----· ····· --··· ---·· ····· ····- ····- ··--- ·---- ····· -···· ····· ····· -···· ··--- ···-- ---·· -···· ----· --··· ····· -···· ----· ---·· --··· --··· --··· ---·· ----· ·---- ····· ----- -···· ····· ····· ----- ----- ----· ····- ···-- ·---- ----· ···-- --··· ····· ····- ····- ··--- ·---- ----· ···-- ···-- --··· ----· ----· ----- ---·· ····- ····- ··--- ·---- ·---- ----- ···-- ····· ----- ··--- -···· ····- ---·· ····· ····- ---·· ····· ····· ···-- ·---- -···· ·---- ····· -···· ··--- ---·· --··· ----- ····· -···· ····· ····· ····- ····- ··--- ·---- ····· ····· ····· ···-- ---·· ----- ----· ----· --··· ----- ···-- ----- ·---- ·---- ----· ----· --··· ····· ----- --··· -···· -···· --··· --··· -···· -···· --··· ····- ----· -···· ····· ----· ----· ---·· ----- ··--- --··· ----- ···-- ----- ····· ·---- ····· ----· -···· ---·· ·---- ----·</span><br></pre></td></tr></table></figure><p>计算机真的适合我吗？我很怀疑<br>仅仅是因为接受的了我才选吗？我不赞成<br>如果再给我一次机会，我想我会选择法学，我不想走计算机的路</p><p>我已经不喜欢数学</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">····· ---·· ----· -···· -···· ----· ····· ····· ····· ----· ----- -···· ·---- ·---- ---·· ···-- ····· ··--- --··· -···· ····- ····- ··--- ·---- --··· ····· ----- ---·· -···· ----- ··--- -···· ----· ···-- ----· --··· ····· ····· ····· ···-- -···· ····- --··· ··--- ····· ····- ·---- -···· -···· ····- --··· ··--- ····· ····· ····· ··--- ····· ·---- ---·· ··--- ····· ····· ----- ----- ····- ····- ··--- ·---- --··· ····· ----- ---·· ·---- ··--- ····· ---·· --··· ----- ···-- ····- ····· ···-- --··· ---·· --··· ····- ··--- ····· ----· -···· ····· ----· ····· ····· ···-- ·---- ····- ····- ··--- ·---- --··· ····· ----- ---·· ····· ····· ····· ···-- -···· ----- ···-- ----- --··· ----- ····- ···-- --··· ----- ····· ·---- -···· -···· ---·· -···· ----· -···· ····· ----· ····· ····· ----- ··--- ----· ····· ····- ····- ---·· ····- ---·· --··· ····· ····- ·---- -···· --··· ····· ----- ---·· ·---- ----- ····· ····· ····· ····· ····· ·----</span><br></pre></td></tr></table></figure><p>这个晚上，注定是难眠的</p><p>如果这篇文章原文有幸能被看到，你要么是知道我简单的加密思路，要么就是我愿意分享给你</p><p>感谢帮助过我的所有人：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-···· --··· --··· ····- ····- ····- ··--- ···-- ··--- ····- ··--- ----·  </span><br><span class="line"></span><br><span class="line">----- --··· ---·· ·---- ··--- ····- ----- ····- ····· ----- --··· ·---- ·---- ····· ----· --··· ----· ----· --··· -···· ····· ····- ····· ----· ···-- ----- -···· ---·· ····· ····- ----· ···-- ····· ----- --··· ·---- ·---- ····· ----· --··· ----· ----· --··· -···· ·---- --··· ··--- ---·· ·---- ---·· ···-- --··· ····· ----- --··· ·---- ·---- ····· ----· --··· ----· ----· --··· -···· ----- ····- ----· ·---- ··--- ····- ····· ----- ·---- ····- ----· -···· ····· ----- --··· ·---- ·---- ····· ----· --···  </span><br><span class="line"></span><br><span class="line">···-- --··· -···· ----· -···· --··· ··--- ·---- ----- ----- ----· ----· ----· ----· --··· -···· --··· ---·· ----- -···· ··--- -···· --··· ··--- ----- ---·· ··--- ----·  </span><br><span class="line"></span><br><span class="line">--··· ··--- --··· ----· ·---- ····- ----· -···· ----· ----· --··· -···· --··· ·---- ·---- ····· ----- ····· ----· ----- ··--- -···· ···-- ---·· ----· ----· --··· -···· -···· ··--- ----- ----- ----- ·---- -···· ···-- ··--- ----- ····· ··--- ----· ----· --··· -···· ···-- --··· -···· ----· ·---- -···· -···· ----- --··· --··· ----- ···-- ----· ----· --··· -···· ----- --··· ----- ··--- ··--- --··· ···-- --··· ----- ----· -···· --··· ----· ----· --··· -···· ·---- ···-- ····· ----- ·---- ---·· --··· ---·· ----· ----· --··· -···· ----- ····- ----· ·---- --··· ····- ····· ----·  </span><br></pre></td></tr></table></figure><p>除上述之外，还有其他帮助过我的人。</p><p>2022-10-02 01:01:xx</p>]]></content>
      
    </entry>
    
    
  
</search>
